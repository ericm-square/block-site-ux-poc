{"version":3,"names":["marketButtonDropdownCss","MarketButtonDropdownStyle0","isMarketButton","el","tagName","toLowerCase","getNamespacedTagFor","MarketButtonDropdown","this","onMutationObserved","ariaAttributes","dropdownOpenedEventHandler","e","target","dropdownIsActive","setCaret","marketButtonDropdownOpened","emit","dropdownClosedEventHandler","marketButtonDropdownClosed","syncTriggerDisabledState","slottedButton","disabled","noCaret","caret","registerTrigger","querySelector","supportedDropdownTriggers","join","componentWillLoad","mutationObserver","observeAriaAttributes","componentWillRender","MarketListTagName","list","popoverContent","interactive","transient","persistListSelections","id","uuid","applyExpandableAriaControls","expanded","toString","popoverId","render","MarketDropdownTagName","MarketPopoverTagName","h","Host","key","class","interaction","popoverStrategy","popoverPlacement","name","slot","onSlotchange","part"],"sources":["src/components/market-button-dropdown/market-button-dropdown.css?tag=market-button-dropdown&encapsulation=shadow","src/components/market-button-dropdown/market-button-dropdown.tsx"],"sourcesContent":[":host {\n  display: inline-block;\n}\n\nmarket-dropdown,\n.market-dropdown {\n  width: 100%;\n}\n\nsvg {\n  /* TODO: check back on this when icon library is more finalized and/or when\n  vertical centering of icons + text in buttons is implemented */\n  fill: transparent;\n}\n","import type { Placement, PositioningStrategy } from '@popperjs/core';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { v4 as uuid } from 'uuid';\n\nimport { applyExpandableAriaControls, observeAriaAttributes, AriaAttributes } from '../../utils/aria';\nimport { supportedDropdownTriggers } from '../../utils/dropdown';\nimport type { TDropdownTriggerElement } from '../../utils/dropdown';\nimport { getNamespacedTagFor } from '../../utils/namespace';\n\n/**\n * Type guard to check if the supported trigger element is a `market-button`\n */\nfunction isMarketButton(el: TDropdownTriggerElement): el is HTMLMarketButtonElement {\n  return el.tagName.toLowerCase() === getNamespacedTagFor('market-button');\n}\n\n/**\n * @slot trigger - Expects a slotted `market-button` or `market-filter-button`.\n * @slot content - Content slotted here will appear in `market-popover`, which\n * becomes visible when the slotted trigger content is interacted with.\n * @part popover - The inner market-popover.\n */\n@Component({\n  tag: 'market-button-dropdown',\n  styleUrl: 'market-button-dropdown.css',\n  shadow: true,\n})\nexport class MarketButtonDropdown {\n  @Element() el: HTMLMarketButtonDropdownElement;\n\n  /**\n   * Defines what types of interaction the button dropdown should have\n   * (see `market-dropdown` docs for more granular explanation)\n   */\n  @Prop() readonly interaction: 'click' | 'hover' | 'persistent' = 'click';\n\n  /**\n   * Functionally and visually disables the button dropdown.\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Disabling the up/down caret.\n   */\n  @Prop() readonly noCaret: boolean = false;\n\n  /**\n   * Configuration option for Popper.js (used to position `<market-popover>`).\n   * Describes the preferred placement of the popper.\n   * https://popper.js.org/docs/v2/constructors//#placement\n   */\n  @Prop() readonly popoverPlacement: Placement = 'bottom-end';\n\n  /**\n   * Configuration option for Popper.js (used to position `<market-popover>`).\n   * Describes the positioning strategy to use. By default, it is absolute. If\n   * your reference element is in a fixed container, use the fixed strategy.\n   * https://popper.js.org/docs/v2/constructors//#strategy\n   */\n  @Prop() readonly popoverStrategy: PositioningStrategy = 'absolute';\n\n  /**\n   * Disables the default behavior of *not* persisting selections in slotted `market-list`s.\n   */\n  @Prop({ attribute: 'persist-list' }) readonly persistListSelections: boolean = false;\n\n  /**\n   * Fired whenever the button dropdown is opened.\n   */\n  @Event({ bubbles: true, composed: true }) marketButtonDropdownOpened: EventEmitter;\n\n  /**\n   * Fired whenever the button dropdown is closed.\n   */\n  @Event({ bubbles: true, composed: true }) marketButtonDropdownClosed: EventEmitter;\n\n  @State() dropdownIsActive: boolean = false;\n\n  @State() ariaAttributes: AriaAttributes;\n\n  slottedButton: TDropdownTriggerElement;\n  slottedList: HTMLMarketListElement;\n\n  mutationObserver: MutationObserver;\n\n  onMutationObserved = (ariaAttributes: AriaAttributes) => {\n    this.ariaAttributes = ariaAttributes;\n  };\n\n  @Listen('marketDropdownOpened')\n  dropdownOpenedEventHandler(e: CustomEvent<void>) {\n    if (e.target !== this.el) return;\n    this.dropdownIsActive = true;\n    this.setCaret();\n    this.marketButtonDropdownOpened.emit();\n  }\n\n  @Listen('marketDropdownClosed')\n  dropdownClosedEventHandler(e: CustomEvent<void>) {\n    if (e.target !== this.el) return;\n    this.dropdownIsActive = false;\n    this.setCaret();\n    this.marketButtonDropdownClosed.emit();\n  }\n\n  @Watch('disabled')\n  syncTriggerDisabledState() {\n    if (this.slottedButton) {\n      this.slottedButton.disabled = this.disabled;\n    }\n  }\n\n  setCaret() {\n    if (this.noCaret || !isMarketButton(this.slottedButton)) {\n      return;\n    }\n\n    if (this.dropdownIsActive) {\n      this.slottedButton.caret = 'up';\n    } else {\n      this.slottedButton.caret = 'down';\n    }\n  }\n\n  registerTrigger() {\n    this.slottedButton = this.el.querySelector(supportedDropdownTriggers.join(','));\n    this.syncTriggerDisabledState();\n    this.setCaret();\n  }\n\n  componentWillLoad() {\n    this.mutationObserver = observeAriaAttributes(this.el, this.onMutationObserved);\n  }\n\n  componentWillRender() {\n    const MarketListTagName = getNamespacedTagFor('market-list');\n\n    const list = this.el.querySelector(MarketListTagName) as HTMLMarketListElement;\n    const popoverContent = this.el.querySelector(`[slot=\"content\"]`);\n\n    if (list) {\n      // We set this here even though market-popover also sets it,\n      // because the slotted market-list's componentWillLoad hook\n      // will fire before market-popover's, and we need it to be set\n      // before the row processing that happens in that hook.\n      list.interactive = true;\n\n      list.transient = !this.persistListSelections;\n    }\n\n    if (this.slottedButton) {\n      // Ensure popover has an ID and role for aria support\n      if (!popoverContent.id) {\n        popoverContent.id = `popover-${uuid()}`;\n      }\n\n      // Persist aria attributes on the slotted button\n      applyExpandableAriaControls(this.slottedButton, {\n        expanded: this.dropdownIsActive.toString(),\n        popoverId: popoverContent.id,\n      });\n    }\n  }\n\n  render() {\n    const MarketDropdownTagName = getNamespacedTagFor('market-dropdown');\n    const MarketPopoverTagName = getNamespacedTagFor('market-popover');\n\n    return (\n      <Host class=\"market-button-dropdown\">\n        <MarketDropdownTagName\n          interaction={this.interaction}\n          popover-strategy={this.popoverStrategy}\n          popover-placement={this.popoverPlacement}\n          disabled={this.disabled}\n        >\n          <slot name=\"trigger\" slot=\"trigger\" onSlotchange={() => this.registerTrigger()}></slot>\n          <MarketPopoverTagName slot=\"popover\" part=\"popover\">\n            <slot name=\"content\"></slot>\n          </MarketPopoverTagName>\n        </MarketDropdownTagName>\n      </Host>\n    );\n  }\n}\n"],"mappings":"kNAAA,MAAMA,EAA0B,+FAChC,MAAAC,EAAeD,ECWf,SAASE,EAAeC,GACtB,OAAOA,EAAGC,QAAQC,gBAAkBC,EAAoB,gBAC1D,C,MAaaC,EAAoB,M,uKA0D/BC,KAAAC,mBAAsBC,IACpBF,KAAKE,eAAiBA,CAAc,E,iBApD2B,Q,cAKX,M,aAKlB,M,sBAOW,a,qBAQS,W,2BAKuB,M,sBAY1C,M,8BAcrC,0BAAAC,CAA2BC,GACzB,GAAIA,EAAEC,SAAWL,KAAKL,GAAI,OAC1BK,KAAKM,iBAAmB,KACxBN,KAAKO,WACLP,KAAKQ,2BAA2BC,M,CAIlC,0BAAAC,CAA2BN,GACzB,GAAIA,EAAEC,SAAWL,KAAKL,GAAI,OAC1BK,KAAKM,iBAAmB,MACxBN,KAAKO,WACLP,KAAKW,2BAA2BF,M,CAIlC,wBAAAG,GACE,GAAIZ,KAAKa,cAAe,CACtBb,KAAKa,cAAcC,SAAWd,KAAKc,Q,EAIvC,QAAAP,GACE,GAAIP,KAAKe,UAAYrB,EAAeM,KAAKa,eAAgB,CACvD,M,CAGF,GAAIb,KAAKM,iBAAkB,CACzBN,KAAKa,cAAcG,MAAQ,I,KACtB,CACLhB,KAAKa,cAAcG,MAAQ,M,EAI/B,eAAAC,GACEjB,KAAKa,cAAgBb,KAAKL,GAAGuB,cAAcC,EAA0BC,KAAK,MAC1EpB,KAAKY,2BACLZ,KAAKO,U,CAGP,iBAAAc,GACErB,KAAKsB,iBAAmBC,EAAsBvB,KAAKL,GAAIK,KAAKC,mB,CAG9D,mBAAAuB,GACE,MAAMC,EAAoB3B,EAAoB,eAE9C,MAAM4B,EAAO1B,KAAKL,GAAGuB,cAAcO,GACnC,MAAME,EAAiB3B,KAAKL,GAAGuB,cAAc,oBAE7C,GAAIQ,EAAM,CAKRA,EAAKE,YAAc,KAEnBF,EAAKG,WAAa7B,KAAK8B,qB,CAGzB,GAAI9B,KAAKa,cAAe,CAEtB,IAAKc,EAAeI,GAAI,CACtBJ,EAAeI,GAAK,WAAWC,K,CAIjCC,EAA4BjC,KAAKa,cAAe,CAC9CqB,SAAUlC,KAAKM,iBAAiB6B,WAChCC,UAAWT,EAAeI,I,EAKhC,MAAAM,GACE,MAAMC,EAAwBxC,EAAoB,mBAClD,MAAMyC,EAAuBzC,EAAoB,kBAEjD,OACE0C,EAACC,EAAI,CAAAC,IAAA,2CAACC,MAAM,0BACVH,EAACF,EAAqB,CAAAI,IAAA,2CACpBE,YAAa5C,KAAK4C,YAAW,mBACX5C,KAAK6C,gBAAe,oBACnB7C,KAAK8C,iBACxBhC,SAAUd,KAAKc,UAEf0B,EAAA,QAAAE,IAAA,2CAAMK,KAAK,UAAUC,KAAK,UAAUC,aAAc,IAAMjD,KAAKiB,oBAC7DuB,EAACD,EAAoB,CAAAG,IAAA,2CAACM,KAAK,UAAUE,KAAK,WACxCV,EAAA,QAAAE,IAAA,2CAAMK,KAAK,c"}