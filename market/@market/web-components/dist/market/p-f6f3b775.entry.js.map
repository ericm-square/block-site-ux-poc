{"version":3,"names":["marketFilterGroupCss","MarketFilterGroupStyle0","MAX_VISIBLE_FILTERS","FILTER_GROUP_GAP","FILTER_BUTTON_WIDTH","FILTER_BUTTON_FEEDBACK_GAP","RESIZE_DEBOUNCE_DURATION","MarketFilterGroup","this","_isSearchActive","_willFocusOnFirstFilter","_willDelayDropdownOpen","_observers","throttledHandleResize","throttle","handleResize","bind","overflow","visible","maxVisibleFiltersWatcher","marketInputSearchFocusHandler","detail","marketInternalInputSearchCompactAnimationHandler","e","stopPropagation","asyncRequestAnimationFrame","marketDropdownOpenedHandler","preventDefault","setTimeout","async","_c","_b","_a","_dropdownMenuEl","shadowRoot","querySelector","getNamespacedTagFor","updateDropdownPosition","_f","_e","_d","openDropdown","CORE_ANIMATION_EXIT_TRANSITION_FAST_SPEED_DURATION","calculateOverflowButtonWidth","filterEls","length","hasValueCount","reduce","result","filterEl","listEl","value","datePickerEl","selectedStartDate","canvasEl","document","createElement","context","getContext","size","font","CORE_TYPE_PARAGRAPH_20_SIZE","CORE_TYPE_PARAGRAPH_20_FONT_FAMILY","CORE_TYPE_PARAGRAPH_30_SIZE","CORE_TYPE_PARAGRAPH_30_FONT_FAMILY","feedbackTextWidth","measureText","width","remove","getComputedWidth","el","Number","parseFloat","window","getComputedStyle","findFilterCutoffIndex","maxVisibleFilters","isNarrowBreakpoint","innerWidth","CORE_BREAKPOINT_NARROW_MAX_WIDTH","filterGroupWidth","searchWidth","_slottedInputSearchEl","tempEl","style","position","visibility","appendChild","index","filterWidths","_filterEls","dropdownMenuButtonWidth","slice","clonedFilterEl","cloneNode","display","filterElWidth","removeChild","potentialWidth","sortVisibleAndOverflowFilters","_sortedFilterEls","_filterCutoffIndex","forEach","removeProperty","getAttribute","setAttribute","isFilterCutoffUpdated","dropdownEl","expanded","closeDropdown","checkIfSearchShouldBeCompact","hasAttribute","hasFilters","Boolean","hasMoreThanMaxFilters","searchShouldBeCompact","setFocus","removeAttribute","handleInputSearchTabKeydown","key","shiftKey","blur","handleInputSearchFocus","registerSlottedInputSearch","removeEventListener","call","addEventListener","_h","_g","registerSlottedFilters","children","filter","isElementWithTagName","observeContent","content","ResizeObserver","observe","filtersOnSlotChangeHandler","connectedCallback","host","componentWillLoad","componentWillRender","disconnectedCallback","Object","entries","observer","disconnect","undefined","render","dropdownMenuButtonSize","MarketFilterDropdownMenuTagName","h","Host","class","ref","name","onSlotchange","slot"],"sources":["src/components/market-filter-group/market-filter-group.css?tag=market-filter-group&encapsulation=shadow","src/components/market-filter-group/market-filter-group.tsx"],"sourcesContent":["@import \"../../styles/mixins/component-base.css\";\n\n:host {\n  --filter-group-margin: var(--core-metrics-spacing-200);\n  --filter-group-search-width: 280px;\n\n  display: flex;\n  margin: var(--filter-group-margin);\n}\n\n.content {\n  --filter-group-button-spacing: var(--core-metrics-spacing-100);\n\n  display: flex;\n  flex: 1;\n  flex-flow: row nowrap;\n  gap: var(--filter-group-button-spacing, var(--core-metrics-spacing-100));\n}\n\n::slotted([slot=\"search\"]) {\n  max-width: var(--filter-group-search-width);\n}\n\n::slotted([slot=\"search\"]:not([compact])) {\n  min-width: var(--filter-group-search-width);\n}\n\n::slotted([slot=\"search\"][focused]) {\n  flex: 1 1 var(--filter-group-search-width);\n}\n\n@media (max-width: 599px) {\n  .content {\n    justify-content: space-between;\n  }\n\n  ::slotted([slot=\"search\"]) {\n    max-width: unset;\n  }\n\n  ::slotted([slot=\"search\"][focused]) {\n    flex: 1;\n  }\n\n  ::slotted([slot=\"filters\"]) {\n    display: inline-flex;\n    flex: 1;\n  }\n}\n","import { Component, Element, Host, h, Listen, Prop, State, Watch } from '@stencil/core';\nimport {\n  CORE_ANIMATION_EXIT_TRANSITION_FAST_SPEED_DURATION,\n  CORE_BREAKPOINT_NARROW_MAX_WIDTH,\n  CORE_TYPE_PARAGRAPH_20_FONT_FAMILY,\n  CORE_TYPE_PARAGRAPH_20_SIZE,\n  CORE_TYPE_PARAGRAPH_30_FONT_FAMILY,\n  CORE_TYPE_PARAGRAPH_30_SIZE,\n} from '@market/market-theme/js/cjs/index.js';\nimport { throttle } from 'lodash-es';\n\nimport { getNamespacedTagFor, isElementWithTagName } from '../../utils/namespace';\nimport { asyncRequestAnimationFrame } from '../../utils/raf';\nimport {\n  TMarketInputSearchFocusEventDetail,\n  TMarketInternalInputSearchCompactAnimationEventDetail,\n} from '../market-input-search/events';\n\nconst MAX_VISIBLE_FILTERS = 3;\nconst FILTER_GROUP_GAP = 8;\nconst FILTER_BUTTON_WIDTH = 50;\nconst FILTER_BUTTON_FEEDBACK_GAP = 8;\nconst RESIZE_DEBOUNCE_DURATION = 16; // 60fps\n\n/**\n * @slot search - Search input, using `<market-input-search>`\n * @slot filters - Filters, using `<market-filter>`\n */\n@Component({\n  tag: 'market-filter-group',\n  styleUrl: 'market-filter-group.css',\n  shadow: true,\n})\nexport class MarketFilterGroup {\n  @Element() el: HTMLMarketFilterGroupElement;\n\n  /**\n   * Maximum number of visible filters before they are truncated and moved into the overflow menu.\n   * However, filters may be truncated anyway if there is not enough space.\n   *\n   * @default 3\n   */\n  @Prop() readonly maxVisibleFilters: number = 3; // not using MAX_VISIBLE_FILTERS because storybook shows the variable instead of the number literal\n\n  /**\n   * Sorted overflow and visible filters\n   */\n  @State() private _sortedFilterEls: {\n    overflow: Array<HTMLMarketFilterElement>;\n    visible: Array<HTMLMarketFilterElement>;\n  } = {\n    overflow: [],\n    visible: [],\n  };\n\n  /**\n   * References to the filter elements\n   */\n  private _filterEls: Array<HTMLMarketFilterElement>;\n\n  /**\n   * Reference to the `market-filter-dropdown-menu`\n   */\n  private _dropdownMenuEl: HTMLMarketFilterDropdownMenuElement;\n\n  /**\n   * Slotted input search element\n   */\n  private _slottedInputSearchEl: HTMLMarketInputSearchElement;\n\n  /**\n   * Used to hide filters when on compact mode\n   */\n  private _isSearchActive: boolean = false;\n\n  /**\n   * Used to set the index cutoff for overflowing filters\n   */\n  private _filterCutoffIndex: number;\n\n  /**\n   * Used to focus on the first filter when 'Tab' is pressed on the input search\n   */\n  private _willFocusOnFirstFilter: boolean = false;\n\n  /**\n   * Used to delay the overflow dropdown menu from opening\n   */\n  private _willDelayDropdownOpen: boolean = false;\n\n  /**\n   * Observers\n   */\n  private _observers: {\n    content?: ResizeObserver;\n    host?: ResizeObserver;\n  } = {};\n\n  @Watch('maxVisibleFilters')\n  maxVisibleFiltersWatcher() {\n    this.handleResize();\n  }\n\n  /**\n   * Search is active when it's focused\n   */\n  @Listen('marketInputSearchFocus')\n  marketInputSearchFocusHandler({ detail }: CustomEvent<TMarketInputSearchFocusEventDetail>) {\n    this._isSearchActive = detail;\n  }\n\n  /**\n   * For every search animation event, we either show or hide filters\n   */\n  @Listen('marketInternalInputSearchCompactAnimation')\n  async marketInternalInputSearchCompactAnimationHandler(\n    e: CustomEvent<TMarketInternalInputSearchCompactAnimationEventDetail>,\n  ) {\n    e.stopPropagation();\n    await this.handleResize();\n    await asyncRequestAnimationFrame();\n\n    /**\n     * 'animationstart' means that search is expanded from its compact state.\n     * So when the dropdown menu is clicked, we defer the popover from opening\n     * right away to prevent jittery animations while elements are getting settled.\n     * (See `marketDropdownOpenedHandler` for the delay logic)\n     */\n    this._willDelayDropdownOpen = e.detail === 'animationstart';\n  }\n\n  /**\n   * Handle dropdown menu's `marketDropdownOpened` event\n   * TODO: There is no `market-dropdown` in this template below.\n   * This event is bubbling up from `market-filter-dropdown-menu`.\n   * We should refactor this to use a custom event from that instead,\n   * but that component does not yet emit custom open/close events.\n   */\n  @Listen('marketDropdownOpened')\n  marketDropdownOpenedHandler(e: CustomEvent<void>) {\n    if (!this._willDelayDropdownOpen) {\n      return;\n    }\n    this._willDelayDropdownOpen = false;\n    e.preventDefault();\n\n    /**\n     * Delay `marketDropdownOpened` and manually open the dropdown later.\n     * A little extra time (1.25x) has to be added in case the browser rendering\n     * is a bit slow. FAST x 1.25 looks like the sweet spot for now.\n     */\n    setTimeout(async () => {\n      await asyncRequestAnimationFrame();\n      await this._dropdownMenuEl?.shadowRoot\n        ?.querySelector(getNamespacedTagFor('market-dropdown'))\n        ?.updateDropdownPosition();\n      this._dropdownMenuEl?.shadowRoot?.querySelector(getNamespacedTagFor('market-dropdown'))?.openDropdown();\n    }, CORE_ANIMATION_EXIT_TRANSITION_FAST_SPEED_DURATION * 1.25);\n  }\n\n  /**\n   * The overflow feedback's text length is based on filters that have value.\n   * Basically, the button's structure is: `[ <icon> <gap> <feedback> ]`\n   */\n  private calculateOverflowButtonWidth(filterEls: HTMLMarketFilterElement[]): number {\n    // if there are no filters, the overflow button will be hidden\n    if (!filterEls?.length) {\n      return 0;\n    }\n\n    const hasValueCount = filterEls.reduce((result, filterEl) => {\n      const listEl = filterEl.querySelector(getNamespacedTagFor('market-list'));\n      if (listEl?.value) {\n        return result + 1;\n      }\n      const datePickerEl = filterEl.querySelector(getNamespacedTagFor('market-date-picker'));\n      if (datePickerEl?.selectedStartDate) {\n        return result + 1;\n      }\n      return result;\n    }, 0);\n\n    // feedback omitted when there's no selection\n    if (hasValueCount === 0) {\n      return FILTER_BUTTON_WIDTH;\n    }\n\n    // render the text in some canvas and calculate its width\n    const canvasEl = document.createElement('canvas');\n    const context = canvasEl.getContext('2d');\n    // assume that the first filter's size is the same size as the rest\n    if (filterEls[0].size === 'small') {\n      context.font = `${CORE_TYPE_PARAGRAPH_20_SIZE}px ${CORE_TYPE_PARAGRAPH_20_FONT_FAMILY}`;\n    } else {\n      context.font = `${CORE_TYPE_PARAGRAPH_30_SIZE}px ${CORE_TYPE_PARAGRAPH_30_FONT_FAMILY}`;\n    }\n    const feedbackTextWidth = context.measureText(`${hasValueCount}`).width;\n    canvasEl.remove(); // cleanup\n    return FILTER_BUTTON_WIDTH + FILTER_BUTTON_FEEDBACK_GAP + feedbackTextWidth;\n  }\n\n  private getComputedWidth(el: HTMLElement) {\n    return Number.parseFloat(window.getComputedStyle(el).width);\n  }\n\n  /**\n   * Find out where the cutoff will happen.\n   * Main chunk of the overflow logic happens here\n   */\n  private async findFilterCutoffIndex(): Promise<number> {\n    if ((this.maxVisibleFilters ?? MAX_VISIBLE_FILTERS) <= 0) {\n      return 0;\n    }\n\n    const isNarrowBreakpoint = window?.innerWidth <= CORE_BREAKPOINT_NARROW_MAX_WIDTH;\n    if (isNarrowBreakpoint && !this._isSearchActive) {\n      return 1; // show 1 filter max on narrow breakpoints\n    } else if (this._isSearchActive) {\n      return 0; // search is active so no filters should be shown\n    }\n\n    /**\n     * Get the widths of all the other components (group, search)\n     * where `FILTER_GROUP_GAP` is the gap between elements\n     */\n    const filterGroupWidth = this.getComputedWidth(this.el);\n    const searchWidth = this._slottedInputSearchEl\n      ? this.getComputedWidth(this._slottedInputSearchEl) + FILTER_GROUP_GAP\n      : 0;\n\n    /**\n     * Temporary container where we can measure filter widths\n     * https://dev.to/sstraatemans/calculate-html-element-width-before-render-4ii7\n     */\n    const tempEl = document.createElement('div');\n    tempEl.style.width = 'auto';\n    tempEl.style.position = 'absolute';\n    tempEl.style.visibility = 'hidden';\n    this.el.shadowRoot.appendChild(tempEl);\n\n    let index = 0;\n    let filterWidths = 0;\n    for (const filterEl of this._filterEls) {\n      if (index === (this.maxVisibleFilters ?? MAX_VISIBLE_FILTERS)) {\n        break;\n      }\n\n      /**\n       * Presuming that all the remaining filters (**excluding** the current one, i.e. `filterEl`)\n       * will be overflowed, calculate the potential dropdown menu button width.\n       * If this is the last filter, it will not be followed by a `market-filter-dropdown-menu`.\n       */\n      const dropdownMenuButtonWidth =\n        index + 1 === this._filterEls.length // is this the last one?\n          ? 0\n          : FILTER_GROUP_GAP + this.calculateOverflowButtonWidth(this._filterEls.slice(index));\n\n      // measure the filter's width in the temporary container\n      const clonedFilterEl = filterEl.cloneNode(true) as HTMLMarketFilterElement;\n      clonedFilterEl.style.display = 'block';\n      tempEl.appendChild(clonedFilterEl);\n\n      // let the shadow DOM render within the temp container first before measuring its width\n      await asyncRequestAnimationFrame();\n      const filterElWidth = this.getComputedWidth(tempEl);\n      tempEl.removeChild(clonedFilterEl);\n\n      // width of all the filters so far; gap is only added for filters after the first\n      filterWidths += (index > 0 ? FILTER_GROUP_GAP : 0) + filterElWidth;\n\n      // check if filter can fit\n      const potentialWidth = searchWidth + filterWidths + dropdownMenuButtonWidth;\n      if (potentialWidth >= filterGroupWidth) {\n        // it won't fit; breaking the loop sets the cutoff\n        break;\n      }\n      ++index;\n    }\n\n    // cleanup\n    this.el.shadowRoot.removeChild(tempEl);\n    tempEl.remove();\n\n    return index;\n  }\n\n  /**\n   * Sort filters:\n   * - split by `this._filterCutoffIndex`\n   * - visible filters: set attr `[slot=\"filters\"]`; remove `display: none;`\n   * - overflow filters: set attr `[slot=\"overflow-filters\"]`; add `display: none;`\n   */\n  private sortVisibleAndOverflowFilters() {\n    this._sortedFilterEls = {\n      visible: this._filterEls.slice(0, this._filterCutoffIndex),\n      overflow: this._filterEls.slice(this._filterCutoffIndex),\n    };\n    this._sortedFilterEls.visible.forEach((filterEl) => {\n      if (filterEl.style.display) {\n        filterEl.style.removeProperty('display');\n      }\n      if (filterEl.getAttribute('slot') !== 'filters') {\n        filterEl.setAttribute('slot', 'filters');\n      }\n    });\n    this._sortedFilterEls.overflow.forEach((filterEl) => {\n      if (filterEl.style.display !== 'none') {\n        filterEl.style.display = 'none';\n      }\n      if (filterEl.getAttribute('slot') !== 'overflow-filters') {\n        filterEl.setAttribute('slot', 'overflow-filters');\n      }\n    });\n  }\n\n  /**\n   * Handle screen / component resize\n   */\n  private async handleResize() {\n    if (!this.getComputedWidth(this.el)) {\n      // element isn't fully rendered yet\n      return;\n    }\n    const index = await this.findFilterCutoffIndex();\n    const isFilterCutoffUpdated = index !== this._filterCutoffIndex;\n    if (isFilterCutoffUpdated) {\n      this._filterCutoffIndex = index;\n      await asyncRequestAnimationFrame();\n      this.sortVisibleAndOverflowFilters();\n      // collapse dropdown if it's expanded\n      if (this._dropdownMenuEl) {\n        const dropdownEl = this._dropdownMenuEl.querySelector(getNamespacedTagFor('market-dropdown'));\n        if (dropdownEl?.expanded) {\n          dropdownEl?.closeDropdown();\n        }\n      }\n    }\n    this.checkIfSearchShouldBeCompact();\n  }\n\n  /**\n   * Toggle search's compact mode, if present and not focused\n   */\n  private async checkIfSearchShouldBeCompact() {\n    if (!this._slottedInputSearchEl || this._slottedInputSearchEl.hasAttribute('focused')) {\n      return;\n    }\n    const isNarrowBreakpoint = window?.innerWidth <= CORE_BREAKPOINT_NARROW_MAX_WIDTH;\n    const hasFilters = Boolean(this._filterEls?.length);\n    const hasMoreThanMaxFilters = this._filterEls.length > (this.maxVisibleFilters ?? MAX_VISIBLE_FILTERS);\n    const searchShouldBeCompact = hasFilters && (isNarrowBreakpoint || hasMoreThanMaxFilters);\n    // only toggle `compact` when value is new\n    if (searchShouldBeCompact !== this._slottedInputSearchEl.hasAttribute('compact')) {\n      if (this._slottedInputSearchEl.getAttribute('focused')) {\n        await this._slottedInputSearchEl.setFocus(false);\n      }\n      if (searchShouldBeCompact) {\n        this._slottedInputSearchEl.setAttribute('compact', '');\n      } else {\n        this._slottedInputSearchEl.removeAttribute('compact');\n      }\n    }\n  }\n\n  /**\n   * When tabbing from the search input and into the first filter,\n   */\n  private handleInputSearchTabKeydown(e: KeyboardEvent) {\n    if (e.key === 'Tab' && !e.shiftKey && this._filterEls?.length) {\n      e.preventDefault();\n      this._slottedInputSearchEl.blur();\n      this._willFocusOnFirstFilter = true;\n    }\n  }\n\n  /**\n   * When input search is focused, make sure that dropdown menu is closed\n   */\n  private handleInputSearchFocus() {\n    const dropdownEl = this._dropdownMenuEl?.shadowRoot?.querySelector(getNamespacedTagFor('market-dropdown'));\n    if (dropdownEl?.hasAttribute('expanded')) {\n      dropdownEl.closeDropdown();\n    }\n  }\n\n  private registerSlottedInputSearch() {\n    this._slottedInputSearchEl?.removeEventListener?.('keydown', this.handleInputSearchTabKeydown);\n    this._slottedInputSearchEl?.removeEventListener?.('focus', this.handleInputSearchFocus);\n    this._slottedInputSearchEl = this.el.querySelector('[slot=\"search\"]');\n    this._slottedInputSearchEl?.addEventListener?.('keydown', this.handleInputSearchTabKeydown.bind(this));\n    this._slottedInputSearchEl?.addEventListener?.('focus', this.handleInputSearchFocus.bind(this));\n\n    this.checkIfSearchShouldBeCompact();\n  }\n\n  private registerSlottedFilters() {\n    this._filterEls = [...this.el.children].filter((el): el is HTMLMarketFilterElement =>\n      isElementWithTagName(el, 'market-filter'),\n    );\n  }\n\n  private throttledHandleResize = throttle(this.handleResize.bind(this), RESIZE_DEBOUNCE_DURATION);\n\n  private observeContent(el: HTMLDivElement) {\n    if (!this._observers.content) {\n      this._observers.content = new ResizeObserver(this.throttledHandleResize);\n      this._observers.content.observe(el);\n    }\n  }\n\n  private filtersOnSlotChangeHandler() {\n    this.registerSlottedFilters();\n    this.handleResize();\n  }\n\n  connectedCallback() {\n    if (!this._observers.host) {\n      this._observers.host = new ResizeObserver(this.throttledHandleResize);\n      this._observers.host.observe(this.el);\n    }\n  }\n\n  componentWillLoad() {\n    this.registerSlottedFilters();\n    this.registerSlottedInputSearch();\n    this.handleResize();\n  }\n\n  componentWillRender() {\n    // if 'Tab' was pressed (see `handleInputSearchTabKeydown`), attempt to focus on the first filter\n    if (this._willFocusOnFirstFilter) {\n      this._filterEls?.[0]?.setFocus?.();\n      this._willFocusOnFirstFilter = false;\n    }\n  }\n\n  disconnectedCallback() {\n    Object.entries(this._observers).forEach(([key, observer]) => {\n      if (observer) {\n        observer.disconnect();\n        this._observers[key] = undefined;\n      }\n    });\n  }\n\n  render() {\n    /**\n     * The dropdown menu button will follow the size of the first filter;\n     * basically assuming that the rest of the filters follow the same size.\n     */\n    const dropdownMenuButtonSize = this._filterEls?.[0]?.size;\n\n    const MarketFilterDropdownMenuTagName = getNamespacedTagFor('market-filter-dropdown-menu');\n\n    return (\n      <Host class=\"market-filter-group\">\n        {/**\n         * .content is an inline-flex container that is observed by a ResizeObserver.\n         * In events such as filter selection where the `market-filter`'s feedback changes\n         * and in turn its overall width, `handleResize` will be triggered via ResizeObserver.\n         * The .content's width is fluid while the host's width stays at 100% of its parent.\n         */}\n        <div class=\"content\" ref={(el) => this.observeContent(el)}>\n          <slot name=\"search\" onSlotchange={() => this.registerSlottedInputSearch()}></slot>\n          <slot name=\"filters\" onSlotchange={() => this.filtersOnSlotChangeHandler()}></slot>\n          {this._sortedFilterEls.overflow.length > 0 && (\n            <MarketFilterDropdownMenuTagName\n              class=\"dropdown-menu\"\n              size={dropdownMenuButtonSize}\n              ref={(el) => (this._dropdownMenuEl = el)}\n            >\n              <slot name=\"overflow-filters\" slot=\"overflow-filters\"></slot>\n            </MarketFilterDropdownMenuTagName>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"gQAAA,MAAMA,EAAuB,68BAC7B,MAAAC,EAAeD,ECiBf,MAAME,EAAsB,EAC5B,MAAMC,EAAmB,EACzB,MAAMC,EAAsB,GAC5B,MAAMC,EAA6B,EACnC,MAAMC,EAA2B,G,MAWpBC,EAAiB,M,yBAwCpBC,KAAAC,gBAA2B,MAU3BD,KAAAE,wBAAmC,MAKnCF,KAAAG,uBAAkC,MAKlCH,KAAAI,WAGJ,GAiTIJ,KAAAK,sBAAwBC,EAASN,KAAKO,aAAaC,KAAKR,MAAOF,G,uBAvW1B,E,sBAQzC,CACFW,SAAU,GACVC,QAAS,G,CA+CX,wBAAAC,GACEX,KAAKO,c,CAOP,6BAAAK,EAA8BC,OAAEA,IAC9Bb,KAAKC,gBAAkBY,C,CAOzB,sDAAMC,CACJC,GAEAA,EAAEC,wBACIhB,KAAKO,qBACLU,IAQNjB,KAAKG,uBAAyBY,EAAEF,SAAW,gB,CAW7C,2BAAAK,CAA4BH,GAC1B,IAAKf,KAAKG,uBAAwB,CAChC,M,CAEFH,KAAKG,uBAAyB,MAC9BY,EAAEI,iBAOFC,YAAWC,U,sBACHJ,WACAK,GAAAC,GAAAC,EAAAxB,KAAKyB,mBAAe,MAAAD,SAAA,SAAAA,EAAEE,cAAU,MAAAH,SAAA,SAAAA,EAClCI,cAAcC,EAAoB,uBAAmB,MAAAN,SAAA,SAAAA,EACrDO,2BACJC,GAAAC,GAAAC,EAAAhC,KAAKyB,mBAAe,MAAAO,SAAA,SAAAA,EAAEN,cAAU,MAAAK,SAAA,SAAAA,EAAEJ,cAAcC,EAAoB,uBAAmB,MAAAE,SAAA,SAAAA,EAAEG,cAAc,GACtGC,qDAAqD,K,CAOlD,4BAAAC,CAA6BC,GAEnC,KAAKA,IAAS,MAATA,SAAS,SAATA,EAAWC,QAAQ,CACtB,OAAO,C,CAGT,MAAMC,EAAgBF,EAAUG,QAAO,CAACC,EAAQC,KAC9C,MAAMC,EAASD,EAASd,cAAcC,EAAoB,gBAC1D,GAAIc,IAAM,MAANA,SAAM,SAANA,EAAQC,MAAO,CACjB,OAAOH,EAAS,C,CAElB,MAAMI,EAAeH,EAASd,cAAcC,EAAoB,uBAChE,GAAIgB,IAAY,MAAZA,SAAY,SAAZA,EAAcC,kBAAmB,CACnC,OAAOL,EAAS,C,CAElB,OAAOA,CAAM,GACZ,GAGH,GAAIF,IAAkB,EAAG,CACvB,OAAO1C,C,CAIT,MAAMkD,EAAWC,SAASC,cAAc,UACxC,MAAMC,EAAUH,EAASI,WAAW,MAEpC,GAAId,EAAU,GAAGe,OAAS,QAAS,CACjCF,EAAQG,KAAO,GAAGC,mCAAiCC,sC,KAC9C,CACLL,EAAQG,KAAO,GAAGG,mCAAiCC,sC,CAErD,MAAMC,EAAoBR,EAAQS,YAAY,GAAGpB,KAAiBqB,MAClEb,EAASc,SACT,OAAOhE,EAAsBC,EAA6B4D,C,CAGpD,gBAAAI,CAAiBC,GACvB,OAAOC,OAAOC,WAAWC,OAAOC,iBAAiBJ,GAAIH,M,CAO/C,2BAAMQ,G,QACZ,KAAK3C,EAAAxB,KAAKoE,qBAAiB,MAAA5C,SAAA,EAAAA,EAAI9B,IAAwB,EAAG,CACxD,OAAO,C,CAGT,MAAM2E,GAAqBJ,SAAM,MAANA,cAAM,SAANA,OAAQK,aAAcC,mCACjD,GAAIF,IAAuBrE,KAAKC,gBAAiB,CAC/C,OAAO,C,MACF,GAAID,KAAKC,gBAAiB,CAC/B,OAAO,C,CAOT,MAAMuE,EAAmBxE,KAAK6D,iBAAiB7D,KAAK8D,IACpD,MAAMW,EAAczE,KAAK0E,sBACrB1E,KAAK6D,iBAAiB7D,KAAK0E,uBAAyB/E,EACpD,EAMJ,MAAMgF,EAAS5B,SAASC,cAAc,OACtC2B,EAAOC,MAAMjB,MAAQ,OACrBgB,EAAOC,MAAMC,SAAW,WACxBF,EAAOC,MAAME,WAAa,SAC1B9E,KAAK8D,GAAGpC,WAAWqD,YAAYJ,GAE/B,IAAIK,EAAQ,EACZ,IAAIC,EAAe,EACnB,IAAK,MAAMxC,KAAYzC,KAAKkF,WAAY,CACtC,GAAIF,MAAWzD,EAAAvB,KAAKoE,qBAAiB,MAAA7C,SAAA,EAAAA,EAAI7B,GAAsB,CAC7D,K,CAQF,MAAMyF,EACJH,EAAQ,IAAMhF,KAAKkF,WAAW7C,OAC1B,EACA1C,EAAmBK,KAAKmC,6BAA6BnC,KAAKkF,WAAWE,MAAMJ,IAGjF,MAAMK,EAAiB5C,EAAS6C,UAAU,MAC1CD,EAAeT,MAAMW,QAAU,QAC/BZ,EAAOI,YAAYM,SAGbpE,IACN,MAAMuE,EAAgBxF,KAAK6D,iBAAiBc,GAC5CA,EAAOc,YAAYJ,GAGnBJ,IAAiBD,EAAQ,EAAIrF,EAAmB,GAAK6F,EAGrD,MAAME,EAAiBjB,EAAcQ,EAAeE,EACpD,GAAIO,GAAkBlB,EAAkB,CAEtC,K,GAEAQ,C,CAIJhF,KAAK8D,GAAGpC,WAAW+D,YAAYd,GAC/BA,EAAOf,SAEP,OAAOoB,C,CASD,6BAAAW,GACN3F,KAAK4F,iBAAmB,CACtBlF,QAASV,KAAKkF,WAAWE,MAAM,EAAGpF,KAAK6F,oBACvCpF,SAAUT,KAAKkF,WAAWE,MAAMpF,KAAK6F,qBAEvC7F,KAAK4F,iBAAiBlF,QAAQoF,SAASrD,IACrC,GAAIA,EAASmC,MAAMW,QAAS,CAC1B9C,EAASmC,MAAMmB,eAAe,U,CAEhC,GAAItD,EAASuD,aAAa,UAAY,UAAW,CAC/CvD,EAASwD,aAAa,OAAQ,U,KAGlCjG,KAAK4F,iBAAiBnF,SAASqF,SAASrD,IACtC,GAAIA,EAASmC,MAAMW,UAAY,OAAQ,CACrC9C,EAASmC,MAAMW,QAAU,M,CAE3B,GAAI9C,EAASuD,aAAa,UAAY,mBAAoB,CACxDvD,EAASwD,aAAa,OAAQ,mB,KAQ5B,kBAAM1F,GACZ,IAAKP,KAAK6D,iBAAiB7D,KAAK8D,IAAK,CAEnC,M,CAEF,MAAMkB,QAAchF,KAAKmE,wBACzB,MAAM+B,EAAwBlB,IAAUhF,KAAK6F,mBAC7C,GAAIK,EAAuB,CACzBlG,KAAK6F,mBAAqBb,QACpB/D,IACNjB,KAAK2F,gCAEL,GAAI3F,KAAKyB,gBAAiB,CACxB,MAAM0E,EAAanG,KAAKyB,gBAAgBE,cAAcC,EAAoB,oBAC1E,GAAIuE,IAAU,MAAVA,SAAU,SAAVA,EAAYC,SAAU,CACxBD,IAAU,MAAVA,SAAU,SAAVA,EAAYE,e,GAIlBrG,KAAKsG,8B,CAMC,kCAAMA,G,QACZ,IAAKtG,KAAK0E,uBAAyB1E,KAAK0E,sBAAsB6B,aAAa,WAAY,CACrF,M,CAEF,MAAMlC,GAAqBJ,SAAM,MAANA,cAAM,SAANA,OAAQK,aAAcC,mCACjD,MAAMiC,EAAaC,SAAQjF,EAAAxB,KAAKkF,cAAU,MAAA1D,SAAA,SAAAA,EAAEa,QAC5C,MAAMqE,EAAwB1G,KAAKkF,WAAW7C,SAAUd,EAAAvB,KAAKoE,qBAAiB,MAAA7C,SAAA,EAAAA,EAAI7B,GAClF,MAAMiH,EAAwBH,IAAenC,GAAsBqC,GAEnE,GAAIC,IAA0B3G,KAAK0E,sBAAsB6B,aAAa,WAAY,CAChF,GAAIvG,KAAK0E,sBAAsBsB,aAAa,WAAY,OAChDhG,KAAK0E,sBAAsBkC,SAAS,M,CAE5C,GAAID,EAAuB,CACzB3G,KAAK0E,sBAAsBuB,aAAa,UAAW,G,KAC9C,CACLjG,KAAK0E,sBAAsBmC,gBAAgB,U,GAQzC,2BAAAC,CAA4B/F,G,MAClC,GAAIA,EAAEgG,MAAQ,QAAUhG,EAAEiG,YAAYxF,EAAAxB,KAAKkF,cAAU,MAAA1D,SAAA,SAAAA,EAAEa,QAAQ,CAC7DtB,EAAEI,iBACFnB,KAAK0E,sBAAsBuC,OAC3BjH,KAAKE,wBAA0B,I,EAO3B,sBAAAgH,G,QACN,MAAMf,GAAa5E,GAAAC,EAAAxB,KAAKyB,mBAAe,MAAAD,SAAA,SAAAA,EAAEE,cAAU,MAAAH,SAAA,SAAAA,EAAEI,cAAcC,EAAoB,oBACvF,GAAIuE,IAAU,MAAVA,SAAU,SAAVA,EAAYI,aAAa,YAAa,CACxCJ,EAAWE,e,EAIP,0BAAAc,G,qBACN5F,GAAAC,EAAAxB,KAAK0E,yBAAqB,MAAAlD,SAAA,SAAAA,EAAE4F,uBAAmB,MAAA7F,SAAA,SAAAA,EAAA8F,KAAA7F,EAAG,UAAWxB,KAAK8G,8BAClE9E,GAAAV,EAAAtB,KAAK0E,yBAAqB,MAAApD,SAAA,SAAAA,EAAE8F,uBAAmB,MAAApF,SAAA,SAAAA,EAAAqF,KAAA/F,EAAG,QAAStB,KAAKkH,wBAChElH,KAAK0E,sBAAwB1E,KAAK8D,GAAGnC,cAAc,oBACnDG,GAAAC,EAAA/B,KAAK0E,yBAAqB,MAAA3C,SAAA,SAAAA,EAAEuF,oBAAgB,MAAAxF,SAAA,SAAAA,EAAAuF,KAAAtF,EAAG,UAAW/B,KAAK8G,4BAA4BtG,KAAKR,QAChGuH,GAAAC,EAAAxH,KAAK0E,yBAAqB,MAAA8C,SAAA,SAAAA,EAAEF,oBAAgB,MAAAC,SAAA,SAAAA,EAAAF,KAAAG,EAAG,QAASxH,KAAKkH,uBAAuB1G,KAAKR,OAEzFA,KAAKsG,8B,CAGC,sBAAAmB,GACNzH,KAAKkF,WAAa,IAAIlF,KAAK8D,GAAG4D,UAAUC,QAAQ7D,GAC9C8D,EAAqB9D,EAAI,kB,CAMrB,cAAA+D,CAAe/D,GACrB,IAAK9D,KAAKI,WAAW0H,QAAS,CAC5B9H,KAAKI,WAAW0H,QAAU,IAAIC,eAAe/H,KAAKK,uBAClDL,KAAKI,WAAW0H,QAAQE,QAAQlE,E,EAI5B,0BAAAmE,GACNjI,KAAKyH,yBACLzH,KAAKO,c,CAGP,iBAAA2H,GACE,IAAKlI,KAAKI,WAAW+H,KAAM,CACzBnI,KAAKI,WAAW+H,KAAO,IAAIJ,eAAe/H,KAAKK,uBAC/CL,KAAKI,WAAW+H,KAAKH,QAAQhI,KAAK8D,G,EAItC,iBAAAsE,GACEpI,KAAKyH,yBACLzH,KAAKmH,6BACLnH,KAAKO,c,CAGP,mBAAA8H,G,UAEE,GAAIrI,KAAKE,wBAAyB,EAChCoB,GAAAC,GAAAC,EAAAxB,KAAKkF,cAAU,MAAA1D,SAAA,SAAAA,EAAG,MAAE,MAAAD,SAAA,SAAAA,EAAEqF,YAAQ,MAAAtF,SAAA,SAAAA,EAAA+F,KAAA9F,GAC9BvB,KAAKE,wBAA0B,K,EAInC,oBAAAoI,GACEC,OAAOC,QAAQxI,KAAKI,YAAY0F,SAAQ,EAAEiB,EAAK0B,MAC7C,GAAIA,EAAU,CACZA,EAASC,aACT1I,KAAKI,WAAW2G,GAAO4B,S,KAK7B,MAAAC,G,QAKE,MAAMC,GAAyBtH,GAAAC,EAAAxB,KAAKkF,cAAU,MAAA1D,SAAA,SAAAA,EAAG,MAAE,MAAAD,SAAA,SAAAA,EAAE4B,KAErD,MAAM2F,EAAkClH,EAAoB,+BAE5D,OACEmH,EAACC,EAAI,CAAAjC,IAAA,2CAACkC,MAAM,uBAOVF,EAAA,OAAAhC,IAAA,2CAAKkC,MAAM,UAAUC,IAAMpF,GAAO9D,KAAK6H,eAAe/D,IACpDiF,EAAA,QAAAhC,IAAA,2CAAMoC,KAAK,SAASC,aAAc,IAAMpJ,KAAKmH,+BAC7C4B,EAAA,QAAAhC,IAAA,2CAAMoC,KAAK,UAAUC,aAAc,IAAMpJ,KAAKiI,+BAC7CjI,KAAK4F,iBAAiBnF,SAAS4B,OAAS,GACvC0G,EAACD,EAA+B,CAAA/B,IAAA,2CAC9BkC,MAAM,gBACN9F,KAAM0F,EACNK,IAAMpF,GAAQ9D,KAAKyB,gBAAkBqC,GAErCiF,EAAA,QAAAhC,IAAA,2CAAMoC,KAAK,mBAAmBE,KAAK,uB"}