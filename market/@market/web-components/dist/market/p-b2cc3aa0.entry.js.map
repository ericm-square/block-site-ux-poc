{"version":3,"names":["getDefaultMarketColorSwatches","CORE_BURGUNDY_FILL_COLOR","CORE_RED_FILL_COLOR","CORE_ORANGE_FILL_COLOR","CORE_GOLD_FILL_COLOR","CORE_YELLOW_FILL_COLOR","CORE_TAUPE_FILL_COLOR","CORE_BROWN_FILL_COLOR","CORE_FOREST_FILL_COLOR","CORE_GREEN_FILL_COLOR","CORE_TEAL_FILL_COLOR","CORE_BLUE_FILL_COLOR","CORE_SKY_FILL_COLOR","CORE_PURPLE_FILL_COLOR","CORE_PINK_FILL_COLOR","marketColorSwatchListCss","MarketColorSwatchListStyle0","MarketColorSwatchList","valueWatcher","this","setSelectionFromValue","colorSwatchSelectedEventHandler","e","handleItemSelectedEvent","detail","eventInfo","selectedValue","selected","value","defaultPrevented","marketColorSwatchListValueChange","emit","prevValue","items","el","querySelectorAll","getNamespacedTagFor","length","shadowRoot","forEach","item","handleSlotChange","render","h","Host","key","class","role","onSlotchange","map","swatchValue"],"sources":["src/components/market-color-picker/utils.ts","src/components/market-color-picker/subcomponents/market-color-swatch-list/market-color-swatch-list.css?tag=market-color-swatch-list&encapsulation=shadow","src/components/market-color-picker/subcomponents/market-color-swatch-list/market-color-swatch-list.tsx"],"sourcesContent":["import {\n  CORE_BURGUNDY_FILL_COLOR,\n  CORE_RED_FILL_COLOR,\n  CORE_ORANGE_FILL_COLOR,\n  CORE_GOLD_FILL_COLOR,\n  CORE_YELLOW_FILL_COLOR,\n  CORE_TAUPE_FILL_COLOR,\n  CORE_BROWN_FILL_COLOR,\n  CORE_FOREST_FILL_COLOR,\n  CORE_GREEN_FILL_COLOR,\n  CORE_TEAL_FILL_COLOR,\n  CORE_BLUE_FILL_COLOR,\n  CORE_SKY_FILL_COLOR,\n  CORE_PURPLE_FILL_COLOR,\n  CORE_PINK_FILL_COLOR,\n} from '@market/market-theme/js/cjs/index.js';\n\n/**\n * Takes swatch colors string prop and converts it into a usable array. Removes any empty strings.\n * @param {string} swatchString\n */\nexport function formatSwatchArray(swatchString: string): Array<string> {\n  return swatchString.split(';').filter((el) => el);\n}\n\n/**\n * Helper function to grab default Market color swatches formatted for market-color-picker\n * @returns { string } colorString\n */\nexport function getDefaultMarketColorSwatches(): Array<string> {\n  return [\n    CORE_BURGUNDY_FILL_COLOR,\n    CORE_RED_FILL_COLOR,\n    CORE_ORANGE_FILL_COLOR,\n    CORE_GOLD_FILL_COLOR,\n    CORE_YELLOW_FILL_COLOR,\n    CORE_TAUPE_FILL_COLOR,\n    CORE_BROWN_FILL_COLOR,\n    CORE_FOREST_FILL_COLOR,\n    CORE_GREEN_FILL_COLOR,\n    CORE_TEAL_FILL_COLOR,\n    CORE_BLUE_FILL_COLOR,\n    CORE_SKY_FILL_COLOR,\n    CORE_PURPLE_FILL_COLOR,\n    CORE_PINK_FILL_COLOR,\n  ];\n}\n",":host {\n  display: grid;\n\n  /* TODO: add design tokens */\n  grid-template-columns: repeat(auto-fill, var(--color-swatch-width, 40px));\n  grid-gap: var(--color-swatch-list-spacing, 16px);\n}\n","import { Component, Element, Event, EventEmitter, Host, h, Listen, Prop, Watch } from '@stencil/core';\nimport { getNamespacedTagFor } from '../../../../utils/namespace';\nimport { getDefaultMarketColorSwatches } from '../../utils';\n\n@Component({\n  tag: 'market-color-swatch-list',\n  styleUrl: 'market-color-swatch-list.css',\n  shadow: true,\n})\nexport class MarketColorSwatchList {\n  @Element() el: HTMLMarketColorSwatchListElement;\n\n  /**\n   * A string specifying a value for the list.\n   * For a color swatch to be selected, this value should match the swatch's value.\n   * Note: all color swatch values slotted in must be **unique**!\n   * An empty string, or '', will clear the selection.\n   */\n  @Prop({ mutable: true, reflect: true }) value: string;\n\n  /**\n   * Fired whenever an item is selected or deselected.\n   */\n  @Event({ bubbles: true, cancelable: true, composed: true })\n  marketColorSwatchListValueChange: EventEmitter<{ value: string; prevValue: string }>;\n\n  @Watch('value')\n  valueWatcher() {\n    this.setSelectionFromValue();\n  }\n\n  /* Listen for the marketColorSwatchSelectedChange event which is emitted by slotted market-color-swatch elements\n  when they are clicked */\n  @Listen('marketColorSwatchSelectedChange')\n  colorSwatchSelectedEventHandler(e: CustomEvent) {\n    this.handleItemSelectedEvent(e.detail);\n  }\n\n  handleItemSelectedEvent(eventInfo: { value: string; selected: boolean }) {\n    const selectedValue = eventInfo.selected ? eventInfo.value : '';\n\n    if (this.value === selectedValue) {\n      return;\n    }\n\n    const { defaultPrevented } = this.marketColorSwatchListValueChange.emit({\n      value: selectedValue,\n      prevValue: this.value,\n    });\n\n    if (!defaultPrevented) {\n      this.value = selectedValue;\n    }\n  }\n\n  // After selection, the swatches in the list update their selected state\n  setSelectionFromValue() {\n    // First check for slotted swatches, otherwise use default in shadow dom\n    let items = [\n      ...this.el.querySelectorAll(getNamespacedTagFor('market-color-swatch')),\n    ] as Array<HTMLMarketColorSwatchElement>;\n    if (items.length === 0) {\n      items = [\n        ...this.el.shadowRoot.querySelectorAll(getNamespacedTagFor('market-color-swatch')),\n      ] as Array<HTMLMarketColorSwatchElement>;\n    }\n\n    items.forEach((item) => (item.selected = this.value === item.value));\n  }\n\n  handleSlotChange() {\n    this.setSelectionFromValue();\n  }\n\n  render() {\n    return (\n      <Host class=\"market-color-swatch-list\" role=\"list\">\n        <slot onSlotchange={() => this.handleSlotChange()}>\n          {/* Uses Market Figma default colors for the swatches, unless other colors are slotted in */}\n          {getDefaultMarketColorSwatches().map((swatchValue) => {\n            return <market-color-swatch value={swatchValue}></market-color-swatch>;\n          })}\n        </slot>\n      </Host>\n    );\n  }\n}\n"],"mappings":"iJA6BgBA,IACd,MAAO,CACLC,2BACAC,sBACAC,yBACAC,uBACAC,yBACAC,wBACAC,wBACAC,yBACAC,wBACAC,uBACAC,uBACAC,sBACAC,yBACAC,uBAEJ,CC9CA,MAAMC,EAA2B,+IACjC,MAAAC,EAAeD,E,MCQFE,EAAqB,M,iIAkBhC,YAAAC,GACEC,KAAKC,uB,CAMP,+BAAAC,CAAgCC,GAC9BH,KAAKI,wBAAwBD,EAAEE,O,CAGjC,uBAAAD,CAAwBE,GACtB,MAAMC,EAAgBD,EAAUE,SAAWF,EAAUG,MAAQ,GAE7D,GAAIT,KAAKS,QAAUF,EAAe,CAChC,M,CAGF,MAAMG,iBAAEA,GAAqBV,KAAKW,iCAAiCC,KAAK,CACtEH,MAAOF,EACPM,UAAWb,KAAKS,QAGlB,IAAKC,EAAkB,CACrBV,KAAKS,MAAQF,C,EAKjB,qBAAAN,GAEE,IAAIa,EAAQ,IACPd,KAAKe,GAAGC,iBAAiBC,EAAoB,yBAElD,GAAIH,EAAMI,SAAW,EAAG,CACtBJ,EAAQ,IACHd,KAAKe,GAAGI,WAAWH,iBAAiBC,EAAoB,wB,CAI/DH,EAAMM,SAASC,GAAUA,EAAKb,SAAWR,KAAKS,QAAUY,EAAKZ,O,CAG/D,gBAAAa,GACEtB,KAAKC,uB,CAGP,MAAAsB,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,2CAACC,MAAM,2BAA2BC,KAAK,QAC1CJ,EAAA,QAAAE,IAAA,2CAAMG,aAAc,IAAM7B,KAAKsB,oBAE5BzC,IAAgCiD,KAAKC,GAC7BP,EAAA,uBAAqBf,MAAOsB,O"}