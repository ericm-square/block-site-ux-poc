{"version":3,"names":["marketContextManagerCss","MarketContextManagerStyle0","MarketContextManager","initChildListObserver","this","childListObserver","updateChildList","stack","el","children","currentContext","length","MutationObserver","observe","childList","getCurrentContext","asyncRequestAnimationFrame","contextEmptiedEventHandler","target","emptiedContext","remove","splice","indexOf","deactivate","windowKeydown","e","key","_a","currentDialog","dismiss","origin","open","dialogEl","shouldCreateNewContext","createNewContext","close","dialogID","Promise","resolve","activate","appendChild","document","createElement","getNamespacedTagFor","lastElementChild","active","marketContextManagerDeactivated","emit","marketContextManagerActivated","handleMouseEvents","type","mouseDownEl","tagName","mouseUpEl","toLowerCase","classList","contains","_b","componentDidLoad","render","h","Host","class","onMouseDown","onMouseUp","disconnectedCallback","disconnect"],"sources":["src/components/market-context-manager/market-context-manager.css?tag=market-context-manager&encapsulation=shadow","src/components/market-context-manager/market-context-manager.tsx"],"sourcesContent":["@import \"../../styles/mixins/component-base.css\";\n\n:host {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -1000;\n  display: block;\n  overflow: hidden;\n  width: 100vw;\n  height: 100%;\n  opacity: 0%;\n\n  &([active]) {\n    z-index: 1000;\n    opacity: 100%;\n\n    /* whether click events pass through or not is managed by market-context's styles */\n    pointer-events: none;\n  }\n}\n","import { Component, Host, Method, Element, State, Prop, Event, EventEmitter, Listen, h } from '@stencil/core';\n\nimport { DialogElement } from '../../utils/dialog';\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { asyncRequestAnimationFrame } from '../../utils/raf';\n\n@Component({\n  tag: 'market-context-manager',\n  styleUrl: 'market-context-manager.css',\n  shadow: true,\n})\nexport class MarketContextManager {\n  @Element() el: HTMLMarketContextManagerElement;\n\n  /**\n   * Whether or not the context manager is UI blocking\n   */\n  @Prop({ mutable: true, reflect: true }) active: boolean = false;\n\n  @State() currentContext: HTMLMarketContextElement;\n  @State() stack: Array<HTMLMarketContextElement> = [];\n\n  mouseDownEl: HTMLElement;\n\n  childListObserver: MutationObserver;\n\n  /**\n   * Emitted when the context manager is activated/blocking is turned on\n   */\n  @Event() marketContextManagerActivated: EventEmitter;\n\n  /**\n   * Emitted when the context manager is deactivated/blocking is turned off\n   */\n  @Event() marketContextManagerDeactivated: EventEmitter;\n\n  initChildListObserver() {\n    if (this.childListObserver) return;\n\n    const updateChildList = () => {\n      this.stack = [...this.el.children] as HTMLMarketContextElement[];\n      this.currentContext = this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n    };\n\n    updateChildList();\n    this.childListObserver = new MutationObserver(updateChildList);\n    this.childListObserver.observe(this.el, { childList: true });\n  }\n\n  async getCurrentContext() {\n    while (!this.currentContext) {\n      await asyncRequestAnimationFrame();\n    }\n    return this.currentContext;\n  }\n\n  @Listen('marketContextEmptied')\n  contextEmptiedEventHandler({ target: emptiedContext }) {\n    // Remove the emptied context from the DOM\n    emptiedContext.remove();\n\n    // Remove the emptied context from the stack\n    this.stack.splice(this.stack.indexOf(emptiedContext), 1);\n\n    // Set the currentContext to the next highest context or null if this was the\n    // only context in the stack\n\n    if (this.stack.length === 0) {\n      this.deactivate();\n    }\n  }\n\n  @Listen('keydown', { target: 'window' })\n  windowKeydown(e: KeyboardEvent) {\n    if (e.key === 'Escape' || e.key === 'Esc') {\n      this.currentContext?.currentDialog.el.dismiss({ origin: this.el });\n    }\n  }\n\n  /**\n   * Adds the passed dialogEl to the DOM and creates a new context if necessary or according to\n   * `shouldCreateNewContext` if it is passed\n   */\n  @Method()\n  async open(dialogEl: DialogElement, shouldCreateNewContext?: boolean) {\n    let createNewContext = shouldCreateNewContext;\n    if (!this.currentContext || dialogEl) {\n      createNewContext = true;\n    }\n\n    // If we don't currently have a context, or we're opening certain types of\n    // dialogs, then we should create a new context\n    if (createNewContext) {\n      this.createNewContext();\n    }\n\n    await this.currentContext.open(dialogEl);\n  }\n\n  /**\n   * Closes the dialog with matching ID\n   */\n  @Method()\n  close(dialogID?: string) {\n    this.currentContext.close(dialogID);\n    return Promise.resolve();\n  }\n\n  /**\n   * Adds a new market-context to the stack in the DOM and activates it\n   */\n  @Method()\n  createNewContext() {\n    this.activate();\n\n    this.el.appendChild(document.createElement(getNamespacedTagFor('market-context')) as HTMLMarketContextElement);\n    this.currentContext = this.el.lastElementChild as HTMLMarketContextElement;\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Hides the entire context manager\n   */\n  @Method()\n  deactivate() {\n    this.active = false;\n    this.marketContextManagerDeactivated.emit();\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Shows the context manager\n   */\n  @Method()\n  activate() {\n    if (!this.active) {\n      this.active = true;\n      this.marketContextManagerActivated.emit();\n    }\n    return Promise.resolve();\n  }\n\n  handleMouseEvents(e) {\n    // checking to make sure the click started and ended on a market-context\n    // with a veil before dismissing the current dialog\n    // (clicks pass through contexts w/o veil, currently only used w/ market-blade)\n    if (e.type === 'mousedown') {\n      this.mouseDownEl = e.target.tagName;\n    } else if (e.type === 'mouseup') {\n      const mouseUpEl = e.target.tagName;\n      if (\n        this.mouseDownEl === mouseUpEl &&\n        e.target.tagName.toLowerCase() === getNamespacedTagFor('market-context') &&\n        !e.target.classList.contains('no-veil')\n      ) {\n        this.currentContext?.currentDialog?.el.dismiss({ origin: this.el });\n      }\n    }\n  }\n\n  componentDidLoad() {\n    this.initChildListObserver();\n  }\n\n  render() {\n    return (\n      <Host\n        class=\"market-context-manager\"\n        onMouseDown={(e) => this.handleMouseEvents(e)}\n        onMouseUp={(e) => this.handleMouseEvents(e)}\n      >\n        <slot></slot>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    this.childListObserver?.disconnect();\n  }\n}\n"],"mappings":"wIAAA,MAAMA,EAA0B,+XAChC,MAAAC,EAAeD,E,MCUFE,EAAoB,M,mMAM2B,M,yCAGR,E,CAgBlD,qBAAAC,GACE,GAAIC,KAAKC,kBAAmB,OAE5B,MAAMC,EAAkB,KACtBF,KAAKG,MAAQ,IAAIH,KAAKI,GAAGC,UACzBL,KAAKM,eAAiBN,KAAKG,MAAMI,OAAS,EAAIP,KAAKG,MAAMH,KAAKG,MAAMI,OAAS,GAAK,IAAI,EAGxFL,IACAF,KAAKC,kBAAoB,IAAIO,iBAAiBN,GAC9CF,KAAKC,kBAAkBQ,QAAQT,KAAKI,GAAI,CAAEM,UAAW,M,CAGvD,uBAAMC,GACJ,OAAQX,KAAKM,eAAgB,OACrBM,G,CAER,OAAOZ,KAAKM,c,CAId,0BAAAO,EAA6BC,OAAQC,IAEnCA,EAAeC,SAGfhB,KAAKG,MAAMc,OAAOjB,KAAKG,MAAMe,QAAQH,GAAiB,GAKtD,GAAIf,KAAKG,MAAMI,SAAW,EAAG,CAC3BP,KAAKmB,Y,EAKT,aAAAC,CAAcC,G,MACZ,GAAIA,EAAEC,MAAQ,UAAYD,EAAEC,MAAQ,MAAO,EACzCC,EAAAvB,KAAKM,kBAAc,MAAAiB,SAAA,SAAAA,EAAEC,cAAcpB,GAAGqB,QAAQ,CAAEC,OAAQ1B,KAAKI,I,EASjE,UAAMuB,CAAKC,EAAyBC,GAClC,IAAIC,EAAmBD,EACvB,IAAK7B,KAAKM,gBAAkBsB,EAAU,CACpCE,EAAmB,I,CAKrB,GAAIA,EAAkB,CACpB9B,KAAK8B,kB,OAGD9B,KAAKM,eAAeqB,KAAKC,E,CAOjC,KAAAG,CAAMC,GACJhC,KAAKM,eAAeyB,MAAMC,GAC1B,OAAOC,QAAQC,S,CAOjB,gBAAAJ,GACE9B,KAAKmC,WAELnC,KAAKI,GAAGgC,YAAYC,SAASC,cAAcC,EAAoB,oBAC/DvC,KAAKM,eAAiBN,KAAKI,GAAGoC,iBAE9B,OAAOP,QAAQC,S,CAOjB,UAAAf,GACEnB,KAAKyC,OAAS,MACdzC,KAAK0C,gCAAgCC,OAErC,OAAOV,QAAQC,S,CAOjB,QAAAC,GACE,IAAKnC,KAAKyC,OAAQ,CAChBzC,KAAKyC,OAAS,KACdzC,KAAK4C,8BAA8BD,M,CAErC,OAAOV,QAAQC,S,CAGjB,iBAAAW,CAAkBxB,G,QAIhB,GAAIA,EAAEyB,OAAS,YAAa,CAC1B9C,KAAK+C,YAAc1B,EAAEP,OAAOkC,O,MACvB,GAAI3B,EAAEyB,OAAS,UAAW,CAC/B,MAAMG,EAAY5B,EAAEP,OAAOkC,QAC3B,GACEhD,KAAK+C,cAAgBE,GACrB5B,EAAEP,OAAOkC,QAAQE,gBAAkBX,EAAoB,oBACtDlB,EAAEP,OAAOqC,UAAUC,SAAS,WAC7B,EACAC,GAAA9B,EAAAvB,KAAKM,kBAAc,MAAAiB,SAAA,SAAAA,EAAEC,iBAAa,MAAA6B,SAAA,SAAAA,EAAEjD,GAAGqB,QAAQ,CAAEC,OAAQ1B,KAAKI,I,GAKpE,gBAAAkD,GACEtD,KAAKD,uB,CAGP,MAAAwD,GACE,OACEC,EAACC,EAAI,CAAAnC,IAAA,2CACHoC,MAAM,yBACNC,YAActC,GAAMrB,KAAK6C,kBAAkBxB,GAC3CuC,UAAYvC,GAAMrB,KAAK6C,kBAAkBxB,IAEzCmC,EAAA,QAAAlC,IAAA,6C,CAKN,oBAAAuC,G,OACEtC,EAAAvB,KAAKC,qBAAiB,MAAAsB,SAAA,SAAAA,EAAEuC,Y"}