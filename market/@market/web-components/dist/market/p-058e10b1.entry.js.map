{"version":3,"names":["pencilWritingIcon","h","width","height","viewBox","fill","xmlns","d","marketColorPickerInputCss","MarketColorPickerInputStyle0","MarketColorPickerInput","displayLeadingAccessory","MarketColorSwatchTagName","getNamespacedTagFor","parsedValue","parseToHSVA","this","value","values","disabled","class","inputValueChange","event","detail","prevValue","formatAndUpdateValue","defaultPrevented","marketColorPickerInputValueChange","emit","updatedValue","componentWillLoad","render","MarketInputTextTagName","Host","key","id","maxlength","slot","htmlFor","name"],"sources":["src/components/market-color-picker/subcomponents/market-color-picker-input/icons.tsx","src/components/market-color-picker/subcomponents/market-color-picker-input/market-color-picker-input.css?tag=market-color-picker-input&encapsulation=shadow","src/components/market-color-picker/subcomponents/market-color-picker-input/market-color-picker-input.tsx"],"sourcesContent":["import { h } from '@stencil/core';\n\nexport const pencilWritingIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M17 4.17004C17.72 4.17004 18.45 4.45004 19 5.00004C20.1 6.10004 20.1 7.90004 19 9.00004L17 11L8 20H4V16L13 7.00004L15 5.00004C15.55 4.45004 16.28 4.17004 17 4.17004ZM17.01 6.17004C16.88 6.17004 16.63 6.20004 16.42 6.41004L15.84 7.01004L17.01 8.18004L17.6 7.59004C17.81 7.37004 17.84 7.13004 17.84 7.00004C17.84 6.87004 17.82 6.62004 17.6 6.41004C17.38 6.20004 17.14 6.17004 17.01 6.17004ZM6 18H7.17L15.58 9.59004L14.41 8.42004L6 16.83V18ZM12 18.0001H20V20.0001H12V18.0001Z\"\n    />\n  </svg>\n);\n",":host {\n  display: block;\n}\n\n.market-color-swatch {\n  vertical-align: middle;\n  margin: var(--color-picker-input-icon-vertical-spacing, 12px) 0;\n}\n\n.color-picker-input-icon {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: var(--color-picker-input-width, 40px);\n  height: var(--color-picker-input-height, 40px);\n\n  /* TODO: add margin token and missing color picker tokens */\n  margin: 12px 0;\n  border-radius: var(--color-picker-icon-border-radius, calc(var(--core-radius-10) * 1px));\n  background-color: var(--color-picker-icon-background-color, var(--core-fill-40-color));\n\n  svg path {\n    fill: var(--core-fill-10-color);\n  }\n}\n","import { Component, Event, EventEmitter, Host, h, Listen, Prop } from '@stencil/core';\n\nimport { pencilWritingIcon } from './icons';\nimport { getNamespacedTagFor } from '../../../../utils/namespace';\nimport { parseToHSVA } from '../../../../utils/color';\n\n@Component({\n  tag: 'market-color-picker-input',\n  styleUrl: 'market-color-picker-input.css',\n  shadow: true,\n})\nexport class MarketColorPickerInput {\n  /**\n   * Value representing the color shown on the input.\n   * This should be in a hexadecimal format (i.e. #ABC123), similarly to native HTML color inputs.\n   */\n  @Prop({ mutable: true, reflect: true }) value: string;\n\n  /**\n   * Fired whenever the color picker input value changes.\n   */\n  @Event({ cancelable: true }) marketColorPickerInputValueChange: EventEmitter<{ prevValue: string; value: string }>;\n\n  displayLeadingAccessory() {\n    const MarketColorSwatchTagName = getNamespacedTagFor('market-color-swatch');\n    const parsedValue = parseToHSVA(this.value);\n\n    // If invalid, this will be null\n    if (parsedValue.values) {\n      return <MarketColorSwatchTagName value={this.value} disabled></MarketColorSwatchTagName>;\n    }\n\n    // otherwise return default icon\n    return <div class=\"color-picker-input-icon\">{pencilWritingIcon()}</div>;\n  }\n\n  @Listen('marketInputValueChange')\n  inputValueChange(event: CustomEvent) {\n    const { detail } = event;\n\n    const prevValue = this.value;\n    // Format for hexadecimal if required\n    this.formatAndUpdateValue(detail.value);\n    const { defaultPrevented } = this.marketColorPickerInputValueChange.emit({ prevValue, value: this.value });\n    if (defaultPrevented) {\n      this.value = prevValue;\n    }\n  }\n\n  formatAndUpdateValue(value: string = this.value) {\n    if (!value) return;\n\n    let updatedValue = value;\n\n    if (updatedValue[0] !== '#') {\n      updatedValue = `#${updatedValue}`;\n    }\n\n    this.value = updatedValue;\n  }\n\n  componentWillLoad() {\n    this.formatAndUpdateValue();\n  }\n\n  render() {\n    const MarketInputTextTagName = getNamespacedTagFor('market-input-text');\n\n    return (\n      <Host class=\"market-color-picker-input\">\n        {/* max length for hexadecimal format */}\n        <MarketInputTextTagName value={this.value} id={'color-picker-input-text'} maxlength={7}>\n          <div slot=\"leading-accessory\">{this.displayLeadingAccessory()}</div>\n          <label htmlFor=\"color-picker-input-text\">\n            <slot name=\"label\">Hex</slot>\n          </label>\n          <slot></slot>\n        </MarketInputTextTagName>\n      </Host>\n    );\n  }\n}\n"],"mappings":"iIAEO,MAAMA,EAAoB,IAC/BC,EAAA,OAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BAChEL,EAAA,oBACY,UAAS,YACT,UACVM,EAAE,8dCPR,MAAMC,EAA4B,wiBAClC,MAAAC,EAAeD,E,MCUFE,EAAsB,M,mIAYjC,uBAAAC,GACE,MAAMC,EAA2BC,EAAoB,uBACrD,MAAMC,EAAcC,EAAYC,KAAKC,OAGrC,GAAIH,EAAYI,OAAQ,CACtB,OAAOjB,EAACW,EAAwB,CAACK,MAAOD,KAAKC,MAAOE,SAAQ,M,CAI9D,OAAOlB,EAAA,OAAKmB,MAAM,2BAA2BpB,I,CAI/C,gBAAAqB,CAAiBC,GACf,MAAMC,OAAEA,GAAWD,EAEnB,MAAME,EAAYR,KAAKC,MAEvBD,KAAKS,qBAAqBF,EAAON,OACjC,MAAMS,iBAAEA,GAAqBV,KAAKW,kCAAkCC,KAAK,CAAEJ,YAAWP,MAAOD,KAAKC,QAClG,GAAIS,EAAkB,CACpBV,KAAKC,MAAQO,C,EAIjB,oBAAAC,CAAqBR,EAAgBD,KAAKC,OACxC,IAAKA,EAAO,OAEZ,IAAIY,EAAeZ,EAEnB,GAAIY,EAAa,KAAO,IAAK,CAC3BA,EAAe,IAAIA,G,CAGrBb,KAAKC,MAAQY,C,CAGf,iBAAAC,GACEd,KAAKS,sB,CAGP,MAAAM,GACE,MAAMC,EAAyBnB,EAAoB,qBAEnD,OACEZ,EAACgC,EAAI,CAAAC,IAAA,2CAACd,MAAM,6BAEVnB,EAAC+B,EAAsB,CAAAE,IAAA,2CAACjB,MAAOD,KAAKC,MAAOkB,GAAI,0BAA2BC,UAAW,GACnFnC,EAAA,OAAAiC,IAAA,2CAAKG,KAAK,qBAAqBrB,KAAKL,2BACpCV,EAAA,SAAAiC,IAAA,2CAAOI,QAAQ,2BACbrC,EAAA,QAAAiC,IAAA,2CAAMK,KAAK,SAAO,QAEpBtC,EAAA,QAAAiC,IAAA,8C"}