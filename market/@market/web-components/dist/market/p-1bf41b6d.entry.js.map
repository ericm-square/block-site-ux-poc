{"version":3,"names":["marketDialogCss","MarketDialogStyle0","MarketDialog","this","type","MODAL_DIALOG_ANIMATION_ENTER_TRANSITION_DURATION","MODAL_DIALOG_ANIMATION_EXIT_TRANSITION_DURATION","dismiss","dismissOptions","persistent","defaultPrevented","marketDialogDismissed","emit","dialog","el","origin","hidden","setTimeout","marketDialogDidDismiss","animationExitDuration","Promise","resolve","onTrapFocusChanged","newValue","oldValue","activateFocusTrap","deactivateFocusTrap","options","activateOptions","focusTrap","activate","trapFocus","createAndActivateFocusTrap","deactivateOptions","deactivate","Object","assign","returnFocus","checkCanReturnFocus","trigger","setFocus","undefined","removeTopMarginOfFirstHeading","headings","querySelectorAll","length","style","marginTop","handleSlotchange","connectedCallback","connectedCallbackTimeout","marketDialogLoaded","animationEnterDuration","disconnectedCallback","clearTimeout","render","MarketActivityIndicatorTagName","getNamespacedTagFor","h","Host","key","class","role","isLoading","onSlotchange","bind"],"sources":["src/components/market-dialog/market-dialog.css?tag=market-dialog&encapsulation=shadow","src/components/market-dialog/market-dialog.tsx"],"sourcesContent":["@import \"../../styles/mixins/component-base.css\";\n@import \"../../styles/mixins/modals.css\";\n\n:host {\n  --modal-dialog-width: var(--modal-dialog-maximum-width-size);\n  --modal-dialog-horizontal-padding-size: var(--modal-dialog-compact-horizontal-size-class-horizontal-padding);\n  --modal-dialog-vertical-padding-size: var(--modal-dialog-compact-vertical-size-class-vertical-padding);\n\n  @extend %modal;\n\n  width: var(--modal-dialog-width);\n  max-width: var(--modal-dialog-width);\n  padding:\n    var(--modal-dialog-vertical-padding-size)\n    var(--modal-dialog-horizontal-padding-size);\n  border-radius: var(--modal-dialog-border-radius);\n  background-color: var(--modal-dialog-background-color);\n\n  /* Enter animation */\n  animation:\n    var(--modal-dialog-animation-enter-transition-duration)\n    market-popup\n    forwards\n    var(--modal-dialog-animation-enter-transition-easing);\n\n  /* Exit animation */\n  &([hidden]) {\n    animation-name: market-popdown;\n    animation-duration: var(--modal-dialog-animation-exit-transition-duration);\n    animation-timing-function: var(--modal-dialog-animation-exit-transition-easing);\n  }\n}\n\n:host([value=\"loadingMode\"]) {\n  display: flex;\n  flex-direction: column;\n}\n\n::slotted(.market-footer) {\n  padding-top: var(--modal-dialog-regular-vertical-size-class-vertical-padding);\n}\n\n.market-activity-indicator {\n  align-self: flex-start;\n  margin-bottom: var(--core-metrics-spacing-200);\n}\n\n@media only screen and (min-width: 600px) {\n  :host {\n    --modal-dialog-horizontal-padding-size: var(--modal-dialog-regular-horizontal-size-class-horizontal-padding);\n    --modal-dialog-vertical-padding-size: var(--modal-dialog-regular-vertical-size-class-vertical-padding);\n  }\n}\n\n@media only screen and (min-width: 1200px) {\n  :host {\n    /* TODO: define missing token: --modal-dialog-wide-vertical-size-class-vertical-padding */\n    --modal-dialog-horizontal-padding-size: var(--modal-dialog-wide-horizontal-size-class-horizontal-padding);\n    --modal-dialog-vertical-padding-size: var(--modal-dialog-wide-vertical-size-class-vertical-padding, 32px);\n  }\n}\n","import {\n  MODAL_DIALOG_ANIMATION_ENTER_TRANSITION_DURATION,\n  MODAL_DIALOG_ANIMATION_EXIT_TRANSITION_DURATION,\n} from '@market/market-theme/js/cjs/index.js';\nimport { Component, Host, Prop, Element, Method, Event, EventEmitter, h, Watch } from '@stencil/core';\n\nimport { DialogDismissedEvent, DialogLoadedEvent, DialogType } from '../../utils/dialog';\nimport {\n  createAndActivateFocusTrap,\n  FocusTrap,\n  FocusTrapActivateOptions,\n  FocusTrapDeactivateOptions,\n  FocusTrapOptions,\n} from '../../utils/focus-trap';\nimport { getNamespacedTagFor } from '../../utils/namespace';\n\n/**\n * @slot - The main content of the dialog. Use `<section class=\"main\">` tag.\n */\n@Component({\n  tag: 'market-dialog',\n  styleUrl: 'market-dialog.css',\n  shadow: true,\n})\nexport class MarketDialog {\n  @Element() el: HTMLMarketDialogElement;\n  connectedCallbackTimeout: NodeJS.Timeout;\n  type: DialogType = 'dialog';\n  focusTrap: FocusTrap;\n  header: HTMLMarketHeaderElement;\n\n  /**\n   * INTERNAL ONLY: Used in CSS to trigger start and stop animations\n   */\n  @Prop({ mutable: true, reflect: true }) hidden: boolean = false;\n\n  /**\n   * INTERNAL ONLY: Used by the context manager to identify a specific dialog/modal\n   */\n  @Prop({ reflect: true, attribute: 'data-dialog-id' }) readonly dialogID: string;\n\n  /**\n   * INTERNAL ONLY: Used by the context manager to identify a specific dialog/modal's place\n   * in the stack\n   */\n  @Prop({ reflect: true, attribute: 'data-dialog-index' }) readonly index: number;\n\n  /**\n   * Whether the activity indicator is rendered or not\n   */\n  @Prop() readonly isLoading: boolean = false;\n\n  /**\n   * Whether the dialog is persistent or dismissable\n   */\n  @Prop({ reflect: true }) readonly persistent: boolean = false;\n\n  /**\n   * Enforces focus trapping on the dialog\n   */\n  @Prop({ mutable: true }) trapFocus: boolean = false;\n\n  /**\n   * The duration for the modal enter animation, set from design tokens\n   */\n  @Prop()\n  readonly animationEnterDuration: number = MODAL_DIALOG_ANIMATION_ENTER_TRANSITION_DURATION;\n\n  /**\n   * The duration for the modal exit animation, set from design tokens\n   */\n  @Prop()\n  readonly animationExitDuration: number = MODAL_DIALOG_ANIMATION_EXIT_TRANSITION_DURATION;\n\n  /**\n   * Triggered when the dialog finishes loading\n   */\n  @Event() marketDialogLoaded: EventEmitter<DialogLoadedEvent>;\n\n  /**\n   * Triggered when the dialog is dismissed, handled by context manager\n   */\n  @Event() marketDialogDismissed: EventEmitter<DialogDismissedEvent>;\n\n  /**\n   * Triggered when the dialog is fully dismissed\n   */\n  @Event() marketDialogDidDismiss: EventEmitter<DialogDismissedEvent>;\n\n  /**\n   * Emits the dismiss event\n   * The parent context will handle actually removing elements from the DOM,\n   * All the dialog needs to do it emit an event so actually closing it can be\n   * some other elements problem\n   */\n  @Method()\n  dismiss(dismissOptions?: Partial<DialogDismissedEvent>) {\n    if (!this.persistent) {\n      const { defaultPrevented } = this.marketDialogDismissed.emit({\n        dialog: this.el,\n        type: this.type,\n        origin: dismissOptions?.origin || this.el,\n      });\n\n      if (!defaultPrevented) {\n        this.hidden = true;\n\n        /**\n         * Emit a marketDialogDidDismiss event when modal gets fully dismissed (after animation).\n         */\n        setTimeout(() => {\n          this.marketDialogDidDismiss.emit({\n            dialog: this.el,\n            type: this.type,\n            origin: this.el,\n          });\n        }, this.animationExitDuration);\n      }\n    }\n    return Promise.resolve();\n  }\n\n  @Watch('trapFocus')\n  onTrapFocusChanged(newValue: boolean, oldValue: boolean) {\n    // only activate/deactivate when the `trapFocus` prop value changes\n    if (newValue !== oldValue) {\n      if (newValue) {\n        this.activateFocusTrap();\n      } else {\n        this.deactivateFocusTrap();\n      }\n    }\n  }\n\n  /**\n   * Activates the focus trap\n   *\n   * See [`focus-trap.ts`](../../utils/focus-trap.ts) for default options\n   *\n   * @param {Object} [options] [focus-trap create options](https://github.com/focus-trap/focus-trap#createoptions)\n   * @param {Object} [activateOptions] set options for [onActivate, onPostActivate, and checkCanFocusTrap](https://github.com/focus-trap/focus-trap#trapactivate)\n   */\n  @Method()\n  activateFocusTrap(options?: FocusTrapOptions, activateOptions?: FocusTrapActivateOptions) {\n    if (this.focusTrap) {\n      this.focusTrap.activate(activateOptions ?? {});\n      if (!this.trapFocus) {\n        this.trapFocus = true;\n      }\n    } else {\n      this.focusTrap = createAndActivateFocusTrap({\n        activateOptions,\n        el: this.el,\n        options,\n      });\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Deactivates the focus trap\n   *\n   * @param {FocusTrapDeactivateOptions} [deactivateOptions] set options for [onDeactivate, onPostDeactivate, and checkCanReturnFocus](https://github.com/focus-trap/focus-trap#trapdeactivate)\n   */\n  @Method()\n  deactivateFocusTrap(deactivateOptions?: FocusTrapDeactivateOptions) {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate({\n        returnFocus: true,\n        checkCanReturnFocus: (trigger) =>\n          new Promise((resolve) => {\n            if (typeof (trigger as any)?.setFocus === 'function') {\n              (trigger as any).setFocus();\n            } else {\n              resolve(); // node.focus(); will be called by focus-trap\n            }\n          }),\n        ...deactivateOptions,\n      });\n      this.focusTrap = undefined;\n    }\n    return Promise.resolve();\n  }\n\n  removeTopMarginOfFirstHeading() {\n    const headings = this.el.querySelectorAll<HTMLHeadingElement>('h1, h2, h3, h4, h5, h6');\n    if (headings.length > 0) {\n      headings[0].style.marginTop = '0';\n    }\n  }\n\n  handleSlotchange() {\n    this.removeTopMarginOfFirstHeading();\n  }\n\n  connectedCallback() {\n    this.connectedCallbackTimeout = setTimeout(() => {\n      /**\n       * Emit a marketDialogLoaded event when the component connects. Need this so\n       * the context manager isn't rummaging around it's DOM to try and find the\n       * dialog that was just appended\n       */\n      this.marketDialogLoaded.emit({\n        dialog: this.el,\n        type: this.type,\n      });\n\n      if (this.trapFocus) {\n        this.activateFocusTrap();\n      }\n    }, this.animationEnterDuration);\n\n    this.handleSlotchange();\n  }\n\n  disconnectedCallback() {\n    this.deactivateFocusTrap();\n\n    /**\n     * Prevents error caused by race conditions during rapid mounting and\n     * unmounting of component by clearing the setTimeout from connectedCallback\n     * if it gets called after disconnectedCallback.\n     */\n    clearTimeout(this.connectedCallbackTimeout);\n  }\n\n  render() {\n    const MarketActivityIndicatorTagName = getNamespacedTagFor('market-activity-indicator');\n\n    return (\n      <Host class=\"market-dialog\" role=\"dialog\">\n        {this.isLoading && <MarketActivityIndicatorTagName></MarketActivityIndicatorTagName>}\n        <slot onSlotchange={this.handleSlotchange.bind(this)}></slot>\n      </Host>\n    );\n  }\n}\n"],"mappings":"4KAAA,MAAMA,EAAkB,ilGACxB,MAAAC,EAAeD,E,MCuBFE,EAAY,M,4MAGvBC,KAAAC,KAAmB,S,YAOuC,M,4DAgBpB,M,gBAKkB,M,eAKV,M,4BAMJC,mD,2BAMDC,iD,CAwBzC,OAAAC,CAAQC,GACN,IAAKL,KAAKM,WAAY,CACpB,MAAMC,iBAAEA,GAAqBP,KAAKQ,sBAAsBC,KAAK,CAC3DC,OAAQV,KAAKW,GACbV,KAAMD,KAAKC,KACXW,QAAQP,IAAc,MAAdA,SAAc,SAAdA,EAAgBO,SAAUZ,KAAKW,KAGzC,IAAKJ,EAAkB,CACrBP,KAAKa,OAAS,KAKdC,YAAW,KACTd,KAAKe,uBAAuBN,KAAK,CAC/BC,OAAQV,KAAKW,GACbV,KAAMD,KAAKC,KACXW,OAAQZ,KAAKW,IACb,GACDX,KAAKgB,sB,EAGZ,OAAOC,QAAQC,S,CAIjB,kBAAAC,CAAmBC,EAAmBC,GAEpC,GAAID,IAAaC,EAAU,CACzB,GAAID,EAAU,CACZpB,KAAKsB,mB,KACA,CACLtB,KAAKuB,qB,GAcX,iBAAAD,CAAkBE,EAA4BC,GAC5C,GAAIzB,KAAK0B,UAAW,CAClB1B,KAAK0B,UAAUC,SAASF,IAAe,MAAfA,SAAe,EAAfA,EAAmB,IAC3C,IAAKzB,KAAK4B,UAAW,CACnB5B,KAAK4B,UAAY,I,MAEd,CACL5B,KAAK0B,UAAYG,EAA2B,CAC1CJ,kBACAd,GAAIX,KAAKW,GACTa,W,CAGJ,OAAOP,QAAQC,S,CASjB,mBAAAK,CAAoBO,GAClB,GAAI9B,KAAK0B,UAAW,CAClB1B,KAAK0B,UAAUK,WAAUC,OAAAC,OAAA,CACvBC,YAAa,KACbC,oBAAsBC,GACpB,IAAInB,SAASC,IACX,UAAYkB,IAAe,MAAfA,SAAO,SAAPA,EAAiBC,YAAa,WAAY,CACnDD,EAAgBC,U,KACZ,CACLnB,G,MAGHY,IAEL9B,KAAK0B,UAAYY,S,CAEnB,OAAOrB,QAAQC,S,CAGjB,6BAAAqB,GACE,MAAMC,EAAWxC,KAAKW,GAAG8B,iBAAqC,0BAC9D,GAAID,EAASE,OAAS,EAAG,CACvBF,EAAS,GAAGG,MAAMC,UAAY,G,EAIlC,gBAAAC,GACE7C,KAAKuC,+B,CAGP,iBAAAO,GACE9C,KAAK+C,yBAA2BjC,YAAW,KAMzCd,KAAKgD,mBAAmBvC,KAAK,CAC3BC,OAAQV,KAAKW,GACbV,KAAMD,KAAKC,OAGb,GAAID,KAAK4B,UAAW,CAClB5B,KAAKsB,mB,IAENtB,KAAKiD,wBAERjD,KAAK6C,kB,CAGP,oBAAAK,GACElD,KAAKuB,sBAOL4B,aAAanD,KAAK+C,yB,CAGpB,MAAAK,GACE,MAAMC,EAAiCC,EAAoB,6BAE3D,OACEC,EAACC,EAAI,CAAAC,IAAA,2CAACC,MAAM,gBAAgBC,KAAK,UAC9B3D,KAAK4D,WAAaL,EAACF,EAA8B,CAAAI,IAAA,6CAClDF,EAAA,QAAAE,IAAA,2CAAMI,aAAc7D,KAAK6C,iBAAiBiB,KAAK9D,Q"}