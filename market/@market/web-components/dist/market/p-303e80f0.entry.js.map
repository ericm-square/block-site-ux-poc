{"version":3,"names":["marketTableV2RowCss","MarketTableV2RowStyle0","MarketTableV2Row","onKeydown","e","target","key","el","disabled","interactive","this","preventDefault","click","onMarketInternalTableV2CellSelectionChange","detail","current","firstCell","stopPropagation","setSelected","onDragStart","dragHandlePosition","slot","coords","anchor","drag","Draggable","start","onDragMove","move","onDragEnd","end","destroy","watchCaret","caret","watchIndent","indent","selected","silent","prevSelected","marketTableV2RowSelectionChange","marketInternalTableV2RowSelectionChange","Promise","resolve","defaultPrevented","emit","previous","getTabIndex","initFirstCell","MarketTableV2CellTagName","getNamespacedTagFor","querySelector","connectedCallBack","renderDragHandleCell","MarketDragHandleTagName","h","class","part","render","dragEnabled","Host","role","tabindex","onMarketDragHandleDragStart","onMarketDragHandleDragMove","onMarketDragHandleDragEnd","onSlotchange"],"sources":["src/components/tables-v2/market-table-v2-row/market-table-v2-row.css?tag=market-table-v2-row&encapsulation=shadow","src/components/tables-v2/market-table-v2-row/market-table-v2-row.tsx"],"sourcesContent":[":host,\n* {\n  box-sizing: border-box;\n}\n\n:host {\n  --table-cell-border-width: 1px;\n  --table-cell-border-color: var(--core-divider-20-color);\n  --table-cell-horizontal-spacing: var(--core-metrics-spacing-150);\n  --table-cell-heading-border-color: var(--core-divider-10-color);\n  --table-cell-heading-font-weight: var(--core-type-medium-weight);\n  --table-cell-state-normal-background-color: var(--core-surface-10-color);\n\n  display: table-row;\n  vertical-align: inherit;\n  width: 100%;\n  outline: none;\n  text-align: inherit;\n\n  /* weird, but slot needs to inherit in order to cascade to slotted items */\n  slot {\n    vertical-align: inherit;\n    text-align: inherit;\n  }\n\n  &([align=\"left\"]) {\n    text-align: left;\n  }\n  &([align=\"center\"]) {\n    text-align: center;\n  }\n  &([align=\"right\"]) {\n    text-align: right;\n  }\n\n  &([valign=\"top\"]) {\n    vertical-align: top;\n  }\n  &([valign=\"middle\"]) {\n    vertical-align: middle;\n  }\n  &([valign=\"bottom\"]) {\n    vertical-align: bottom;\n  }\n\n  &([header]),\n  &([footer]) {\n    .market-table-v2-cell,\n    ::slotted(.market-table-v2-cell) {\n      font-weight: var(--table-cell-heading-font-weight);\n    }\n\n    .market-drag-handle {\n      visibility: hidden;\n    }\n  }\n\n  &([header]),\n  &([sticky=\"top\"]) {\n    .market-table-v2-cell,\n    ::slotted(.market-table-v2-cell) {\n      border-bottom: var(--table-cell-border-width) solid var(--table-cell-heading-border-color);\n    }\n  }\n\n  &([footer]),\n  &([sticky=\"bottom\"]) {\n    .market-table-v2-cell,\n    ::slotted(.market-table-v2-cell) {\n      border-top: var(--table-cell-border-width) solid var(--table-cell-heading-border-color);\n      border-bottom: none;\n    }\n  }\n\n  /* these styles apply to sticky table rows,\n    which layer ABOVE sticky table columns  */\n  &([sticky]) {\n    position: sticky;\n    z-index: 3;\n    background-color: var(--table-cell-state-normal-background-color);\n  }\n\n  &([sticky=\"top\"]) {\n    top: 0;\n  }\n\n  &([sticky=\"bottom\"]) {\n    bottom: 0;\n  }\n}\n\n:host([interactive]) {\n  cursor: pointer;\n}\n\n@media (hover: hover) {\n  :host([interactive]:hover) {\n    background-color: var(--table-cell-hover-state-background-color);\n  }\n}\n\n:host([interactive]:focus) {\n  background-color: var(--table-cell-focus-state-background-color);\n}\n\n:host([active]),\n:host([interactive]:active) {\n  background-color: var(--table-cell-pressed-state-background-color);\n}\n\n:host([disabled]) {\n  color: var(--table-cell-disabled-state-text-color);\n  pointer-events: none;\n}\n\n/* drag & drop states */\n\n.drag-handle-cell {\n  width: var(--core-metrics-spacing-500);\n}\n\n@media (hover: hover) {\n  :host([drag-handle-visibility=\"hover\"]) .market-drag-handle {\n    opacity: 0%;\n  }\n\n  :host([drag-handle-visibility=\"hover\"]:hover) .market-drag-handle {\n    opacity: 100%;\n  }\n}\n\n/* the original row is styled as an empty gray box */\n:host(.market-drag-placeholder),\n:host(.market-drag-placeholder[interactive]) {\n  background-color: var(--core-fill-50-color);\n\n  *,\n  ::slotted(*) {\n    opacity: 0%;\n  }\n\n  /* prevent duplicate drags at the same time! */\n  .market-drag-handle {\n    pointer-events: none;\n  }\n}\n\n/* the cloned row being dragged */\n:host(.market-drag-clone),\n:host(.market-drag-clone[interactive]) {\n  --table-row-dragged-width: 240px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: var(--table-row-dragged-width);\n  border-bottom: var(--table-cell-border-width) solid var(--table-cell-border-color);\n  border-radius: var(--core-radius-10);\n  background-color: var(--core-surface-20-color);\n  cursor: grabbing;\n  transition-timing-function: var(--core-animation-move-transition-easing);\n  transition-duration: var(--core-animation-move-transition-moderate-speed-duration);\n  transition-property: top, width, height;\n\n  /*\n    create box shadow pseudo on which we can transition opacity\n    (hardware accelerated = better perf than transitioning box-shadow)\n  */\n  &::after {\n    content: \"\";\n    position: absolute;\n    inset: 0;\n    display: block;\n    border-radius: var(--core-radius-10);\n    box-shadow: var(--elevation-20-shadow);\n    opacity: var(--market-drag-clone-shadow-opacity, 0%); /* set by Draggable util */\n    transition-timing-function: var(--core-animation-move-transition-easing);\n    transition-duration: var(--core-animation-move-transition-moderate-speed-duration);\n    transition-property: opacity;\n  }\n\n  .market-drag-handle {\n    cursor: grabbing;\n  }\n\n  ::slotted(.market-table-v2-cell:first-child) {\n    overflow: hidden;\n    width: 100%;\n    border: none;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    /* transition the indent padding */\n    transition-timing-function: var(--core-animation-move-transition-easing);\n    transition-duration: var(--core-animation-move-transition-moderate-speed-duration);\n    transition-property: padding-left;\n  }\n\n  ::slotted(.market-table-v2-cell:not(:first-child)) {\n    display: none;\n  }\n\n  .drag-handle-cell {\n    border: none;\n  }\n}\n\n:host(.market-drag-clone[drag-handle-position=\"leading\"]) {\n  justify-content: flex-start;\n}\n\n/* the cloned row being released (transitioning back to placeholder) */\n:host(.market-drag-released) {\n  pointer-events: none;\n  transition-property: opacity, width, height, transform, scale;\n}\n\n:host(.market-drag-into-collapsed-group) {\n  opacity: 0%;\n  scale: 0;\n}\n","import { Component, Host, h, Prop, Element, Listen, Watch, EventEmitter, Event, Method } from '@stencil/core';\nimport { getNamespacedTagFor } from '../../../utils/namespace';\nimport { TMarketTableV2Selection, MarketTableV2SelectionChangeEventDetail } from '../market-table-v2/types';\nimport { Draggable } from '../../../utils/draggable';\nimport type { TMarketDragCoords } from '../../../utils/gesture/types';\n\n/**\n * @slot - Default slot for table cells.\n * @part drag-handle - the drag handle when `dragEnabled` is true.\n */\n\n@Component({\n  tag: 'market-table-v2-row',\n  styleUrl: 'market-table-v2-row.css',\n  shadow: true,\n})\nexport class MarketTableV2Row {\n  private firstCell: HTMLMarketTableV2CellElement;\n  private drag: Draggable;\n\n  @Element() el: HTMLMarketTableV2RowElement;\n\n  /**\n   * Whether the row is currently active.\n   */\n  @Prop({ reflect: true }) readonly active: boolean = false;\n\n  /**\n   * Sets the horizontal alignment.\n   * When not set, alignment is inherited from an ancestor table.\n   * Likewise, row alignment will be inherited by descendant cells.\n   */\n  @Prop({ reflect: true }) readonly align: 'left' | 'center' | 'right';\n\n  /**\n   * Displays a leading clickable caret in the first cell;\n   * intended to be used in conjunction with\n   * `<market-table-v2-group>` to support nested rows.\n   */\n  @Prop({ reflect: true }) readonly caret: 'up' | 'down';\n\n  /**\n   * Whether the row is currently disabled.\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Whether the row is drag & drop enabled.\n   */\n  @Prop({ reflect: true }) readonly dragEnabled: boolean = false;\n\n  /**\n   * Whether the drag handle appears always or only on hover\n   */\n  @Prop({ reflect: true }) readonly dragHandleVisibility: 'always' | 'hover';\n\n  /**\n   * Whether the drag handle appears to the left or right.\n   */\n  @Prop({ reflect: true }) readonly dragHandlePosition: 'leading' | 'trailing';\n\n  /**\n   * Styles a row with footer styles.\n   */\n  @Prop({ reflect: true }) readonly footer: boolean = false;\n\n  /**\n   * Styles a row with header styles.\n   */\n  @Prop({ reflect: true }) readonly header: boolean = false;\n\n  /**\n   * Indentation level of the first cell in the row.\n   */\n  @Prop({ reflect: true }) readonly indent: number;\n\n  /**\n   * Whether the row is interactive, which results in hover, focus, & pressed styles.\n   */\n  @Prop({ reflect: true }) readonly interactive: boolean = false;\n\n  /**\n   * Whether the row is selected.\n   * Relevant if the row's first cell has a slotted control.\n   */\n  @Prop({ mutable: true }) selected: TMarketTableV2Selection = 'false';\n\n  /**\n   * Makes a row \"stick\" to the top or bottom of its parent table.\n   * Requires an explict height on the table to enable vertical scrolling.\n   */\n  @Prop({ reflect: true }) readonly sticky: 'top' | 'bottom';\n\n  /**\n   * Sets the vertical alignment.\n   * When not set, alignment is inherited from an ancestor table.\n   * Likewise, row alignment will be inherited by descendant cells.\n   */\n  @Prop({ reflect: true }) readonly valign: 'bottom' | 'middle' | 'top';\n\n  /**\n   * @internal\n   * Fired when the row selection state changes. Used internally in table components.\n   */\n  @Event({ bubbles: true, composed: true })\n  marketInternalTableV2RowSelectionChange: EventEmitter<MarketTableV2SelectionChangeEventDetail>;\n\n  /**\n   * Fired when the row selection state changes. Used to externally signal selection changes.\n   */\n  @Event({ bubbles: true, composed: true })\n  marketTableV2RowSelectionChange: EventEmitter<MarketTableV2SelectionChangeEventDetail>;\n\n  @Listen('keydown')\n  onKeydown(e: KeyboardEvent) {\n    const { target, key } = e;\n    const { el, disabled, interactive } = this;\n    if (disabled) return;\n    if (!interactive) return;\n    if (target !== el) return;\n    if (key === 'Enter' || key === ' ') {\n      e.preventDefault();\n      el.click();\n    }\n  }\n\n  @Listen('marketInternalTableV2CellSelectionChange')\n  async onMarketInternalTableV2CellSelectionChange(e: CustomEvent<MarketTableV2SelectionChangeEventDetail>) {\n    const { detail, target } = e;\n    const { current } = detail;\n    const { firstCell } = this;\n    if (target !== firstCell) return;\n    e.stopPropagation();\n    await this.setSelected(current);\n  }\n\n  async onDragStart(e: CustomEvent<TMarketDragCoords>) {\n    const { el, dragHandlePosition } = this;\n    if (el.slot === 'parent') return;\n    e.stopPropagation();\n    const coords: TMarketDragCoords = e.detail;\n    const anchor = dragHandlePosition === 'leading' ? 'left' : 'right';\n    const drag = new Draggable(el, { anchor });\n    this.drag = drag;\n    await drag.start(coords);\n  }\n\n  onDragMove(e: CustomEvent<TMarketDragCoords>) {\n    if (this.el.slot === 'parent') return;\n    e.stopPropagation();\n    const coords: TMarketDragCoords = e.detail;\n    this.drag.move(coords);\n  }\n\n  async onDragEnd(e: CustomEvent<TMarketDragCoords>) {\n    if (this.el.slot === 'parent') return;\n    e.stopPropagation();\n    const coords: TMarketDragCoords = e.detail;\n    await this.drag.end(coords);\n    this.drag.destroy();\n  }\n\n  @Watch('caret')\n  watchCaret() {\n    const { firstCell, caret } = this;\n    if (firstCell) firstCell.caret = caret;\n  }\n\n  @Watch('indent')\n  watchIndent() {\n    const { firstCell, indent } = this;\n    if (firstCell) firstCell.indent = indent;\n  }\n\n  /**\n   * Sets selection on the row and propagates the value\n   * downwards to the slotted control in its first cell\n   * and upwards to any parent groups or tables.\n   */\n  @Method()\n  async setSelected(selected: TMarketTableV2Selection, { silent = false } = {}) {\n    const {\n      firstCell,\n      selected: prevSelected,\n      marketTableV2RowSelectionChange,\n      marketInternalTableV2RowSelectionChange,\n    } = this;\n\n    // return if no values have changed\n    if (prevSelected === selected) return Promise.resolve();\n\n    // always fire the external selection event\n    const { defaultPrevented } = marketTableV2RowSelectionChange.emit({\n      current: selected,\n      previous: prevSelected,\n    });\n\n    // if default was prevented, reset the cell & control\n    if (defaultPrevented) {\n      await firstCell?.setSelected(prevSelected, { silent: true });\n      return Promise.resolve();\n    }\n\n    // fire the internal selection event\n    if (!silent) {\n      marketInternalTableV2RowSelectionChange.emit({\n        current: selected,\n        previous: prevSelected,\n      });\n    }\n\n    // save the state\n    this.selected = selected;\n    await firstCell?.setSelected(selected, { silent });\n\n    return Promise.resolve();\n  }\n\n  private getTabIndex() {\n    const { disabled, interactive } = this;\n    return interactive && !disabled ? '0' : null;\n  }\n\n  private async initFirstCell() {\n    const { el, selected } = this;\n\n    const MarketTableV2CellTagName = getNamespacedTagFor('market-table-v2-cell');\n    const firstCell = el.querySelector(`${MarketTableV2CellTagName}`);\n\n    if (firstCell) {\n      this.firstCell = firstCell;\n      if (selected) await firstCell?.setSelected(selected);\n    }\n\n    this.watchCaret();\n    this.watchIndent();\n  }\n\n  async connectedCallBack() {\n    await this.initFirstCell();\n  }\n\n  private renderDragHandleCell() {\n    const MarketDragHandleTagName = getNamespacedTagFor('market-drag-handle');\n    const MarketTableV2CellTagName = getNamespacedTagFor('market-table-v2-cell');\n\n    return (\n      <MarketTableV2CellTagName class=\"drag-handle-cell\">\n        <MarketDragHandleTagName part=\"drag-handle\"></MarketDragHandleTagName>\n      </MarketTableV2CellTagName>\n    );\n  }\n\n  render() {\n    const { dragEnabled, dragHandlePosition } = this;\n\n    return (\n      <Host\n        role=\"row\"\n        class=\"market-table-v2-row\"\n        tabindex={this.getTabIndex()}\n        onMarketDragHandleDragStart={(e: CustomEvent<TMarketDragCoords>) => this.onDragStart(e)}\n        onMarketDragHandleDragMove={(e: CustomEvent<TMarketDragCoords>) => this.onDragMove(e)}\n        onMarketDragHandleDragEnd={(e: CustomEvent<TMarketDragCoords>) => this.onDragEnd(e)}\n      >\n        {dragEnabled && dragHandlePosition === 'leading' && this.renderDragHandleCell()}\n        <slot onSlotchange={() => this.initFirstCell()}></slot>\n        {dragEnabled && dragHandlePosition !== 'leading' && this.renderDragHandleCell()}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}