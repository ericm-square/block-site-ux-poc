{"version":3,"names":["localTransformTagName","getNamespacedTagFor","tagName","Proxy","tag","apply","target","thisArg","args","Reflect","setTransformTagName","transform","isElementWithTagName","el","_b","_a","toLowerCase","call"],"sources":["src/utils/namespace/index.ts"],"sourcesContent":["declare type TransformTagName = (tagName: string) => string;\n\nlet localTransformTagName: TransformTagName;\n\n// Allows access to the transformTagName function at runtime to transform nested children.\n// Stencil does not currently expose this.\nexport function getNamespacedTagFor<TTagName extends keyof HTMLElementTagNameMap>(tagName: TTagName): TTagName {\n  return new Proxy((tag: TTagName): TTagName => tag, {\n    apply(target, thisArg, args) {\n      return Reflect.apply(localTransformTagName ?? target, thisArg, args);\n    },\n  })(tagName);\n}\n\nexport const setTransformTagName = (transform: TransformTagName): void => {\n  localTransformTagName = transform;\n};\n\nexport function isElementWithTagName<TTagName extends keyof HTMLElementTagNameMap>(\n  el: Element,\n  tagName: TTagName,\n): el is HTMLElementTagNameMap[TTagName] {\n  return el?.tagName?.toLowerCase?.() === getNamespacedTagFor<TTagName>(tagName);\n}\n"],"mappings":"AAEA,IAAIA,E,SAIYC,EAAkEC,GAChF,OAAO,IAAIC,OAAOC,GAA4BA,GAAK,CACjD,KAAAC,CAAMC,EAAQC,EAASC,GACrB,OAAOC,QAAQJ,MAAML,IAAqB,MAArBA,SAAqB,EAArBA,EAAyBM,EAAQC,EAASC,E,GAF5D,CAIJN,EACL,C,MAEaQ,EAAuBC,IAClCX,EAAwBW,CAAS,E,SAGnBC,EACdC,EACAX,G,QAEA,QAAOY,GAAAC,EAAAF,IAAE,MAAFA,SAAE,SAAFA,EAAIX,WAAO,MAAAa,SAAA,SAAAA,EAAEC,eAAW,MAAAF,SAAA,SAAAA,EAAAG,KAAAF,MAASd,EAA8BC,EACxE,Q"}