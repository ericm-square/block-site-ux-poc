{"version":3,"names":["sides","alignments","placements","reduce","acc","side","concat","min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","replace","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","map","expandPaddingObject","padding","getPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","async","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","getElementRects","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","initialPlacement","elements","detectOverflow","state","options","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","arrow","arrowDimensions","getDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","centerOffset","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","crossAxis","detectOverflowOptions","placements$1","undefined","overflow","currentIndex","index","currentPlacement","alignmentSides","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","d","slice","sort","a","b","placementsThatFitOnEachSide","every","resetPlacement","flip","_middlewareData$arrow","_middlewareData$flip","mainAxis","checkMainAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","initialSideAxis","isBasePlacement","hasFallbackAxisSideDirection","push","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$filter2","currentSideAxis","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","nativeClientRects","Array","from","getClientRects","clientRects","fallback","getBoundingClientRect","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","resetRects","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","_middlewareData$offse","diffCoords","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","size","apply","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isTopLayer","selector","matches","e","isContainingBlock","elementOrCss","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","willChange","contain","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","CSS","supports","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","visualViewport","parent","Object","getPrototypeOf","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","topLayer","scroll","isOffsetParentAnElement","offsetRect","getWindowScrollBarX","getDocumentRect","html","scrollWidth","clientWidth","scrollHeight","clientHeight","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","position","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","shouldDropCurrentNode","ancestor","set","elementClippingAncestors","this","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getRectRelativeToOffsetParent","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","getOffsetParentFn","getDimensionsFn","floatingDimensions","observeMove","onMove","io","timeoutId","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","IntersectionObserver","observe","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","frameId","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","offset$1","autoPlacement$1","shift$1","flip$1","size$1","hide$1","arrow$1","inline$1","limitShift$1","Map","mergedOptions","platformWithCache","computePosition$1","debounce","callback","wait","timeout","args","later","marketSelectCss","MarketSelectStyle0","UP_DIRECTION","DOWN_DIRECTION","MarketSelect","rowsInnerText","keypresses","debounceDelay","setFocusOnMatch","searchString","join","nextMatch","focusedRowIndex","innerText","startsWith","matchIndex","findIndex","matchingRow","rows","disabled","listIsActive","multiselect","marketSelectValueDidChange","emit","newSelectedOption","newDeselectedOption","currentSelectedOptions","popoverElement","valueWatcher","propagateValue","multiselectWatcher","focusedRowIndexWatcher","r","classList","remove","_a","add","handleListSelection","detail","currentSelectionValues","currentSelections","newDeselection","newSelection","setFocusedRow","handleListItemsFiltered","updatePopper","windowClick","contains","focused","closeList","getValues","isArray","Set","getValuesCount","getMatchingRows","values","row","has","hasMultipleSelections","getMultiselectDisplayValue","getDisplayedSelectionRow","querySelector","getNamespacedTagFor","matchingRows","displaySelection","selectedRows","_b","call","clonedRow","cloneNode","interactive","removeAttribute","setAttribute","querySelectorAll","append","multiselectDisplayRow","createElement","toLocaleString","selectedTranslationSlot","selectedTranslation","innerHTML","appendChild","observer","MutationObserver","characterData","subtree","initListObserver","onListChange","bind","childList","initRows","prototype","indexOf","openList","Promise","resolve","container","closest","popoverContainer","assign","style","zIndex","getMaxZIndex","visibility","moveListToPopover","initPopperListeners","marketSelectOpened","cleanupPopperListeners","moveListToSelect","marketSelectClosed","toggleList","handleTriggerKeyDown","ev","key","handleArrowKey","handleSpacebar","handleEnterKey","handleEscape","handleTab","handleHomeKey","handleEndKey","typeaheadHandler","stopPropagation","preventDefault","toggle","select","submitFormImplicitly","handleListKeyDown","handleListEnter","handleListSpacebar","hasAttribute","focus","toUpperCase","storeKeypresses","handleFocus","readonly","handleTriggerClick","tagName","handleListClick","popoverStrategy","MARGIN_OFFSET","MAX_HEIGHT","maxHeight","then","initPopover","id","popoverId","initList","uuid","trim","registerSlottedAccessories","leadingAccessory","children","child","trailingAccessory","hasLeadingAccessory","hasTrailingAccessory","componentWillLoad","componentDidLoad","componentWillRender","disconnectedCallback","render","tabindex","h","Host","class","role","getTextInputAriaLabel","toString","required","onClick","onFocus","onKeyDown","onSlotchange","classNames","placeholder","viewBox","xmlns","fill"],"sources":["../../node_modules/@floating-ui/utils/dist/floating-ui.utils.esm.js","../../node_modules/@floating-ui/core/dist/floating-ui.core.esm.js","../../node_modules/@floating-ui/utils/dom/floating-ui.utils.dom.esm.js","../../node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js","src/utils/callbacks.tsx","src/components/market-select/market-select.css?tag=market-select&encapsulation=shadow","src/components/market-select/market-select.tsx"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","/**\n * helper functions for managing callback timing (ex. delay, throttle, debounce)\n *\n * these will probably be most useful in situations where we wish to respond to\n * user input events (particularly ones that happen in \"streams\" like scrolling,\n * window resizing, or typing) in a performant way.\n *\n * if this file ends up larger than a few functions, we should consider bringing\n * in lodash as a dependency instead: https://lodash.com/docs\n *\n * recommended pattern for using these functions in your stencil components:\n * myEventHandler = debounce(() => {\n *   // your code\n * }, timeout)\n */\n\n/**\n * returns a function that will not be triggered until it stops being called for\n * N milliseconds, adapted from https://davidwalsh.name/javascript-debounce-function\n *\n * @param callback - callback to be executed after the wait\n * @param {number} wait - wait in milliseconds\n */\nexport const debounce = (callback: any, wait: number) => {\n  let timeout;\n\n  return (...args: any) => {\n    const later = () => {\n      timeout = null;\n      callback.apply(this, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n","@import \"../../styles/mixins/component-base.css\";\n@import \"../../styles/mixins/field.css\";\n@import \"../../styles/mixins/field-states.css\";\n@import \"../../styles/mixins/field-accessories.css\";\n@import \"../../styles/mixins/floating-input.css\";\n\n:host {\n  @extend %field;\n  @extend %field-states;\n  @extend %field-accessories;\n  @extend %floating-input;\n\n  cursor: pointer;\n}\n\n.label-input-container {\n  overflow: hidden;\n}\n\n.caret {\n  flex-shrink: 0;\n  margin-right: var(--field-float-phase-horizontal-padding-size);\n  pointer-events: none;\n  transition: transform var(--field-input-animation-speed);\n\n  path {\n    fill: var(--select-caret-color);\n  }\n\n  :host([aria-expanded=\"true\"]) & {\n    transform: rotate(180deg);\n  }\n}\n\n.placeholder {\n  overflow: hidden;\n  height: var(--field-input-leading);\n  color: var(--field-placeholder-text-color);\n  font-size: var(--field-input-size);\n  line-height: var(--field-input-leading);\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  visibility: hidden;\n\n  :host([focused]) &,\n  :host([size=\"small\"]) &,\n  :host([size=\"medium\"]) & {\n    visibility: visible;\n  }\n\n  :host([size=\"small\"]) & {\n    height: var(--core-type-paragraph-20-leading);\n    font-size: var(--core-type-paragraph-20-size);\n    line-height: var(--core-type-paragraph-20-leading);\n  }\n}\n\n::slotted(label) {\n  cursor: pointer;\n}\n\n::slotted([slot=\"displayed-selection\"]) {\n  /* Override default market-row min-height to use correct height */\n  min-height: 0;\n  margin: 0;\n\n  /* Hide the inset bottom border and focus ring for rows */\n  &::before,\n  &::after {\n    display: none;\n  }\n}\n\n/* Hide the slotted list options */\n::slotted([slot=\"list\"]) {\n  display: none;\n}\n","import { computePosition, autoUpdate, offset, autoPlacement, size, shift } from '@floating-ui/dom';\nimport type { Strategy } from '@floating-ui/dom';\nimport { Component, Prop, Element, Event, EventEmitter, Host, Listen, State, Method, h, Watch } from '@stencil/core';\nimport { v4 as uuid } from 'uuid';\n\nimport { getTextInputAriaLabel } from '../../utils/aria';\nimport { debounce } from '../../utils/callbacks';\nimport { submitFormImplicitly } from '../../utils/forms';\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { classNames } from '../../utils/classnames';\nimport { getMaxZIndex } from '../../utils/max-z-index';\n\nconst UP_DIRECTION = -1;\nconst DOWN_DIRECTION = 1;\n\n/**\n * @slot - Intended for use as the input's text label.\n * @slot list - Intended for use with a slotted `<market-list>` containing `<market-row>`s.\n * @slot leading-accessory - An accessory set on the left side of the input.\n * @slot trailing-accessory - An accessory set on the right side of the input.\n * @slot displayed-selection - Used internally to display the selected `market-row` while retaining any custom styling. Not intended for use by Market consumers.\n */\n@Component({\n  tag: 'market-select',\n  shadow: true,\n  styleUrl: 'market-select.css',\n})\nexport class MarketSelect {\n  @Element() el: HTMLMarketSelectElement;\n\n  /**\n   * String for the \"name\" attribute. Used when slotted into `market-field`.\n   */\n  @Prop() readonly name: string;\n\n  /**\n   * A string specifying a value for the select\n   * Must correspond to a `value` attribute on a slotted `market-row`\n   * For multiselect, separate values with a comma (e.g. 'orange,pear').\n   */\n  @Prop({ mutable: true, reflect: true }) value: string | Array<any> = '';\n\n  /**\n   * String for setting select size.\n   * Sizes `small` and `medium` visually hide the label,\n   * but you should still provide one for accessibility purposes.\n   */\n  @Prop({ reflect: true }) readonly size: 'small' | 'medium' | 'large' = 'large';\n\n  /**\n   * A string specifying the placeholder for the select.\n   * This is shown when the select is open with no selection.\n   */\n  @Prop() readonly placeholder: string;\n\n  /**\n   * Whether or not the select is readonly.\n   */\n  @Prop({ reflect: true }) readonly readonly: boolean = false;\n\n  /**\n   * Functionally and visually disables the select.\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Whether or not the select is focused.\n   */\n  @Prop({ mutable: true, reflect: true }) focused: boolean = false;\n\n  /**\n   * Whether or not the select is invalid (w/ corresponding visual state)\n   */\n  @Prop({ reflect: true }) readonly invalid: boolean = false;\n\n  /**\n   * Whether or not the select is required. This property relays\n   * important contextual information when using a screen reader\n   */\n  @Prop({ reflect: true }) readonly required: boolean = false;\n\n  /**\n   * Whether or not multiselect is enabled\n   */\n  @Prop({ reflect: true }) readonly multiselect: boolean = false;\n\n  /**\n   * Ancestor selector to contain the popover menu.\n   * Use this if you need the popover to be appended to\n   * an ancestor element other than the `body` element.\n   */\n  @Prop() readonly popoverContainer: string;\n\n  /**\n   * Configuration option for Floating UI (used to position `<market-popover>`).\n   * Describes the positioning strategy to use. By default, it is absolute. If\n   * your reference element is in a fixed container, use the fixed strategy.\n   * https://floating-ui.com/docs/computePosition#strategy\n   */\n  @Prop() readonly popoverStrategy: Strategy = 'absolute';\n\n  @State() listIsActive: boolean = false;\n\n  /*\n    The index of which row item has focus when navigating market-select with keys.\n  */\n  @State() focusedRowIndex: number = -1;\n\n  @State() hasLeadingAccessory: boolean = false;\n\n  @State() hasTrailingAccessory: boolean = false;\n\n  /**\n   * Fired by the `marketListSelectionsDidChange` listener.\n   *\n   * @property {string} value - value attribute of the selected element\n   * @property {HTMLMarketRowElement} newSelectedOption - the row that has just been selected\n   * @property {HTMLMarketRowElement} newDeselectedOption - the row that has just been deselected\n   * @property {HTMLMarketRowElement} currentSelectedOptions - the rows that are currently selected\n   */\n  @Event() marketSelectValueDidChange: EventEmitter<{\n    value: string | Array<any>;\n    newSelectedOption: HTMLMarketRowElement;\n    newDeselectedOption: HTMLMarketRowElement;\n    currentSelectedOptions: Array<HTMLMarketRowElement>;\n  }>;\n\n  /**\n   * Fired whenever the select is opened.\n   */\n  @Event({ bubbles: true, composed: true }) marketSelectOpened: EventEmitter;\n\n  /**\n   * Fired whenever the select is closed.\n   */\n  @Event({ bubbles: true, composed: true }) marketSelectClosed: EventEmitter;\n\n  @Watch('value')\n  valueWatcher() {\n    this.propagateValue();\n  }\n\n  @Watch('multiselect')\n  multiselectWatcher() {\n    this.list.multiselect = this.multiselect;\n  }\n\n  @Watch('focusedRowIndex')\n  focusedRowIndexWatcher() {\n    if (this.rows) {\n      this.rows.forEach((r) => r.classList.remove('pseudo-focus'));\n      this.rows[this.focusedRowIndex]?.classList.add('pseudo-focus');\n    }\n  }\n\n  // Listener for the change event emitted by `market-list`\n  handleListSelection({ detail: { currentSelectionValues, currentSelections, newDeselection, newSelection } }) {\n    const value = currentSelectionValues.join(',');\n    this.value = value;\n\n    if (this.multiselect) {\n      this.setFocusedRow(newDeselection || newSelection);\n    } else {\n      this.setFocusedRow(newSelection);\n    }\n\n    this.marketSelectValueDidChange.emit({\n      value,\n      newSelectedOption: newSelection,\n      newDeselectedOption: newDeselection,\n      currentSelectedOptions: currentSelections,\n    });\n  }\n\n  handleListItemsFiltered() {\n    window.requestAnimationFrame(() => {\n      if (this.listIsActive) {\n        this.updatePopper();\n      }\n    });\n  }\n\n  @Listen('click', { target: 'window' })\n  windowClick(e) {\n    if (this.el.contains(e.target) || this.popoverElement?.contains(e.target)) {\n      return;\n    }\n\n    this.focused = false;\n    if (this.listIsActive) {\n      this.closeList();\n    }\n  }\n\n  getValues(): Set<string> {\n    if (Array.isArray(this.value)) {\n      return new Set(this.value);\n    }\n    return new Set(this.multiselect ? this.value.split(',') : [this.value]);\n  }\n\n  getValuesCount(): number {\n    return this.getValues().size;\n  }\n\n  /**\n   * We search based on the `value` property rather than using querySelector and the `value`\n   * attribute (i.e. `market-row[value=${this.value}]`) due to rendering issues we've seen\n   * with Ember/Handlebars, where the property may be set before attribute is present.\n   * See here for details: https://github.com/squareup/market/issues/2635\n   */\n  getMatchingRows(): Array<HTMLMarketRowElement> {\n    if (this.rows === null) {\n      return [];\n    } else {\n      const values = this.getValues();\n      return [...this.rows].filter((row) => values.has(row.value));\n    }\n  }\n\n  get hasMultipleSelections(): boolean {\n    return this.multiselect && this.getValues().size > 1;\n  }\n\n  getMultiselectDisplayValue(): string {\n    const values = this.getValues();\n    return values.size > 1 ? `${values.size} selected` : '';\n  }\n\n  getDisplayedSelectionRow() {\n    return this.el.querySelector(\n      `${getNamespacedTagFor('market-row')}[slot=\"displayed-selection\"]`,\n    ) as HTMLMarketRowElement;\n  }\n\n  /**\n   * Ensure the passed `value` is reflected in the selected list item and the displayed selection row.\n   */\n  propagateValue() {\n    if (!this.list || !this.rows) return;\n\n    const matchingRows = this.getMatchingRows();\n\n    if (matchingRows.length === 0) {\n      // there were no matching rows, so sanitize & reset the value\n      this.list.value = this.value = '';\n      this.focusedRowIndex = -1;\n    } else {\n      // set the list value so the correct list row will be selected\n      this.list.value = this.value;\n      this.setFocusedRow(matchingRows[0]);\n    }\n\n    this.displaySelection(matchingRows);\n  }\n\n  /**\n   * Renders the passed row into the displayed selection slot, so it's visible\n   * as the current selection in the main \"input\" area of the select.\n   */\n  displaySelection(selectedRows: Array<HTMLMarketRowElement> = []) {\n    // Remove existing selected row from the DOM\n    this.getDisplayedSelectionRow()?.remove?.();\n\n    if (selectedRows.length === 1) {\n      /**\n       * For single select, we need to clone the row from the list so we can place a\n       * duplicate into the field area. If we don't clone it, the row\n       * will be removed from the list when we append it to the selection area\n       */\n      const clonedRow: HTMLMarketRowElement = selectedRows[0].cloneNode(true) as HTMLMarketRowElement;\n\n      // Row was cloned from the list, so we need to remove its interactive attribute + reset its role\n      clonedRow.interactive = false;\n      clonedRow.removeAttribute('tabindex');\n      clonedRow.setAttribute('role', 'listitem'); // needed after Stencil 4 upgrade\n\n      // don't duplicate cloned element IDs!\n      clonedRow.removeAttribute('id');\n      clonedRow.querySelectorAll('[id]').forEach((el) => el.removeAttribute('id'));\n\n      // We don't want the row to show as \"focused\" inside the select box\n      clonedRow.classList.remove('pseudo-focus');\n\n      /**\n       * Set slot='displayed-selection' so this shows up within the slotted area.\n       * We use a slot instead of appending this directly into the shadowDOM\n       * because we want to keep whatever styling cascaded from the Light DOM\n       * on the row because market - row can accept any markup.\n       */\n      clonedRow.setAttribute('slot', 'displayed-selection');\n\n      // if the select size is small, the selected row needs to be small too\n      clonedRow.size = this.size === 'small' ? 'small' : 'medium';\n\n      // Append the cloned node after the first slot element (label).\n      this.el.append(clonedRow);\n    } else if (selectedRows.length > 1) {\n      /**\n       * For multiselect, we need to create a `market-row` element to display \"n selected\"\n       * and possibly clone the \"selected-translation\" slot, if provided\n       */\n      const multiselectDisplayRow = document.createElement(\n        `${getNamespacedTagFor('market-row')}`,\n      ) as HTMLMarketRowElement;\n      multiselectDisplayRow.setAttribute('slot', 'displayed-selection');\n      multiselectDisplayRow.innerText = `${this.getValuesCount().toLocaleString()} `;\n\n      // if the select size is small, the selected row needs to be small too\n      multiselectDisplayRow.size = this.size === 'small' ? 'small' : 'medium';\n\n      // Add slot for \"selected\"\n      const selectedTranslationSlot = document.createElement('slot');\n      selectedTranslationSlot.setAttribute('name', 'selected-translation');\n\n      // Clone the contents of the \"selected-translation\"\n      const selectedTranslation = this.el.querySelector('[slot=\"selected-translation\"]');\n      selectedTranslationSlot.innerHTML = selectedTranslation?.innerHTML ?? 'selected';\n      multiselectDisplayRow.appendChild(selectedTranslationSlot);\n\n      // Observe for changes on the \"selected-translation\" slot\n      if (selectedTranslation) {\n        const observer = new MutationObserver(() => {\n          selectedTranslationSlot.innerHTML = selectedTranslation?.innerHTML;\n        });\n        observer.observe(selectedTranslation, { characterData: true, subtree: true });\n      }\n\n      this.el.append(multiselectDisplayRow);\n    }\n  }\n\n  /**\n   * Listens to changes in list content to ensure that if the content is dynamically updated,\n   * those changes will be copied to the popover and the displayed-selection row.\n   */\n  initListObserver() {\n    const observer = new MutationObserver(this.onListChange.bind(this));\n    observer.observe(this.list, { childList: true, characterData: true, subtree: true });\n  }\n\n  onListChange() {\n    this.initRows();\n    this.propagateValue();\n    this.updatePopper();\n  }\n\n  /**\n   * Record the index of the new selected row for keyboard navigation\n   */\n  setFocusedRow(row: HTMLMarketRowElement) {\n    this.focusedRowIndex = Array.prototype.indexOf.call(this.rows, row);\n  }\n\n  /**\n   * Opens the select.\n   */\n  @Method()\n  async openList() {\n    if (this.listIsActive || !this.popoverElement) {\n      return Promise.resolve();\n    }\n\n    const container: HTMLElement = this.el.closest(this.popoverContainer) || document.body;\n\n    Object.assign(this.popoverElement.style, {\n      zIndex: `${getMaxZIndex(container) + 1}`,\n      visibility: 'hidden',\n    });\n\n    this.moveListToPopover();\n    container.append(this.popoverElement);\n    this.initPopperListeners();\n\n    return new Promise<void>((resolve) => {\n      // hack: ensure initial position is correctly set before visible\n      setTimeout(() => {\n        this.updatePopper();\n        this.popoverElement.style.visibility = 'visible';\n        this.listIsActive = true;\n        this.marketSelectOpened.emit();\n        resolve();\n      }, 50);\n    });\n  }\n\n  /**\n   * Closes the select.\n   */\n  @Method()\n  closeList() {\n    if (!this.listIsActive) {\n      return Promise.resolve();\n    }\n\n    this.popoverElement.remove();\n    this.cleanupPopperListeners();\n    this.moveListToSelect();\n    this.listIsActive = false;\n    this.marketSelectClosed.emit();\n    return Promise.resolve();\n  }\n\n  /**\n   * Toggles the select open and closed.\n   */\n  @Method()\n  async toggleList() {\n    this.listIsActive ? await this.closeList() : await this.openList();\n  }\n\n  /* KEYBOARD ACCESSIBILITY */\n\n  // keyboard handler on the trigger (separate from the list)\n  handleTriggerKeyDown(ev: KeyboardEvent) {\n    switch (ev.key) {\n      case 'ArrowDown':\n        this.handleArrowKey(ev, DOWN_DIRECTION);\n        break;\n      case 'ArrowUp':\n        this.handleArrowKey(ev, UP_DIRECTION);\n        break;\n      case ' ':\n        this.handleSpacebar(ev);\n        break;\n      case 'Enter':\n        this.handleEnterKey();\n        break;\n      case 'Escape':\n        this.handleEscape();\n        break;\n      case 'Tab':\n        this.handleTab(ev);\n        break;\n      case 'Home':\n        this.handleHomeKey(ev);\n        break;\n      case 'End':\n        this.handleEndKey(ev);\n        break;\n      default:\n        this.typeaheadHandler(ev);\n        break;\n    }\n    ev.stopPropagation();\n  }\n\n  /**\n   * NOTE: market-list has its own internal keyboard functionality,\n   * so we only handle the key presses while the parent select is focused.\n   *\n   * - if the list is open:\n   *   - update the selected row to the next or previous row depending on the arrow direction\n   * - if the list is closed:\n   *   - open the list\n   */\n  async handleArrowKey(ev: KeyboardEvent, direction: typeof UP_DIRECTION | typeof DOWN_DIRECTION) {\n    ev.preventDefault(); // do not scroll page while select has focus\n\n    if (this.listIsActive) {\n      for (let i = this.focusedRowIndex + direction; i >= 0 && i < this.rows.length; i += direction) {\n        if (!this.rows[i].disabled) {\n          this.focusedRowIndex = i;\n          break;\n        }\n      }\n    } else {\n      await this.openList();\n    }\n  }\n\n  /**\n   * - if the list is open:\n   *   - close it\n   * - if the list is closed:\n   *   - open the list\n   *   - if there is a current selection, focus it\n   */\n  async handleSpacebar(ev: KeyboardEvent) {\n    ev.preventDefault(); // do not scroll page while select has focus\n\n    if (this.listIsActive) {\n      this.rows[this.focusedRowIndex]?.toggle();\n    } else {\n      await this.openList();\n    }\n  }\n\n  /**\n   * when the list is closed, invoke implicit submission\n   */\n  handleEnterKey() {\n    if (this.listIsActive) {\n      this.rows[this.focusedRowIndex]?.select();\n      this.closeList();\n    } else {\n      submitFormImplicitly(this.el);\n    }\n  }\n\n  /*\n  - when the list is open, close it\n  */\n  handleEscape() {\n    if (this.listIsActive) {\n      this.closeList();\n    }\n  }\n\n  /*\n  - when the list is open, suppress tab navigation\n  - when the list is closed, allow tab navigation and remove focus\n  */\n  handleTab(ev: KeyboardEvent) {\n    if (this.listIsActive) {\n      ev.preventDefault();\n    } else {\n      this.focused = false;\n    }\n  }\n\n  // On Mac, use Fn-Left as \"Home\"\n  handleHomeKey(ev: KeyboardEvent) {\n    if (this.listIsActive) {\n      ev.preventDefault();\n      this.focusedRowIndex = 0;\n    }\n  }\n\n  // On Mac, use Fn-Right as \"End\"\n  handleEndKey(ev: KeyboardEvent) {\n    if (this.listIsActive) {\n      ev.preventDefault();\n      this.focusedRowIndex = this.rows.length - 1;\n    }\n  }\n\n  // keyboard handler on the list (separate from the trigger)\n  handleListKeyDown(ev: KeyboardEvent) {\n    switch (ev.key) {\n      case 'Enter':\n        this.handleListEnter();\n        break;\n      case 'Escape':\n        this.handleEscape();\n        break;\n      case 'Tab':\n        this.handleTab(ev);\n        break;\n      case ' ':\n        this.handleListSpacebar(ev);\n        break;\n      default:\n        this.typeaheadHandler(ev);\n        break;\n    }\n    ev.stopPropagation();\n  }\n\n  /**\n   * market-list handles selection functionality internally\n   * just need to close the list if single select\n   */\n  handleListSpacebar(ev) {\n    // do nothing if list is multiselect or keydown event is emitted by typing into a slotted search input\n    if (this.multiselect || ev.target.hasAttribute('slot', 'search')) {\n      return;\n    }\n\n    ev.preventDefault(); // do not scroll page while select has focus\n\n    this.closeList();\n    this.el.focus();\n  }\n\n  /**\n   * market-list handles selection functionality internally\n   * just need to close the list if single select\n   */\n  handleListEnter() {\n    if (!this.multiselect) {\n      this.closeList();\n      this.el.focus();\n    }\n  }\n\n  /* TYPEAHEAD FUNCTIONALITY\n  - https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n  - type a character: focus moves to the next item with a name that starts with\n    the typed character\n  - type multiple characters in rapid succession: focus moves to the next item\n    with a name that starts with the string of characters typed\n  - if no match is found, focus remains where it was\n  - search wraps around end of list\n  */\n\n  rowsInnerText: Array<string> = [];\n  keypresses: Array<string> = [];\n  debounceDelay: number = 250;\n\n  typeaheadHandler(ev: KeyboardEvent) {\n    // if list has a search, that will be used instead of a typeahead\n    if (this.list?.hasAttribute('has-search')) {\n      // TODO: Proxy key events to the search input\n      return;\n    }\n\n    // because this is the default keydown event handler, we're ignoring\n    // \"special\" keys, numbers, and punctuation for typeahead functionality\n    // note that this check will also ignore characters from languages that have\n    // no concept of upper/lowercase (ex. japanese)\n    // TODO: revisit if localization requires it\n    if (ev.key.length > 1 || ev.key.toUpperCase() === ev.key.toLowerCase()) {\n      return;\n    }\n\n    this.storeKeypresses(ev);\n    this.setFocusOnMatch();\n  }\n\n  storeKeypresses(ev) {\n    this.keypresses = [...this.keypresses, ev.key];\n  }\n\n  setFocusOnMatch = debounce(() => {\n    const searchString = this.keypresses.join('');\n\n    // array slicing is so we start the search from the currently focused row\n    const nextMatch = [\n      ...this.rowsInnerText.slice(this.focusedRowIndex + 1),\n      ...this.rowsInnerText.slice(0, this.focusedRowIndex + 1),\n    ].find((innerText: string) => innerText.startsWith(searchString));\n\n    const matchIndex = this.rowsInnerText.findIndex((innerText) => {\n      return innerText.startsWith(nextMatch);\n    });\n\n    const matchingRow: HTMLMarketRowElement = this.rows[matchIndex];\n\n    // if matching row exists and is not disabled, focus it\n    if (matchingRow && !matchingRow.disabled) {\n      this.focusedRowIndex = matchIndex;\n\n      // if list is closed and single select, set the value\n      if (!this.listIsActive && !this.multiselect) {\n        // row is not in the DOM, so matchingRow.click() doesn't bubble\n        // instead we manually set the value to the row's value\n        this.value = matchingRow.value;\n\n        // since we're bypassing marketListSelectionsDidChange event here,\n        // we also need to manually emit marketSelectValueDidChange event\n        this.marketSelectValueDidChange.emit({\n          value: this.value,\n          newSelectedOption: matchingRow,\n          newDeselectedOption: null,\n          currentSelectedOptions: [matchingRow],\n        });\n      }\n    }\n\n    this.keypresses = []; // reset keypress array\n  }, this.debounceDelay);\n\n  /* EVENT HANDLING */\n\n  handleFocus() {\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    this.focused = true;\n  }\n\n  handleTriggerClick(ev) {\n    if (ev.target.tagName.toLowerCase() === getNamespacedTagFor('market-tooltip')) {\n      return;\n    }\n\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    this.toggleList();\n  }\n\n  handleListClick() {\n    if (!this.multiselect) {\n      this.closeList();\n      this.el.focus();\n    }\n  }\n\n  /* POPPER FUNCTIONALITY */\n\n  cleanupPopperListeners: Function;\n  initPopperListeners() {\n    const { el, popoverElement, updatePopper } = this;\n    this.cleanupPopperListeners = autoUpdate(el, popoverElement, updatePopper.bind(this), {\n      elementResize: false,\n    });\n  }\n\n  updatePopper() {\n    const { el, popoverElement, popoverStrategy } = this;\n\n    // TODO: use design tokens\n    const MARGIN_OFFSET = 8;\n    const MAX_HEIGHT = 464;\n\n    computePosition(el, popoverElement, {\n      strategy: popoverStrategy,\n      middleware: [\n        offset(MARGIN_OFFSET),\n        autoPlacement({\n          allowedPlacements: ['top', 'bottom'],\n        }),\n        size({\n          apply({ rects, availableHeight }) {\n            Object.assign(popoverElement.style, {\n              width: `${rects.reference.width}px`,\n              maxHeight: `${Math.min(availableHeight - MARGIN_OFFSET, MAX_HEIGHT)}px`,\n            });\n          },\n        }),\n        shift({ padding: MARGIN_OFFSET }),\n      ],\n    }).then(({ x, y }) => {\n      Object.assign(popoverElement.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      });\n    });\n  }\n\n  list: HTMLMarketListElement = null;\n  rows: NodeListOf<HTMLMarketRowElement> = null;\n  popoverElement: HTMLMarketPopoverElement = null;\n  popoverId: string;\n\n  initPopover() {\n    this.popoverElement =\n      this.popoverElement ||\n      (document.createElement(getNamespacedTagFor('market-popover')) as HTMLMarketPopoverElement);\n    this.popoverElement.id = this.popoverId;\n    this.popoverElement.style.position = this.popoverStrategy;\n  }\n\n  initList() {\n    this.list = this.el.querySelector('[slot=\"list\"]');\n    this.list.interactive = true;\n    this.list.multiselect = this.multiselect;\n    this.list.addEventListener('marketListSelectionsDidChange', this.handleListSelection.bind(this));\n    this.list.addEventListener('marketListItemsFiltered', this.handleListItemsFiltered.bind(this));\n    this.list.addEventListener('keydown', this.handleListKeyDown.bind(this));\n    this.list.addEventListener('click', this.handleListClick.bind(this));\n  }\n\n  initRows() {\n    this.rows = this.list.querySelectorAll(`${getNamespacedTagFor('market-row')}`) as NodeListOf<HTMLMarketRowElement>;\n    this.rows.forEach((row) => {\n      // Set an ID for the row if it doesn't have one (we need this for aria-activedescendant)\n      if (!row.id) {\n        row.id = `market-row-${uuid()}`;\n      }\n    });\n    // used for typeahead functionality\n    this.rowsInnerText = [...this.rows]\n      .filter((row) => {\n        /**\n         * Addresses an issue in test environments where the innerText of\n         * market-rows isn't set before componentWillLoad of the parent market-select (this file)\n         * is executed.\n         */\n        return row && row.innerText;\n      })\n      .map((row) => row.innerText.trim().toLowerCase());\n  }\n\n  moveListToPopover() {\n    this.list.removeAttribute('slot');\n    this.popoverElement.append(this.list);\n  }\n\n  moveListToSelect() {\n    this.list.setAttribute('slot', 'list');\n    this.el.append(this.list);\n  }\n\n  /* COMPONENT LIFECYCLE EVENTS AND HELPERS */\n\n  registerSlottedAccessories() {\n    const leadingAccessory = [...this.el.children].filter(function (child) {\n      return child.matches('[slot=\"leading-accessory\"]');\n    });\n    const trailingAccessory = [...this.el.children].filter(function (child) {\n      return child.matches('[slot=\"trailing-accessory\"]');\n    });\n\n    this.hasLeadingAccessory = leadingAccessory.length > 0;\n    this.hasTrailingAccessory = trailingAccessory.length > 0;\n  }\n\n  componentWillLoad() {\n    this.registerSlottedAccessories();\n    this.popoverId = this.popoverId || `popover-${uuid()}`;\n  }\n\n  componentDidLoad() {\n    this.initList();\n    this.initRows();\n    this.initPopover();\n    this.initListObserver();\n    this.propagateValue();\n  }\n\n  componentWillRender() {\n    const { listIsActive, list } = this;\n    if (list && listIsActive) {\n      list.removeAttribute('slot');\n    }\n  }\n\n  disconnectedCallback() {\n    this.closeList();\n  }\n\n  render() {\n    const tabindex = this.disabled ? null : '0';\n\n    return (\n      <Host\n        class=\"market-select\"\n        role=\"combobox\"\n        aria-label={getTextInputAriaLabel(this.el)}\n        aria-expanded={this.listIsActive.toString()}\n        aria-controls={this.popoverId}\n        aria-activedescendant={this.focusedRowIndex > -1 ? this.rows[this.focusedRowIndex].id : null}\n        aria-required={this.required.toString()}\n        tabindex={tabindex}\n        onClick={(e) => {\n          this.handleTriggerClick(e);\n        }}\n        onFocus={() => {\n          this.handleFocus();\n        }}\n        onKeyDown={(e) => {\n          this.handleTriggerKeyDown(e);\n        }}\n      >\n        <slot name=\"leading-accessory\" onSlotchange={() => this.registerSlottedAccessories()}></slot>\n\n        <div\n          class={classNames('label-input-container', {\n            'has-leading-accessory': this.hasLeadingAccessory,\n            'has-trailing-accessory': this.hasTrailingAccessory,\n          })}\n        >\n          {/* Default slot for field label */}\n          <slot></slot>\n          <slot name=\"displayed-selection\">\n            <div class=\"placeholder\">{this.placeholder}</div>\n          </slot>\n        </div>\n\n        <slot name=\"list\"></slot>\n\n        <slot name=\"trailing-accessory\" onSlotchange={() => this.registerSlottedAccessories()}></slot>\n\n        <svg class=\"caret\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M7.70715 7.70711C7.31663 8.09763 6.68346 8.09763 6.29294 7.70711L0.29294 1.70711L1.70715 0.292892L7.00005 5.58579L12.2929 0.292893L13.7072 1.70711L7.70715 7.70711Z\"\n            fill=\"black\"\n          />\n        </svg>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}