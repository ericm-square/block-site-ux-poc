{"version":3,"names":["marketFieldCss","MarketFieldStyle0","MarketField","this","errorSlotId","uuid","getSlottedInputs","supportedInputTags","getNamespacedTagFor","slottedInputElements","flatMap","tag","el","getElementsByTagName","getErrorSlot","querySelector","getBottomAccessorySlot","getInputElAriaDescribedby","describedBy","push","join","handleErrorAttributes","errorSlotEl","setAttribute","handleBottomAccessoryAttributes","bottomAccessorySlotEl","render","forEach","input","name","disabled","invalid","readonly","inputElAriaDescribedby","h","Host","key","class","onSlotchange"],"sources":["src/components/market-field/market-field.css?tag=market-field&encapsulation=shadow","src/components/market-field/market-field.tsx"],"sourcesContent":["@import \"../../styles/mixins/component-base.css\";\n\n:host {\n  --error-icon-height: 16px;\n  --error-icon-width: 16px;\n  --error-icon-offset: calc(calc(var(--field-error-message-text-leading) - var(--error-icon-height)) / 2);\n\n  display: block;\n  text-align: start;\n}\n\n/* If you change this property also update it's counterpart in styles/components.css */\n::slotted([slot]) {\n  margin-top: 4px;\n}\n\n::slotted([slot=\"error\"]) {\n  display: block;\n\n  /* If you change these properties also update their counterparts in styles/components.css */\n  color: var(--field-error-message-text-color);\n  font-weight: var(--field-error-message-text-weight);\n  font-size: var(--field-error-message-text-size);\n  line-height: var(--field-error-message-text-leading);\n  letter-spacing: var(--field-error-message-text-tracking);\n\n  &::before {\n    content: \"\";\n    display: inline-block;\n    vertical-align: calc(-1 * var(--error-icon-offset));\n    width: var(--error-icon-width);\n    height: var(--error-icon-height);\n\n    /* TODO: design tokens for error message icon */\n    margin-right:\n      calc(\n        var(--field-error-message-icon-padding, 2px) +\n        var(--field-error-message-icon-margin-right, 4px)\n      );\n    margin-left: var(--field-error-message-icon-padding, 2px);\n    background-color: var(--field-error-message-text-color);\n    mask: url(\"data:image/svg+xml;utf8,<svg width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' clip-rule='evenodd' d='M8 15.5C12.1333 15.5 15.5 12.1333 15.5 8C15.5 3.86667 12.1333 0.5 8 0.5C3.86667 0.5 0.5 3.86667 0.5 8C0.5 12.1333 3.86667 15.5 8 15.5ZM8 2.16667C11.2167 2.16667 13.8333 4.78333 13.8333 8C13.8333 11.2167 11.2167 13.8333 8 13.8333C4.78333 13.8333 2.16667 11.2167 2.16667 8C2.16667 4.78333 4.78333 2.16667 8 2.16667ZM8 12.1667C8.5753 12.1667 9.04167 11.7003 9.04167 11.125C9.04167 10.5497 8.5753 10.0833 8 10.0833C7.4247 10.0833 6.95833 10.5497 6.95833 11.125C6.95833 11.7003 7.4247 12.1667 8 12.1667ZM7.16667 3.83333H8.83333V9.25H7.16667V3.83333Z'/></svg>\");\n    mask-size: cover;\n  }\n}\n\n::slotted([slot=\"bottom-accessory\"]) {\n  display: block;\n  margin: var(--field-helper-text-vertical-spacing) var(--field-helper-text-horizontal-spacing);\n  color: var(--field-helper-text-text-color);\n  font-weight: var(--field-helper-text-weight);\n  font-size: var(--field-helper-text-size);\n  line-height: var(--field-helper-text-leading);\n  letter-spacing: var(--field-helper-text-tracking);\n}\n\n::slotted([slot=\"action\"]) {\n  display: block;\n  padding: var(--field-action-vertical-padding-size) 0;\n\n  /* If you change these properties also update their counterparts in styles/components.css */\n  color: var(--field-action-text-color);\n  font-weight: var(--field-action-text-weight);\n  font-size: var(--field-action-text-size);\n  line-height: var(--field-action-text-leading);\n  letter-spacing: var(--field-action-text-tracking);\n  text-decoration: none;\n  cursor: pointer;\n}\n\n::slotted(button[slot=\"action\"]) {\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  appearance: none;\n}\n","import { Component, Prop, Element, Host, h } from '@stencil/core';\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * @slot - The form input, ex. market-input-text.\n * @slot error - Optional error text for the block, displayed below the input when invalid.\n * @slot bottom-accessory - Optional content for the block, displayed below the input.\n * @slot action - Optional action component for the block, displayed below the input.\n */\n@Component({\n  tag: 'market-field',\n  shadow: true,\n  styleUrl: 'market-field.css',\n})\nexport class MarketField {\n  @Element() el: HTMLMarketFieldElement;\n\n  /**\n   * A string specifying a name for the field.\n   */\n  @Prop({ reflect: true }) readonly name: string;\n\n  /**\n   * A boolean representing whether the field is readonly or not.\n   */\n  @Prop({ reflect: true }) readonly readonly: boolean = false;\n\n  /**\n   * A boolean representing whether the field is disabled or not.\n   * This visually and functionally will disable the field.\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * A boolean representing whether the field is invalid or not.\n   * This represents error states.\n   */\n  @Prop({ reflect: true }) readonly invalid: boolean = false;\n\n  errorSlotId: string = uuid();\n\n  getSlottedInputs() {\n    const supportedInputTags = [\n      getNamespacedTagFor('market-input-text'),\n      getNamespacedTagFor('market-input-password'),\n      getNamespacedTagFor('market-select'),\n      getNamespacedTagFor('market-textarea'),\n      getNamespacedTagFor('market-code-input'),\n    ];\n\n    // create flattened array of slotted supported input elements based on tag name\n    const slottedInputElements = supportedInputTags.flatMap((tag) => {\n      return [\n        ...(this.el.getElementsByTagName(tag) as HTMLCollectionOf<\n          | HTMLMarketInputTextElement\n          | HTMLMarketInputPasswordElement\n          | HTMLMarketSelectElement\n          | HTMLMarketTextareaElement\n          | HTMLMarketCodeInputElement\n        >),\n      ];\n    });\n\n    return slottedInputElements;\n  }\n\n  getErrorSlot() {\n    return this.el.querySelector('[slot=\"error\"]');\n  }\n\n  getBottomAccessorySlot() {\n    return this.el.querySelector('[slot=\"bottom-accessory\"]');\n  }\n\n  getInputElAriaDescribedby() {\n    const describedBy = [];\n\n    if (this.getErrorSlot()) {\n      describedBy.push(`${this.errorSlotId}-error`);\n    }\n\n    if (this.getBottomAccessorySlot()) {\n      describedBy.push(`${this.errorSlotId}-bottom-accessory`);\n    }\n\n    return describedBy.join(' ');\n  }\n\n  handleErrorAttributes() {\n    const errorSlotEl = this.getErrorSlot();\n    if (errorSlotEl) {\n      errorSlotEl.setAttribute('role', 'alert');\n      errorSlotEl.setAttribute('id', `${this.errorSlotId}-error`);\n    }\n  }\n\n  handleBottomAccessoryAttributes() {\n    const bottomAccessorySlotEl = this.getBottomAccessorySlot();\n    if (bottomAccessorySlotEl) {\n      bottomAccessorySlotEl.setAttribute('id', `${this.errorSlotId}-bottom-accessory`);\n    }\n  }\n\n  render() {\n    // check for slotted supported market inputs and pass properties down\n    this.getSlottedInputs().forEach((input) => {\n      input.name = this.name;\n      input.disabled = this.disabled;\n      input.invalid = this.invalid;\n      input.readonly = this.readonly;\n\n      const inputElAriaDescribedby = this.getInputElAriaDescribedby();\n      if (inputElAriaDescribedby) {\n        input.setAttribute('aria-describedby', inputElAriaDescribedby);\n      }\n    });\n\n    return (\n      <Host class=\"market-field\">\n        <slot></slot>\n\n        {this.invalid && !this.disabled && (\n          // slot relocation broke in @stencil/core@1.13.0\n          // wrapping a slot in a shadowless div as a workaround\n          // this should be fixed in 2.1.1\n          <div>\n            <slot name=\"error\" onSlotchange={() => this.handleErrorAttributes()}></slot>\n          </div>\n        )}\n        <slot name=\"bottom-accessory\" onSlotchange={() => this.handleBottomAccessoryAttributes()}></slot>\n        <slot name=\"action\"></slot>\n      </Host>\n    );\n  }\n}\n"],"mappings":"iIAAA,MAAMA,EAAiB,w8GACvB,MAAAC,EAAeD,E,MCcFE,EAAW,M,yBAyBtBC,KAAAC,YAAsBC,I,kCAdgC,M,cAMA,M,aAMD,K,CAIrD,gBAAAC,GACE,MAAMC,EAAqB,CACzBC,EAAoB,qBACpBA,EAAoB,yBACpBA,EAAoB,iBACpBA,EAAoB,mBACpBA,EAAoB,sBAItB,MAAMC,EAAuBF,EAAmBG,SAASC,GAChD,IACDR,KAAKS,GAAGC,qBAAqBF,MAUrC,OAAOF,C,CAGT,YAAAK,GACE,OAAOX,KAAKS,GAAGG,cAAc,iB,CAG/B,sBAAAC,GACE,OAAOb,KAAKS,GAAGG,cAAc,4B,CAG/B,yBAAAE,GACE,MAAMC,EAAc,GAEpB,GAAIf,KAAKW,eAAgB,CACvBI,EAAYC,KAAK,GAAGhB,KAAKC,oB,CAG3B,GAAID,KAAKa,yBAA0B,CACjCE,EAAYC,KAAK,GAAGhB,KAAKC,+B,CAG3B,OAAOc,EAAYE,KAAK,I,CAG1B,qBAAAC,GACE,MAAMC,EAAcnB,KAAKW,eACzB,GAAIQ,EAAa,CACfA,EAAYC,aAAa,OAAQ,SACjCD,EAAYC,aAAa,KAAM,GAAGpB,KAAKC,oB,EAI3C,+BAAAoB,GACE,MAAMC,EAAwBtB,KAAKa,yBACnC,GAAIS,EAAuB,CACzBA,EAAsBF,aAAa,KAAM,GAAGpB,KAAKC,+B,EAIrD,MAAAsB,GAEEvB,KAAKG,mBAAmBqB,SAASC,IAC/BA,EAAMC,KAAO1B,KAAK0B,KAClBD,EAAME,SAAW3B,KAAK2B,SACtBF,EAAMG,QAAU5B,KAAK4B,QACrBH,EAAMI,SAAW7B,KAAK6B,SAEtB,MAAMC,EAAyB9B,KAAKc,4BACpC,GAAIgB,EAAwB,CAC1BL,EAAML,aAAa,mBAAoBU,E,KAI3C,OACEC,EAACC,EAAI,CAAAC,IAAA,2CAACC,MAAM,gBACVH,EAAA,QAAAE,IAAA,6CAECjC,KAAK4B,UAAY5B,KAAK2B,UAIrBI,EAAA,OAAAE,IAAA,4CACEF,EAAA,QAAAE,IAAA,2CAAMP,KAAK,QAAQS,aAAc,IAAMnC,KAAKkB,2BAGhDa,EAAA,QAAAE,IAAA,2CAAMP,KAAK,mBAAmBS,aAAc,IAAMnC,KAAKqB,oCACvDU,EAAA,QAAAE,IAAA,2CAAMP,KAAK,W"}