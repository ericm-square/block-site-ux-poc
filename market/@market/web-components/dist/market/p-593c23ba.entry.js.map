{"version":3,"names":["marketSegmentCss","MarketSegmentStyle0","MarketSegment","setSelectedState","state","this","selected","Promise","resolve","selectSegment","disabled","marketSegmentSelectedChanged","emit","render","h","Host","key","class","onClick"],"sources":["src/components/market-segmented-control/subcomponents/market-segment/market-segment.css?tag=market-segment&encapsulation=shadow","src/components/market-segmented-control/subcomponents/market-segment/market-segment.tsx"],"sourcesContent":["@import \"../../../../styles/mixins/component-base.css\";\n\n:host {\n  --segmented-control-option-min-width: var(--core-small-size-minimum-height);\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  min-width: var(--segmented-control-option-min-width); /* ensures >40px tap target */\n  padding: var(--segmented-control-option-padding-vertical) var(--segmented-control-option-padding-horizontal);\n  border-radius: var(--segmented-control-option-background-radius);\n  color: var(--segmented-control-option-label-normal-state);\n  font-weight: var(--segmented-control-option-label-weight);\n  font-size: var(--segmented-control-option-label-size);\n  line-height: var(--segmented-control-option-label-leading);\n  letter-spacing: var(--segmented-control-option-label-tracking);\n  text-align: center;\n  cursor: pointer;\n  transition: color var(--segmented-control-animation-duration);\n}\n\n:host([selected]) {\n  color: var(--segmented-control-option-label-selected-state);\n\n  /* box shadow managed by segmented control slider */\n  box-shadow: none !important;  /* stylelint-disable-line declaration-no-important */\n}\n\n:host([disabled]) {\n  background: var(--segmented-control-option-background-disabled-state-color);\n  color: var(--segmented-control-option-label-disabled-state-color);\n  cursor: not-allowed;\n}\n\n:host(:hover:not([selected]):not([disabled])) {\n  color: var(--segmented-control-option-label-hover-state-color);\n}\n\n:host(:active:not([disabled])) {\n  color: var(--segmented-control-option-label-pressed-state-color);\n}\n","import { Component, Host, h, Element, Event, EventEmitter, Method, Prop, State } from '@stencil/core';\n\n@Component({\n  tag: 'market-segment',\n  styleUrl: 'market-segment.css',\n  shadow: true,\n})\nexport class MarketSegment {\n  @Element() el: HTMLMarketSegmentElement;\n\n  /**\n   * Whether the market segment should appear in a disabled state.\n   */\n  @Prop({ mutable: true, reflect: true }) disabled: boolean = false;\n\n  /**\n   * A string specifying a value for the segment.\n   */\n  @Prop({ mutable: true, reflect: true }) value: string;\n\n  /**\n   * A boolean specifying whether the segment is selected or not.\n   */\n  @State() selected: boolean = false;\n\n  /**\n   * Fired when the segment is clicked or otherwise selected\n   */\n  @Event({ bubbles: true, composed: true }) marketSegmentSelectedChanged: EventEmitter<{\n    value: boolean;\n    prevValue: boolean;\n  }>;\n\n  @Method()\n  setSelectedState(state) {\n    this.selected = state;\n    return Promise.resolve();\n  }\n\n  @Method()\n  selectSegment() {\n    if (this.selected || this.disabled) {\n      return Promise.resolve();\n    }\n    this.marketSegmentSelectedChanged.emit();\n    return Promise.resolve();\n  }\n\n  render() {\n    return (\n      <Host selected={this.selected} class=\"market-segment\" onClick={() => this.selectSegment()}>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n"],"mappings":"gEAAA,MAAMA,EAAmB,66CACzB,MAAAC,EAAeD,E,MCMFE,EAAa,M,kHAMoC,M,mCAU/B,K,CAW7B,gBAAAC,CAAiBC,GACfC,KAAKC,SAAWF,EAChB,OAAOG,QAAQC,S,CAIjB,aAAAC,GACE,GAAIJ,KAAKC,UAAYD,KAAKK,SAAU,CAClC,OAAOH,QAAQC,S,CAEjBH,KAAKM,6BAA6BC,OAClC,OAAOL,QAAQC,S,CAGjB,MAAAK,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,2CAACV,SAAUD,KAAKC,SAAUW,MAAM,iBAAiBC,QAAS,IAAMb,KAAKI,iBACxEK,EAAA,QAAAE,IAAA,6C"}