{"version":3,"names":["marketTableV2Css","MarketTableV2Style0","MarketTableV2","onMarketTableV2SelectionChange","e","header","footer","this","target","detail","eventSelected","current","stopPropagation","setSelected","silent","setSelectedFromChildEvent","onMarketTableV2CellSortClicked","el","children","groups","sortedCell","parentElement","newSortOrder","headerChildren","sortedColumnIndex","indexOf","sortStrategy","sortStrategyFormat","sortedChildren","sortItems","items","order","column","strategy","format","forEach","group","sort","sortOrder","cell","undefined","row","append","onDragMove","_a","reorder","dragMove","onDragLeave","dragLeave","onDragEnd","dragEnd","onDragDrop","dragDrop","watchCollapsible","rows","collapsible","indent","length","watchReorderable","reorderable","reorderMode","marketTableV2RowsReordered","destroy","reorderEnabled","includes","rowTagName","getNamespacedTagFor","groupTagName","Reorderable","accepts","event","mode","syncDragEnabled","selected","prevSelected","Promise","resolve","async","child","childSelected","childrenSelected","map","tableSelected","every","val","getElements","filter","tagName","toUpperCase","find","dragEnabled","isDraggable","onSlotChange","connectedCallback","componentDidRender","render","h","Host","key","class","role","part","onSlotchange"],"sources":["src/components/tables-v2/market-table-v2/market-table-v2.css?tag=market-table-v2&encapsulation=shadow","src/components/tables-v2/market-table-v2/market-table-v2.tsx"],"sourcesContent":[":host,\n* {\n  box-sizing: border-box;\n}\n\n/* host element is the scrollable wrapper for the inner table */\n:host {\n  --table-cell-state-normal-background-color: var(--core-surface-10-color);\n\n  position: relative;\n  display: block;\n\n  /* host elememt scrolls when inner table overflows */\n  overflow: auto;\n  width: 100%;\n  background-color: var(--table-cell-state-normal-background-color);\n\n  /* enable tabular (monospaced) figures for numbers */\n  font-feature-settings: \"tnum\";\n\n  /* the inner table */\n  [role=\"table\"] {\n    display: table;\n    vertical-align: middle;\n    width: 100%;\n    height: 100%;\n    border-spacing: 0;\n    border-collapse: separate;\n    table-layout: auto;\n    text-align: left;\n  }\n\n  /* weird, but slot needs to inherit in order to cascade to slotted items */\n  slot {\n    vertical-align: inherit;\n    text-align: inherit;\n  }\n\n  &([layout=\"fixed\"]) [role=\"table\"] {\n    table-layout: fixed;\n  }\n\n  &([align=\"left\"]) [role=\"table\"] {\n    text-align: left;\n  }\n\n  &([align=\"center\"]) [role=\"table\"] {\n    text-align: center;\n  }\n\n  &([align=\"right\"]) [role=\"table\"] {\n    text-align: right;\n  }\n\n  &([valign=\"top\"]) [role=\"table\"] {\n    vertical-align: top;\n  }\n\n  &([valign=\"middle\"]) [role=\"table\"] {\n    vertical-align: middle;\n  }\n\n  &([valign=\"bottom\"]) [role=\"table\"] {\n    vertical-align: bottom;\n  }\n}\n\n::slotted(.market-drag-cursor) {\n  --drag-cursor-height: 4px;\n\n  position: absolute;\n  right: 0;\n  left: 0;\n  display: block;\n  height: 0;\n  outline: calc(var(--drag-cursor-height) / 2) solid var(--core-emphasis-fill-color);\n  pointer-events: none;\n}\n","import { Component, Host, h, Prop, Element, Watch, Listen, Method, Event, EventEmitter } from '@stencil/core';\nimport { getNamespacedTagFor } from '../../../utils/namespace';\nimport {\n  HTMLMarketTableV2ChildElement,\n  TMarketTableV2Selection,\n  MarketTableV2SelectionChangeEventDetail,\n  MarketTableV2SortOrderChangeDetail,\n} from './types';\nimport { Reorderable, TMarketReorderableOptions, TMarketReorderEventDetail } from '../../../utils/reorderable';\nimport { isDraggable, TMarketDragEventDetail } from '../../../utils/draggable';\nimport { sortItems } from './utils';\n\n/**\n * @slot - Default slot for all rows.\n * @part table - The inner table element.\n */\n\n@Component({\n  tag: 'market-table-v2',\n  styleUrl: 'market-table-v2.css',\n  shadow: true,\n})\nexport class MarketTableV2 {\n  private rows: Array<HTMLMarketTableV2RowElement>;\n  private groups: Array<HTMLMarketTableV2GroupElement>;\n  private children: Array<HTMLMarketTableV2ChildElement>;\n  private header: HTMLMarketTableV2RowElement;\n  private footer: HTMLMarketTableV2RowElement;\n  private reorder: Reorderable;\n\n  @Element() el: HTMLMarketTableV2Element;\n\n  /**\n   * Sets the horizontal alignment.\n   * Table alignment will be inherited by descendant rows & cells.\n   */\n  @Prop({ reflect: true }) readonly align: 'left' | 'center' | 'right';\n\n  /**\n   * Whether the slotted table groups are collapsible.\n   */\n  @Prop({ reflect: true }) readonly collapsible: boolean = false;\n\n  /**\n   * Sets the `table-layout` algorithm.\n   * By default, the column widths are adjusted to fit the content.\n   * If column widths are explicitly sized, use `fixed` to speed up render time.\n   * See [table-layout](https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout)\n   * for more information.\n   */\n  @Prop({ reflect: true }) readonly layout: 'auto' | 'fixed' = 'auto';\n\n  /**\n   * Whether the table is reorderable or not.\n   * Setting to `internal` enables reordering table rows internally\n   * while `external` also allows dragging to & from other tables.\n   */\n  @Prop({ reflect: true }) readonly reorderable: TMarketReorderableOptions;\n\n  /**\n   * When set to `framework`, the table will move the reordered item back to its original position\n   * before the `marketTableV2RowsReordered` event is fired. This is useful when the table\n   * is rendered within a framework like Ember or React.\n   */\n  @Prop() readonly reorderMode: 'default' | 'framework' = 'default';\n\n  /**\n   * Whether the table is selected.\n   * Relevant if the table has rows with a slotted controls.\n   */\n  @Prop({ mutable: true }) selected: TMarketTableV2Selection = 'false';\n\n  /**\n   * Sets the vertical alignment.\n   * Table alignment will be inherited by descendant rows & cells.\n   */\n  @Prop({ reflect: true }) readonly valign: 'bottom' | 'middle' | 'top';\n\n  /**\n   * Fired when the table rows are reordered.\n   * If a row was dropped into this table from an external table, `oldIndex` is `-1`.\n   * If a row was removed from this table and dropped into an external table, `newIndex` is `-1`.\n   */\n  @Event({ bubbles: true, composed: true }) marketTableV2RowsReordered: EventEmitter<TMarketReorderEventDetail>;\n\n  @Listen('marketInternalTableV2RowSelectionChange')\n  @Listen('marketInternalTableV2GroupSelectionChange')\n  async onMarketTableV2SelectionChange(e: CustomEvent<MarketTableV2SelectionChangeEventDetail>) {\n    const { header, footer } = this;\n    const { target, detail } = e;\n    const eventSelected = detail.current;\n\n    e.stopPropagation();\n\n    if (target === header || target === footer) {\n      // the target is the header or footer, so propagate values downward\n      await this.setSelected(eventSelected, { silent: true });\n    } else {\n      // the target is a child, and it's complicated...\n      await this.setSelectedFromChildEvent(e);\n    }\n  }\n\n  @Listen('marketTableV2CellSortClicked')\n  onMarketTableV2CellSortClicked(e: CustomEvent<MarketTableV2SortOrderChangeDetail>) {\n    const { el, header, children, groups, footer } = this;\n    const sortedCell = e.target as HTMLMarketTableV2CellElement;\n\n    // only allow sorting from the header row\n    if (sortedCell.parentElement !== header) return;\n\n    const { current: newSortOrder } = e.detail;\n    const headerChildren = [...header.children];\n    const sortedColumnIndex = headerChildren.indexOf(sortedCell);\n    const { sortStrategy, sortStrategyFormat } = sortedCell;\n\n    // sort the children\n    const sortedChildren = sortItems({\n      items: children,\n      order: newSortOrder,\n      column: sortedColumnIndex,\n      strategy: sortStrategy,\n      format: sortStrategyFormat,\n    });\n\n    // sort the groups' children\n    groups?.forEach((group) => {\n      group.sort({\n        order: newSortOrder,\n        column: sortedColumnIndex,\n        strategy: sortStrategy,\n        format: sortStrategyFormat,\n      });\n    });\n\n    // set the header sort values\n    sortedCell.sortOrder = newSortOrder;\n    headerChildren.forEach((cell: HTMLMarketTableV2CellElement) => {\n      cell.sortOrder = cell === sortedCell ? newSortOrder : undefined;\n    });\n\n    // render the sorted rows\n    sortedChildren.forEach((row: HTMLMarketTableV2RowElement) => {\n      el.append(row);\n    });\n    if (footer) el.append(footer);\n  }\n\n  @Listen('marketDragMove')\n  onDragMove(e: CustomEvent<TMarketDragEventDetail>) {\n    this.reorder?.dragMove(e);\n  }\n\n  @Listen('marketDragLeave')\n  onDragLeave() {\n    this.reorder?.dragLeave();\n  }\n\n  @Listen('marketDragEnd')\n  onDragEnd(e: CustomEvent<TMarketDragEventDetail>) {\n    this.reorder?.dragEnd(e);\n  }\n\n  @Listen('marketDragDrop')\n  onDragDrop(e: CustomEvent<TMarketDragEventDetail>) {\n    this.reorder?.dragDrop(e);\n  }\n\n  @Watch('collapsible')\n  watchCollapsible() {\n    const { rows, groups, collapsible } = this;\n\n    groups.forEach((group) => {\n      group.collapsible = collapsible;\n      group.indent = 0;\n    });\n\n    rows.forEach((row) => {\n      // per design, don't indent header or footer rows\n      if (row.header || row.footer) return;\n      // indent rows to line up with groups w/ carets\n      row.indent = collapsible && groups.length > 0 ? 1 : 0;\n    });\n  }\n\n  @Watch('reorderable')\n  watchReorderable() {\n    const { el, reorder, reorderable, reorderMode, marketTableV2RowsReordered } = this;\n\n    reorder?.destroy();\n\n    const reorderEnabled = ['internal', 'external'].includes(reorderable);\n    if (reorderEnabled) {\n      const rowTagName = getNamespacedTagFor('market-table-v2-row');\n      const groupTagName = getNamespacedTagFor('market-table-v2-group');\n\n      this.reorder = new Reorderable({\n        el,\n        accepts: [`${rowTagName}:not([header]):not([footer]):not([slot=\"parent\"])`, groupTagName],\n        event: marketTableV2RowsReordered,\n        mode: reorderMode,\n      });\n    }\n\n    this.syncDragEnabled();\n  }\n\n  /**\n   * @internal\n   * Sets selection on the table and propagates the value\n   * downwards to its children rows and groups.\n   */\n  @Method()\n  async setSelected(selected: TMarketTableV2Selection, { silent = false } = {}) {\n    const { header, footer, children, selected: prevSelected } = this;\n\n    // return if no values have changed\n    if (prevSelected === selected) return Promise.resolve();\n\n    // propagate the new values\n    this.selected = selected;\n    await header?.setSelected(selected, { silent });\n    await footer?.setSelected(selected, { silent });\n    children?.forEach(async (child) => {\n      await child.setSelected(selected, { silent });\n    });\n\n    return Promise.resolve();\n  }\n\n  private async setSelectedFromChildEvent(e: CustomEvent<MarketTableV2SelectionChangeEventDetail>) {\n    const { header, footer, children, selected: prevSelected } = this;\n    const { target, detail } = e;\n    const { current: childSelected } = detail;\n\n    // get an array of what the children's selected values would be AFTER this event\n    const childrenSelected = children.map((child) => {\n      // if the target was THIS child, it will be new event value (not .selected)\n      if (target === child) return childSelected;\n      // otherwise, get the current value directly from this child\n      return child.selected;\n    });\n\n    // what the table's selected value would be AFTER this event\n    const tableSelected = childrenSelected.every((val) => val === 'true')\n      ? 'true'\n      : childrenSelected.every((val) => val === 'false')\n      ? 'false'\n      : 'indeterminate';\n\n    // return if no values have changed\n    if (prevSelected === tableSelected) return;\n\n    // propagate the new value\n    this.selected = tableSelected;\n    await header?.setSelected(tableSelected, { silent: true });\n    await footer?.setSelected(tableSelected, { silent: true });\n  }\n\n  private getElements() {\n    this.rows = [...this.el.children].filter((child) => {\n      return child.tagName === getNamespacedTagFor('market-table-v2-row').toUpperCase();\n    }) as Array<HTMLMarketTableV2RowElement>;\n\n    this.groups = [...this.el.children].filter((child) => {\n      return child.tagName === getNamespacedTagFor('market-table-v2-group').toUpperCase();\n    }) as Array<HTMLMarketTableV2GroupElement>;\n\n    this.header = this.rows.find((row) => row.header);\n    this.footer = this.rows.find((row) => row.footer);\n    this.children = [...this.groups, ...this.rows.filter((row) => !row.header && !row.footer)];\n  }\n\n  private syncDragEnabled() {\n    const { header, footer, rows, groups, reorderable, reorderMode } = this;\n\n    const reorderEnabled = ['internal', 'external'].includes(reorderable);\n\n    if (header) header.dragEnabled = reorderEnabled;\n    if (footer) footer.dragEnabled = reorderEnabled;\n\n    rows?.forEach((row) => {\n      if (!isDraggable(row)) return;\n      row.dragEnabled = reorderEnabled;\n    });\n\n    groups?.forEach((group) => {\n      group.dragEnabled = reorderEnabled;\n      group.reorderable = reorderable;\n      group.reorderMode = reorderMode;\n    });\n  }\n\n  private onSlotChange() {\n    this.getElements();\n    this.watchCollapsible();\n    this.syncDragEnabled();\n  }\n\n  connectedCallback() {\n    this.getElements();\n    this.watchCollapsible();\n    this.syncDragEnabled();\n  }\n\n  componentDidRender() {\n    this.watchReorderable();\n  }\n\n  render() {\n    return (\n      <Host class=\"market-table-v2\">\n        <div role=\"table\" part=\"table\">\n          <slot onSlotchange={() => this.onSlotChange()}></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}