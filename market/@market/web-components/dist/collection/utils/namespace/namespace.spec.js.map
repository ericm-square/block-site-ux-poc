{"version":3,"file":"namespace.spec.js","sourceRoot":"","sources":["../../../../src/utils/namespace/namespace.spec.ts"],"names":[],"mappings":"AAAA,MAAM,mBAAmB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC;AAE9F,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,IAAI,mBAA8D,CAAC;IACnE,IAAI,mBAA8D,CAAC;IACnE,IAAI,oBAAgE,CAAC;IAErE,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,CAAC,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,GAAG,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3F,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAC9B,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QACzD,MAAM,CAAC,oBAAoB,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE;YAC7B,MAAM,sBAAsB,GAAG,eAAe,CAAC;YAC/C,MAAM,kBAAkB,GAAG,mBAAmB,CAAC,sBAAsB,CAAC,CAAC;YAEvE,MAAM,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE;YACzB,mBAAmB,CAAC,mBAAmB,CAAC,CAAC;YAEzC,MAAM,sBAAsB,GAAG,eAAe,CAAC;YAC/C,MAAM,uBAAuB,GAAG,6BAA6B,CAAC;YAC9D,MAAM,kBAAkB,GAAG,mBAAmB,CAAC,sBAAsB,CAAC,CAAC;YAEvE,MAAM,CAAC,mBAAmB,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAC/C,MAAM,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["const newTransformTagName = jest.fn().mockImplementation((value) => `prefix-${value}-suffix`);\n\ndescribe('namespace', () => {\n  let getNamespacedTagFor: typeof import('.')['getNamespacedTagFor'];\n  let setTransformTagName: typeof import('.')['setTransformTagName'];\n  let isElementWithTagName: typeof import('.')['isElementWithTagName'];\n\n  beforeEach(async () => {\n    ({ getNamespacedTagFor, isElementWithTagName, setTransformTagName } = await import('.'));\n  });\n\n  afterEach(() => {\n    jest.resetModules();\n  });\n\n  it('isElementWithTagName', () => {\n    const buttonEl = document.createElement('market-button');\n    expect(isElementWithTagName(buttonEl, 'market-button')).toStrictEqual(true);\n  });\n\n  describe('getNamespacedTagFor', () => {\n    it('default tag (no-op)', () => {\n      const tagNameToBeTransformed = 'market-button';\n      const transformedTagName = getNamespacedTagFor(tagNameToBeTransformed);\n\n      expect(transformedTagName).toBe(tagNameToBeTransformed);\n    });\n\n    it('custom tag name', () => {\n      setTransformTagName(newTransformTagName);\n\n      const tagNameToBeTransformed = 'market-button';\n      const expectedTransformedName = 'prefix-market-button-suffix';\n      const transformedTagName = getNamespacedTagFor(tagNameToBeTransformed);\n\n      expect(newTransformTagName).toHaveBeenCalled();\n      expect(transformedTagName).toBe(expectedTransformedName);\n    });\n  });\n});\n"]}