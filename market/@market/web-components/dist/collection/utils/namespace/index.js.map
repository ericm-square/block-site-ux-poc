{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/utils/namespace/index.ts"],"names":[],"mappings":"AAEA,IAAI,qBAAuC,CAAC;AAE5C,0FAA0F;AAC1F,0CAA0C;AAC1C,MAAM,UAAU,mBAAmB,CAA+C,OAAiB;IACjG,OAAO,IAAI,KAAK,CAAC,CAAC,GAAa,EAAY,EAAE,CAAC,GAAG,EAAE;QACjD,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI;YACzB,OAAO,OAAO,CAAC,KAAK,CAAC,qBAAqB,aAArB,qBAAqB,cAArB,qBAAqB,GAAI,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QACvE,CAAC;KACF,CAAC,CAAC,OAAO,CAAC,CAAC;AACd,CAAC;AAED,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,SAA2B,EAAQ,EAAE;IACvE,qBAAqB,GAAG,SAAS,CAAC;AACpC,CAAC,CAAC;AAEF,MAAM,UAAU,oBAAoB,CAClC,EAAW,EACX,OAAiB;;IAEjB,OAAO,CAAA,MAAA,MAAA,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,OAAO,0CAAE,WAAW,kDAAI,MAAK,mBAAmB,CAAW,OAAO,CAAC,CAAC;AACjF,CAAC","sourcesContent":["declare type TransformTagName = (tagName: string) => string;\n\nlet localTransformTagName: TransformTagName;\n\n// Allows access to the transformTagName function at runtime to transform nested children.\n// Stencil does not currently expose this.\nexport function getNamespacedTagFor<TTagName extends keyof HTMLElementTagNameMap>(tagName: TTagName): TTagName {\n  return new Proxy((tag: TTagName): TTagName => tag, {\n    apply(target, thisArg, args) {\n      return Reflect.apply(localTransformTagName ?? target, thisArg, args);\n    },\n  })(tagName);\n}\n\nexport const setTransformTagName = (transform: TransformTagName): void => {\n  localTransformTagName = transform;\n};\n\nexport function isElementWithTagName<TTagName extends keyof HTMLElementTagNameMap>(\n  el: Element,\n  tagName: TTagName,\n): el is HTMLElementTagNameMap[TTagName] {\n  return el?.tagName?.toLowerCase?.() === getNamespacedTagFor<TTagName>(tagName);\n}\n"]}