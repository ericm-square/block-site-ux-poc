{"version":3,"file":"classnames.js","sourceRoot":"","sources":["../../../src/utils/classnames.ts"],"names":[],"mappings":"AAEA;;;;;;;;;GASG;AACH,MAAM,UAAU,UAAU,CAAC,GAAG,IAAuB;IACnD,OAAO,IAAI;SACR,MAAM,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QACtB,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC;aAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;YACnC,KAAK,MAAM,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;gBAClC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;oBACZ,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAClB,CAAC;YACH,CAAC;QACH,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,EAAE,EAAE,CAAC;SACL,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,CAAC","sourcesContent":["type TClassNamesArgs = string | { [cn: string]: boolean | number | string };\n\n/**\n * Utility for joining class names\n *\n * This function accepts any number of arguments which can be a string or an object.\n * With object parameters, class names that have a truthy value are applied.\n *\n * Based on https://github.com/JedWatson/classnames\n *\n * @param {TClassNamesArgs} args class names\n */\nexport function classNames(...args: TClassNamesArgs[]): string {\n  return args\n    .reduce((result, arg) => {\n      if (typeof arg === 'string') {\n        result.push(arg);\n      } else if (typeof arg === 'object') {\n        for (const cn of Object.keys(arg)) {\n          if (arg[cn]) {\n            result.push(cn);\n          }\n        }\n      }\n      return result;\n    }, [])\n    .join(' ');\n}\n"]}