{"version":3,"file":"market-components-loaded.js","sourceRoot":"","sources":["../../../../src/utils/e2e/market-components-loaded.ts"],"names":[],"mappings":"AAAA,OAAO,eAAe,MAAM,qBAAqB,CAAC;AAElD;;;;;;;;;;;;GAYG;AAEH,MAAM,sBAAsB,GAAG,KAAK,EAAE,GAAY,EAAE,EAAE;;IACpD,IAAI,CAAC,GAAG,EAAE,CAAC;QACT,OAAO;IACT,CAAC;IAED,IAAI,eAAe,CAAC,GAAG,CAAC,EAAE,CAAC;QACzB,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;;YAC5B,MAAA,GAAG,CAAC,gBAAgB,oDAAK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gBACtC,OAAO,CAAC,KAAK,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;YACH,qGAAqG;YACrG,UAAU,CAAC,GAAG,EAAE;gBACd,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,QAAQ,GAAG,CAAC,GAAG,CAAC,MAAA,GAAG,CAAC,QAAQ,mCAAI,EAAE,CAAC,CAAC,CAAC;IAC3C,MAAM,kBAAkB,GAAG,CAAC,GAAG,CAAC,MAAA,MAAA,GAAG,CAAC,UAAU,0CAAE,QAAQ,mCAAI,EAAE,CAAC,CAAC,CAAC;IAEjE,MAAM,aAAa,GAAG,CAAC,GAAG,QAAQ,EAAE,GAAG,kBAAkB,CAAC,CAAC,MAAM,CAC/D,CAAC,EAAE,EAAE,EAAE,CACL,CAAC;QACC,uCAAuC;QACvC,KAAK;QACL,wCAAwC;QACxC,SAAS;KACV,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,CACzB,CAAC;IAEF,MAAM,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC;AAEF,eAAe,sBAAsB,CAAC","sourcesContent":["import isMarketElement from './is-market-element';\n\n/**\n * Returns a promise which does not resolve until all Market components in the\n * root element have loaded. Use before running your React tests to make sure\n * Market elements are ready to be interacted with.\n * Takes an Element as a param, which should represent a root node which holds all the Market components you need to test.\n * You can grab this by getting the baseElement property from the render results used with @testing-library/react.\n *\n * Adapted from prior art here:\n * https://github.com/ionic-team/stencil/blob/45388e95edb46ef357eb9ae37cd32bbb5bc1ed23/test/karma/test-app/util.ts#L88-L106\n *\n * @param {Element} domNode\n * @returns {Promise<void>}\n */\n\nconst marketComponentsLoaded = async (elm: Element) => {\n  if (!elm) {\n    return;\n  }\n\n  if (isMarketElement(elm)) {\n    await new Promise((resolve) => {\n      elm.componentOnReady?.().then((value) => {\n        resolve(value);\n      });\n      // Sometimes elements get destroyed before they resolve componentOnReady and then tests will timeout.\n      setTimeout(() => {\n        resolve(null);\n      }, 200);\n    });\n  }\n\n  const children = [...(elm.children ?? [])];\n  const shadowRootChildren = [...(elm.shadowRoot?.children ?? [])];\n\n  const childElements = [...children, ...shadowRootChildren].filter(\n    (el) =>\n      ![\n        // Market doesn't render inside of SVGs\n        'svg',\n        // Text nodes have an undefined tagName.\n        undefined,\n      ].includes(el.tagName),\n  );\n\n  await Promise.all(childElements.map((el) => marketComponentsLoaded(el)));\n};\n\nexport default marketComponentsLoaded;\n"]}