{"version":3,"file":"market-tile.js","sourceRoot":"","sources":["../../../../src/components/market-tile/market-tile.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, Host, Method, Prop, h, State, Watch } from '@stencil/core';\nimport { TMarketTileSelectedChanged } from './events';\nimport { classNames } from '../../utils/classnames';\n\n/**\n * @slot media - When provided, replaces the solid color background with a background image and applies a slight gradient.\n * @slot leading-accessory - An icon set on the top-left corner of the tile.\n * @slot actions - Optional slot to customize action(s) in the top-right corner of the tile. Renders a remove button by default.\n * @slot indicator - Text to render in a pill-like element on the top-right corner of the slot.\n * Is overridden by `actions`.\n * @slot hint - Large text set in the center of a medium-sized tile. Intended to be one or two letters.\n * @slot label - Text set beneath the hint slot.\n * @slot subtext - Smaller text set beneath the label slot.\n */\n@Component({\n  tag: 'market-tile',\n  styleUrl: 'market-tile.css',\n  shadow: true,\n})\nexport class MarketTile {\n  @Element() el: HTMLMarketTileElement;\n  hasTrailingAccessorySlot = false;\n  hasIndicatorTextSlot = false;\n\n  /**\n   * Whether to disable the tile.\n   */\n  @Prop({ reflect: true, attribute: 'aria-disabled' }) readonly disabled: boolean = false;\n\n  /**\n   * Enables interactivity.\n   */\n  @Prop() readonly interactive: boolean = false;\n\n  /**\n   * Whether to render the markup in the action slot.\n   */\n  @Prop() readonly showActions: boolean = false;\n\n  /**\n   * What size tile to render.\n   */\n  @Prop({ reflect: true }) readonly size: 'small' | 'medium' = 'medium';\n\n  /**\n   * Value for the tile.\n   */\n  @Prop({ reflect: true }) readonly value: string;\n\n  /**\n   * Whether the tile is currently selected\n   */\n  @Prop({ reflect: true, mutable: true }) selected: boolean = false;\n\n  /**\n   * Whether or not `[slot=\"media\"]` is provided\n   */\n  @State() hasSlottedMedia = false;\n\n  /**\n   * Fired whenever the tile is selected.\n   */\n  @Event() marketTileSelectedChanged: EventEmitter<TMarketTileSelectedChanged>;\n\n  /**\n   * Fired whenever the remove button is clicked\n   */\n  @Event() marketTileRemoveClicked: EventEmitter;\n\n  @Watch('size')\n  onSizeChange() {\n    this.adjustSlottedLabels();\n  }\n\n  /**\n   * Allows external elements to set selected value.\n   */\n  @Method()\n  setSelected(newValue: boolean) {\n    if (typeof newValue !== 'boolean') {\n      return Promise.resolve();\n    }\n\n    if (this.selected !== newValue) {\n      const { defaultPrevented } = this.marketTileSelectedChanged.emit({\n        selected: this.selected,\n        value: this.value,\n      });\n\n      if (!defaultPrevented) {\n        this.selected = newValue;\n      }\n    }\n\n    return Promise.resolve();\n  }\n\n  handleClick(event: MouseEvent | KeyboardEvent) {\n    if (this.disabled || !this.interactive) {\n      return;\n    }\n\n    this.selected = !this.selected;\n    event.preventDefault();\n    this.marketTileSelectedChanged.emit({ selected: this.selected, value: this.value });\n  }\n\n  handleRemoveActionKeydown(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        this.handleRemoveActionClick(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleRemoveActionClick(event: MouseEvent | KeyboardEvent) {\n    if (this.disabled || !this.interactive) {\n      return;\n    }\n\n    event.stopPropagation();\n    this.marketTileRemoveClicked.emit();\n  }\n\n  renderDefaultRemoveAction() {\n    const { disabled, handleRemoveActionClick, handleRemoveActionKeydown } = this;\n\n    return (\n      <button\n        class=\"remove-button\"\n        disabled={disabled}\n        onClick={handleRemoveActionClick.bind(this)}\n        onKeyUp={handleRemoveActionKeydown.bind(this)}\n      >\n        <svg\n          slot=\"icon\"\n          width=\"16\"\n          height=\"16\"\n          viewBox=\"0 0 16 16\"\n          fill=\"var(--core-critical-text-color)\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M12.8318 7.3335V7.1685H12.6668H3.3335H3.1685V7.3335V8.66683V8.83183H3.3335H12.6668H12.8318V8.66683V7.3335Z\"\n            fill=\"var(--core-critical-text-color)\"\n            stroke=\"var(--core-critical-text-color)\"\n            stroke-width=\"0.33\"\n          />\n        </svg>\n      </button>\n    );\n  }\n\n  handleKeydown(event: KeyboardEvent) {\n    // don't intercept keydown of descendant elements\n    // e.g. remove button\n    if (event.target !== this.el) {\n      return;\n    }\n\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        this.handleClick(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * This function determines the number of lines the `label` slot text should clamp to.\n   * It should clamp to a single line if the hint slot exists or if the subtext slot exists\n   * and the element `size` prop is set to \"small\".\n   */\n  adjustSlottedLabels() {\n    const { size, el } = this;\n    const hint = el.querySelector('[slot=\"hint\"]');\n    const label = el.querySelector('[slot=\"label\"]');\n    const subtext = el.querySelector('[slot=\"subtext\"]');\n\n    if (!label) {\n      return;\n    }\n\n    const labelLineClamp = hint || (subtext && size === 'small') ? 1 : 2;\n\n    el.style.setProperty('--item-tile-label-line-clamp', labelLineClamp.toString());\n  }\n\n  checkSlottedMedia() {\n    this.hasSlottedMedia = Boolean(this.el.querySelector('[slot=\"media\"]'));\n  }\n\n  componentWillLoad() {\n    this.checkSlottedMedia();\n    this.hasIndicatorTextSlot = Boolean(this.el.querySelector('[slot=\"indicator\"]'));\n  }\n\n  render() {\n    const { disabled, size, hasSlottedMedia, hasIndicatorTextSlot, interactive, showActions, selected } = this;\n    const tabindex = interactive && !disabled ? '0' : null;\n    return (\n      <Host\n        class=\"market-tile\"\n        tabindex={tabindex}\n        aria-selected={selected.toString()}\n        onClick={(e) => this.handleClick(e)}\n        onKeydown={(e) => this.handleKeydown(e)}\n      >\n        <div class={classNames('background-image', { 'has-slotted-media': hasSlottedMedia })}>\n          <slot onSlotchange={() => this.checkSlottedMedia()} name=\"media\"></slot>\n        </div>\n        <slot name=\"leading-accessory\"></slot>\n        <div class=\"trailing-accessory-container\">\n          {showActions && <slot name=\"actions\">{this.renderDefaultRemoveAction()}</slot>}\n          {!showActions && hasIndicatorTextSlot && <slot name=\"indicator\"></slot>}\n        </div>\n        <div class=\"content\">\n          {size !== 'small' && <slot onSlotchange={() => this.adjustSlottedLabels()} name=\"hint\"></slot>}\n          <slot onSlotchange={() => this.adjustSlottedLabels()} name=\"label\"></slot>\n          <slot onSlotchange={() => this.adjustSlottedLabels()} name=\"subtext\"></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}