{"version":3,"file":"market-input-search.js","sourceRoot":"","sources":["../../../../src/components/market-input-search/market-input-search.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, Element, Event, EventEmitter, Host, h, Method, Watch, AttachInternals } from '@stencil/core';\nimport { JSXBase } from '@stencil/core/internal';\n\nimport {\n  TMarketInputSearchFocusEventDetail,\n  TMarketInputSearchValueChangeEventDetail,\n  TMarketInternalInputSearchCompactAnimationEventDetail,\n} from './events';\nimport { autocompleteWatcher } from '../../utils/autocomplete';\nimport { classNames } from '../../utils/classnames';\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { submitFormImplicitly } from '../../utils/forms';\n\n/**\n * @slot input - Can be used to slot your own HTML input, if needed (ex. if supporting browser\n * autofill)\n * @part native-input - The default inner HTML input.\n */\n@Component({\n  tag: 'market-input-search',\n  shadow: true,\n  styleUrl: 'market-input-search.css',\n  formAssociated: true,\n})\nexport class InputText {\n  @Element() el: HTMLMarketInputSearchElement;\n  private nativeInputEl?: HTMLInputElement;\n  private slottedInputEl?: HTMLInputElement;\n\n  /**\n   * Bind an ElementInternals object to a property which you can then use to interact with the surrounding form.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/attachInternals\n   */\n  @AttachInternals() internals: ElementInternals | undefined;\n\n  /**\n   * A string specifying a value for the input;\n   * this will be visually shown on the input and can be edited by the user.\n   */\n  @Prop({ mutable: true, reflect: true }) value: string = '';\n\n  /**\n   * A string specifying the placeholder of the input;\n   * this is shown before a user attempts to add a value, given no value is already provided.\n   */\n  @Prop() readonly placeholder: string = '';\n\n  /**\n   * A number specifying the maximum length of characters for the input value\n   */\n  @Prop() readonly maxlength: number;\n\n  /**\n   * A string specifying the size of the input\n   */\n  @Prop({ reflect: true }) readonly size: 'small' | 'medium' = 'medium';\n\n  /**\n   * @deprecated\n   * **DEPRECATED (v4.5.0)** Use `size` instead.\n   *\n   * A string specifying the size of the input\n   */\n  @Prop({ reflect: true }) readonly variant: 'small' | 'medium' = 'medium';\n\n  /**\n   * A boolean representing whether the input is disabled or not;\n   * this visually and functionally will disable the input.\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * A boolean representing whether the input is focused or not\n   */\n  @Prop({ mutable: true, reflect: true }) focused: boolean = false;\n\n  /**\n   * A boolean representing whether the input should focus on page load\n   */\n  @Prop() readonly autofocus: boolean = false;\n\n  /**\n   * Whether or not this input should allow autocompletion by the browser;\n   * accepts a boolean, or `\"true\"`, `\"false\"`, `\"on\"`, `\"off\"` or an\n   * [accepted string value for the autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete).\n   *\n   * Note (source: [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)):\n   * In order to provide autocompletion, user-agents might require an input to have a:\n   * 1. Have a `name` and/or `id` attribute;\n   * 2. Be descendants of a `<form>` element;\n   * 3. The form to have a submit button\n   */\n  @Prop() readonly autocomplete: string | boolean = true;\n\n  /**\n   * A string specifying a name for the search input\n   */\n  @Prop() readonly name: string;\n\n  /**\n   * A string representing the input's aria-label; localize as needed\n   */\n  @Prop() readonly inputAriaLabel: string = 'Search';\n\n  /**\n   * A string representing the clear button's aria-label; localize as needed\n   */\n  @Prop() readonly clearButtonAriaLabel: string = 'Clear';\n\n  /**\n   * A string representing the search icon button's aria-label; localize as needed\n   */\n  @Prop() readonly searchIconButtonAriaLabel: string = 'Search icon';\n\n  /**\n   * **INTERNAL [do not use directly]**\n   *\n   * Used by `market-filter-group` when setting this component to compact mode\n   */\n  @Prop() readonly compact: boolean = false;\n\n  /**\n   * Emitted when input is cleared by clicking the clear button\n   */\n  @Event() marketInputSearchCleared: EventEmitter;\n\n  /**\n   * Emitted whenever the input value changes\n   */\n  @Event() marketInputSearchValueChange: EventEmitter<TMarketInputSearchValueChangeEventDetail>;\n\n  /**\n   * Emitted when the inner `<input>` element is focused or blurred\n   */\n  @Event() marketInputSearchFocus: EventEmitter<TMarketInputSearchFocusEventDetail>;\n\n  /**\n   * **INTERNAL [do not use directly]**\n   *\n   * Emitted when the compact animation has started or ended\n   */\n  @Event()\n  marketInternalInputSearchCompactAnimation: EventEmitter<TMarketInternalInputSearchCompactAnimationEventDetail>;\n\n  /**\n   * Emitted when the component has loaded\n   */\n  @Event() marketInputSearchDidLoad: EventEmitter;\n\n  /**\n   * Properties to set on inner default or slotted <input> elements\n   */\n  private sharedProps: Partial<JSXBase.InputHTMLAttributes<HTMLInputElement>>;\n\n  /**\n   * What will actually get bound to the <input> element\n   */\n  private _autocomplete: string;\n\n  /**\n   * Prevents blurring when the clear button is clicked\n   */\n  private clearButtonClicked: boolean;\n\n  /**\n   * This toggles focus on the inner `<input>`.\n   * When input is about to receive focus, force a `tabindex=\"-1\"` on the `<Host>`.\n   * Since the focus is already on the inner `<input>`, tabbing into `<Host>` is redundant.\n   * When the input loses is focus, the previous `tabindex` value,\n   * presumably assigned by the consumer, is assigned back.\n   */\n  @Watch('focused')\n  focusedWatcher(newValue: boolean, oldValue: boolean) {\n    if (newValue === oldValue) {\n      return;\n    }\n    if (newValue) {\n      this.nativeInputEl.focus();\n    }\n  }\n\n  @Watch('disabled')\n  disabledWatcher(newValue: boolean) {\n    // if this component is disabled but focused, make sure to remove focus\n    if (newValue && this.focused) {\n      this.setFocus(false);\n    }\n  }\n\n  @Watch('autocomplete')\n  autocompleteWatcher(newValue: string | boolean) {\n    this._autocomplete = autocompleteWatcher(newValue);\n  }\n\n  /**\n   * Sets focus styling on `<market-input-search>`;\n   * toggles focus on the native `<input>` depending on the value passed\n   * @param value new `focused` value\n   */\n  @Method()\n  setFocus(value: boolean = true) {\n    // don't do anything when: disabled; or it's already focused/blurred\n    if ((this.disabled && value) || this.focused === value) {\n      return Promise.resolve();\n    }\n    const { defaultPrevented } = this.marketInputSearchFocus.emit(value);\n    if (!defaultPrevented) {\n      this.focused = value; // this will cause the `focusedChangeHandler` to be triggered\n      if (!value && this.nativeInputEl) {\n        this.nativeInputEl.blur();\n      }\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Clears the current input value.\n   */\n  @Method()\n  clearInput(): Promise<void> {\n    const clearedEvent = this.marketInputSearchCleared.emit();\n    if (clearedEvent.defaultPrevented || this.value === '') {\n      // if the value is already '', no need to emit the value change event below\n      return Promise.resolve();\n    }\n    const valueChangeEvent = this.marketInputSearchValueChange.emit({\n      current: '',\n      prevValue: this.value,\n      originalEvent: null,\n      value: '',\n    });\n    if (!valueChangeEvent.defaultPrevented) {\n      this.value = '';\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * When the clear (X) button is clicked\n   */\n  async handleClearButtonClicked() {\n    await this.clearInput();\n    this.clearButtonClicked = true;\n  }\n\n  /**\n   * Handle value change from an <input> event\n   */\n  handleValueChange(e: Event) {\n    const target = e.target as HTMLInputElement;\n    if (!target) {\n      return;\n    }\n    const { defaultPrevented } = this.marketInputSearchValueChange.emit({\n      current: target.value,\n      prevValue: this.value,\n      originalEvent: e,\n      value: target.value,\n    });\n    if (defaultPrevented) {\n      e.preventDefault();\n      return;\n    }\n    this.updateElementInternals();\n    this.value = target.value;\n  }\n\n  /**\n   * Handles `.input-container` animation changes\n   */\n  handleAnimation(e: AnimationEvent) {\n    if (!this.compact) {\n      return;\n    }\n    if (e.animationName === 'market-input-search-compact-enter' && e.type === 'animationstart' && this.focused) {\n      this.marketInternalInputSearchCompactAnimation.emit(e.type);\n      // re-focus because `this.focused` prop change happens first before this animation even trigger\n      window.requestAnimationFrame(() => {\n        this.nativeInputEl?.focus();\n      });\n    } else if (e.animationName === 'market-input-search-compact-exit' && e.type === 'animationend') {\n      this.marketInternalInputSearchCompactAnimation.emit(e.type);\n    }\n  }\n\n  handleAccessoryClicked(e: MouseEvent, isBackIcon: boolean) {\n    if (isBackIcon) {\n      e.stopPropagation();\n      // back button should be displayed, so unfocus\n      this.setFocus(false);\n    }\n  }\n\n  handleKeyDown(e: KeyboardEvent) {\n    if (e.key === 'Enter') {\n      submitFormImplicitly(this.el);\n    }\n  }\n\n  /**\n   * Allows passing an alternative light DOM input.\n   */\n  registerSlottedInput(slottedInput?: HTMLInputElement) {\n    this.slottedInputEl =\n      slottedInput ||\n      // input slotted into market-input-search\n      this.el.querySelector('input[slot=input]') ||\n      // input slotted into a higher-level component that uses market-input-search\n      // (e.g. market-input-password)\n      (this.el.getRootNode() as ShadowRoot).host?.querySelector('input[slot=input]');\n    if (this.slottedInputEl) {\n      this.slottedInputEl.addEventListener('input', (e) => this.handleValueChange(e));\n      this.slottedInputEl.addEventListener('focus', () => this.setFocus());\n      this.slottedInputEl.addEventListener('blur', () => this.setFocus(false));\n      this.slottedInputEl.addEventListener('keydown', (e) => this.handleKeyDown(e));\n      this.nativeInputEl = this.slottedInputEl;\n    }\n  }\n\n  /**\n   * TODO: This should be a common util. -antonn\n   */\n  updateSharedInputProps() {\n    const prevSharedProps = { ...this.sharedProps };\n\n    // used by the default shadow DOM native input and to copy component properties to slotted inputs\n    // conditionally adding key/value pairs based on whether we want to set them on the <input>\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#individual_attributes\n    this.sharedProps = {\n      ...(this._autocomplete && { autocomplete: this._autocomplete }),\n      ...(this.autofocus && { autofocus: this.autofocus }),\n      ...(this.disabled && { disabled: this.disabled }),\n      ...(this.maxlength >= 0 && { maxlength: this.maxlength }),\n      ...(this.name && { name: this.name }),\n      ...(this.placeholder && { placeholder: this.placeholder }),\n      ...(this.value !== undefined && { value: this.value }),\n    };\n\n    // sync component props to slotted input, if one exists\n    if (this.slottedInputEl) {\n      const modifiedPropKeys = [...new Set([...Object.keys(prevSharedProps), ...Object.keys(this.sharedProps)])];\n      modifiedPropKeys.forEach((key: keyof typeof this.sharedProps) => {\n        if (!(key in this.sharedProps)) {\n          // remove properties that have been unset\n          this.slottedInputEl.removeAttribute(key);\n        } else {\n          /**\n           * Boolean attributes can be set using empty strings\n           * https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#javascript\n           *\n           * But for setting properties like `value` (currently the only known one), directly modify the value instead\n           * https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#gecko_notes\n           */\n          const attributeValue = this.sharedProps[key] !== true ? this.sharedProps[key] : '';\n          if (key === 'value') {\n            this.slottedInputEl.value = attributeValue;\n          } else if (attributeValue === false) {\n            this.slottedInputEl.removeAttribute(key);\n          } else {\n            this.slottedInputEl.setAttribute(key, attributeValue);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Updates the internal state of this element bound to the surrounding form.\n   */\n  updateElementInternals(): void {\n    if (!this.internals) {\n      return;\n    }\n\n    this.internals.setFormValue?.(this.value);\n\n    if (this.nativeInputEl) {\n      this.internals.setValidity?.(this.nativeInputEl.validity, this.nativeInputEl.validationMessage);\n    }\n  }\n\n  componentWillLoad() {\n    this.el.classList.add('preload'); // disables transitions on page load\n    this.autocompleteWatcher(this.autocomplete);\n    this.registerSlottedInput();\n    this.updateSharedInputProps();\n    this.updateElementInternals();\n  }\n\n  componentWillUpdate() {\n    this.updateSharedInputProps();\n    this.updateElementInternals();\n  }\n\n  componentDidLoad() {\n    this.el.classList.remove('preload');\n    this.marketInputSearchDidLoad.emit();\n  }\n\n  render() {\n    const isBackIcon = this.compact && this.focused;\n\n    // remove tabindex from host if inner <input> is already focused\n    const tabindex = this.el.querySelector('input:focus') ? -1 : undefined;\n\n    const MarketAccessoryTagName = getNamespacedTagFor('market-accessory');\n\n    return (\n      <Host\n        class=\"market-input-search\"\n        onAnimationEnd={(e: AnimationEvent) => this.handleAnimation(e)}\n        onAnimationStart={(e: AnimationEvent) => this.handleAnimation(e)}\n        onBlur={() => {\n          if (this.clearButtonClicked) {\n            this.nativeInputEl?.focus();\n            this.clearButtonClicked = false;\n          } else {\n            this.setFocus(false);\n          }\n        }}\n        onClick={(e: MouseEvent) => {\n          e.stopPropagation();\n          this.setFocus();\n        }}\n        onFocus={() => this.setFocus()}\n        tabindex={tabindex}\n      >\n        <button\n          class={classNames('leading-accessory', {\n            'is-back-icon': isBackIcon,\n          })}\n          aria-label={this.searchIconButtonAriaLabel}\n          onClick={(e: MouseEvent) => this.handleAccessoryClicked(e, isBackIcon)}\n          aria-hidden={isBackIcon ? 'false' : 'true'}\n          tabindex={isBackIcon ? '0' : '-1'}\n        >\n          <slot name=\"leading-accessory\">\n            <MarketAccessoryTagName size=\"icon\" tabindex=\"-1\" aria-hidden=\"true\">\n              {isBackIcon ? (\n                // back icon\n                <svg width=\"15\" height=\"16\" viewBox=\"0 0 15 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M0.292894 7.29285C-0.0976308 7.68337 -0.0976307 8.31654 0.292894 8.70706L7.29289 15.7071L8.70711 14.2928L3.41421 8.99995L15 8.99995L15 6.99995L3.41421 6.99995L8.70711 1.70706L7.29289 0.292846L0.292894 7.29285Z\"\n                  />\n                </svg>\n              ) : (\n                // search icon\n                <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M7.49999 14.4998C9.06999 14.4998 10.52 13.9698 11.68 13.0998L15.79 17.2098L17.2 15.7998L13.09 11.6898C13.97 10.5198 14.49 9.07983 14.49 7.50983C14.49 3.64983 11.35 0.509827 7.48999 0.509827C3.62999 0.509827 0.48999 3.64983 0.48999 7.50983C0.48999 11.3698 3.63999 14.4998 7.49999 14.4998ZM7.49999 2.49983C10.26 2.49983 12.5 4.73983 12.5 7.49983C12.5 10.2598 10.26 12.4998 7.49999 12.4998C4.73999 12.4998 2.49999 10.2598 2.49999 7.49983C2.49999 4.73983 4.73999 2.49983 7.49999 2.49983Z\" />\n                </svg>\n              )}\n            </MarketAccessoryTagName>\n          </slot>\n        </button>\n        <div class=\"input-container\">\n          <slot name=\"input\" onSlotchange={() => this.registerSlottedInput()}>\n            {!this.slottedInputEl && (\n              <input\n                aria-label={this.inputAriaLabel}\n                onInput={(e) => this.handleValueChange(e)}\n                onKeyDown={(e) => {\n                  this.handleKeyDown(e);\n                }}\n                part=\"native-input\"\n                ref={(input) => (this.nativeInputEl = input)}\n                type=\"text\"\n                {...this.sharedProps}\n              />\n            )}\n          </slot>\n        </div>\n        <slot name=\"trailing-accessory\" />\n        <button\n          aria-label={this.clearButtonAriaLabel}\n          class={classNames('clear-button', { hidden: !this.value || this.disabled })}\n          onClick={this.handleClearButtonClicked.bind(this)}\n          tabindex=\"0\"\n        >\n          <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M1.71004 13.71L7.00004 8.41004L12.29 13.71L13.71 12.29L8.41004 7.00004L13.71 1.71004L12.29 0.290039L7.00004 5.59004L1.71004 0.290039L0.290039 1.71004L5.59004 7.00004L0.290039 12.29L1.71004 13.71Z\" />\n          </svg>\n        </button>\n      </Host>\n    );\n  }\n}\n"]}