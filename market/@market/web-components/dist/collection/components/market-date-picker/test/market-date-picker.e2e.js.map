{"version":3,"file":"market-date-picker.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-date-picker/test/market-date-picker.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EElement, E2EPage, newE2EPage } from '@stencil/core/testing';\nimport { endOfWeek, startOfWeek, startOfYear, lastDayOfYear } from 'date-fns';\n\ndescribe('market-date-picker', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let header: E2EElement;\n\n  it('should render with defaults', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-date-picker></market-date-picker>');\n\n    el = await page.find('market-date-picker');\n    expect(el).not.toBeNull();\n    expect(el).toEqualAttribute('mobile-menu-position', 'top');\n    expect(await el.getProperty('timeframe')).toEqual('present');\n    expect(await el.getProperty('selectionType')).toEqual('single');\n    expect(await el.getProperty('locale')).toEqual('en-US');\n    expect(await el.getProperty('selectedStartDate')).toBeUndefined();\n    expect(await el.getProperty('selectedEndDate')).toBeUndefined();\n    expect(await el.getProperty('displayMenu')).toBeFalsy();\n  });\n\n  it('should navigate between months and update header text', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-date-picker displayed-date=\"01/29/1994\"></market-date-picker>');\n\n    el = await page.find('market-date-picker');\n\n    header = await el.find('pierce/h2');\n    expect(header.innerHTML).toEqual('Jan 1994');\n\n    const navigationArrows = await page.findAll('pierce/market-button');\n\n    // Navigation arrows are locations 0, 2\n    const nextArrow = navigationArrows[2];\n\n    await nextArrow.click();\n    await nextArrow.click();\n    await page.waitForChanges();\n\n    const updatedHeader = await el.find('pierce/h2');\n    expect(updatedHeader.innerHTML).toEqual('Mar 1994');\n  });\n\n  describe('with locale changes', () => {\n    it('should update month and weekday text when locale is changed', async () => {\n      page = await newE2EPage();\n      await page.setContent('<market-date-picker displayed-date=\"08/31/2012\"></market-date-picker>');\n\n      el = await page.find('market-date-picker');\n\n      header = await el.find('pierce/h2');\n      expect(header.innerHTML).toEqual('Aug 2012');\n\n      el.setProperty('locale', 'es');\n      await page.waitForChanges();\n\n      const updatedHeader = await el.find('pierce/h2');\n      expect(updatedHeader.innerHTML).toEqual('ago 2012');\n    });\n\n    it('should set start of week to Monday if set to French locale', async () => {\n      page = await newE2EPage();\n      await page.setContent('<market-date-picker displayed-date=\"11/05/2023\" locale=\"fr\"></market-date-picker>');\n\n      el = await page.find('market-date-picker');\n      const dates = await el.findAll('pierce/market-date-picker-date');\n\n      // The first 9 date objects are weekdays and blank spaces for Nov 2023 in the French locale.\n      const firstWeekday = dates[0];\n      const firstDate = dates[9];\n\n      expect(firstWeekday.getAttribute('day')).toEqual('lun.');\n      expect(firstDate.getAttribute('day')).toEqual('1');\n    });\n  });\n\n  it('should disable previous or future dates based on timeframe prop', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-date-picker displayed-date=\"08/31/2012\" timeframe=\"future\"></market-date-picker>');\n\n    el = await page.find('market-date-picker');\n    const dates = await el.findAll('pierce/market-date-picker-date');\n\n    // The first 10 date objects are weekdays and blank spaces for Aug 2012.\n    const firstDate = dates[10];\n    const secondDate = dates[11];\n\n    expect(firstDate.getAttribute('day')).toEqual('1');\n    expect(firstDate).toHaveAttribute('disabled');\n\n    expect(secondDate.getAttribute('day')).toEqual('2');\n    expect(secondDate).toHaveAttribute('disabled');\n  });\n\n  it('should disable future dates when using past timeframe', async () => {\n    // Test for past dates. Have to update in 2052 lols\n    page = await newE2EPage();\n    await page.setContent('<market-date-picker displayed-date=\"08/31/2052\" timeframe=\"past\"></market-date-picker>');\n\n    el = await page.find('market-date-picker');\n    const dates = await el.findAll('pierce/market-date-picker-date');\n\n    // The first 11 date objects are weekdays and blank spaces for Aug 2052.\n    const firstDate = dates[11];\n    const secondDate = dates[12];\n\n    expect(firstDate.getAttribute('day')).toEqual('1');\n    expect(firstDate).toHaveAttribute('disabled');\n\n    expect(secondDate.getAttribute('day')).toEqual('2');\n    expect(secondDate).toHaveAttribute('disabled');\n  });\n\n  it('should disable weekend dates when using custom function with isDateDisabled', async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-date-picker displayed-date=\"09/01/2013\"></market-date-picker>\n      <script>\n        const datePicker = document.querySelector('market-date-picker');\n        datePicker.isDateDisabled = (dateString) => {\n          const date = new Date(dateString)\n          const utcDay = date.getUTCDay();\n\n          /**\n           * Date will be disabled if it is\n           * Sunday or Saturday\n           */\n          return utcDay === 0 || utcDay === 6;\n        }\n      </script>\n    `);\n\n    el = await page.find('market-date-picker');\n    const dates = await el.findAll('pierce/market-date-picker-date');\n\n    // The first 7 date objects are weekdays and no blank spaces for Sept 2013.\n    const firstDate = dates[7]; // Sunday\n    const secondDate = dates[8]; // Monday\n\n    expect(firstDate.getAttribute('day')).toEqual('1');\n    expect(firstDate).toHaveAttribute('disabled');\n\n    expect(secondDate.getAttribute('day')).toEqual('2');\n    expect(secondDate).not.toHaveAttribute('disabled');\n  });\n\n  describe('in single date selection', () => {\n    it('should select a date when clicked and update on second click', async () => {\n      page = await newE2EPage();\n      await page.setContent('<market-date-picker displayed-date=\"02/22/2022\"></market-date-picker>');\n\n      el = await page.find('market-date-picker');\n      let dates = await el.findAll('pierce/market-date-picker-date');\n\n      expect(await el.getProperty('selectedStartDate')).toBeUndefined();\n\n      // The first 9 date objects are weekdays and blank spaces for Feb 2022.\n      const firstDate = dates[9];\n      let secondDate = dates[10];\n\n      expect(firstDate.getAttribute('selected')).toBeNull();\n      expect(firstDate.getAttribute('day')).toEqual('1');\n\n      expect(secondDate.getAttribute('selected')).toBeNull();\n      expect(secondDate.getAttribute('day')).toEqual('2');\n\n      firstDate.click();\n      await page.waitForChanges();\n\n      expect(firstDate).toHaveAttribute('selected');\n      expect(await el.getProperty('selectedStartDate')).toContain('2022-02-01');\n      expect(secondDate).not.toHaveAttribute('selected');\n\n      secondDate.click();\n      await page.waitForChanges();\n\n      dates = await page.findAll('pierce/market-date-picker-date');\n      secondDate = dates[10];\n\n      expect(secondDate).toHaveAttribute('selected');\n      expect(await el.getProperty('selectedStartDate')).toContain('2022-02-02');\n      expect(firstDate).not.toHaveAttribute('selected');\n    });\n  });\n\n  describe('in range date selection', () => {\n    it('should allow selection of a date range when a valid one is selected and emit marketDateRangeChanged event', async () => {\n      page = await newE2EPage();\n      await page.setContent(\n        '<market-date-picker selection-type=\"range\" displayed-date=\"02/22/2022\"></market-date-picker>',\n      );\n\n      el = await page.find('market-date-picker');\n      const dates = await el.findAll('pierce/market-date-picker-date');\n      const dateRangeChanged = await page.spyOnEvent('marketDateRangeChanged');\n\n      expect(await el.getProperty('selectedStartDate')).toBeUndefined();\n      expect(await el.getProperty('selectedEndDate')).toBeUndefined();\n\n      // The first 9 date objects are weekdays and blank spaces for Feb 2022.\n      const firstDate = dates[9];\n      const secondDate = dates[10];\n      const fifthDate = dates[13];\n\n      expect(firstDate).not.toHaveAttribute('selected');\n      expect(firstDate.getAttribute('selection')).toEqual('none');\n      expect(firstDate.getAttribute('day')).toEqual('1');\n\n      expect(fifthDate).not.toHaveAttribute('selected');\n      expect(fifthDate.getAttribute('selection')).toEqual('none');\n      expect(fifthDate.getAttribute('day')).toEqual('5');\n\n      expect(dateRangeChanged).toHaveReceivedEventTimes(0);\n\n      await firstDate.click();\n      await page.waitForChanges();\n\n      expect(dateRangeChanged).toHaveReceivedEventTimes(1);\n\n      await fifthDate.click();\n      await page.waitForChanges();\n\n      expect(firstDate).toHaveAttribute('selected');\n      expect(firstDate.getAttribute('selection')).toEqual('range-first');\n\n      expect(fifthDate).toHaveAttribute('selected');\n      expect(fifthDate.getAttribute('selection')).toEqual('range-last');\n\n      // Dates in the middle of the selected range should also be selected\n      expect(secondDate).toHaveAttribute('selected');\n      expect(secondDate.getAttribute('selection')).toEqual('range-middle');\n\n      expect(dateRangeChanged).toHaveReceivedEventTimes(2);\n    });\n\n    it('should reset date range when a new date is clicked after a valid range is selected', async () => {\n      page = await newE2EPage();\n      await page.setContent(\n        '<market-date-picker selection-type=\"range\" displayed-date=\"02/22/2022\"></market-date-picker>',\n      );\n\n      el = await page.find('market-date-picker');\n      const dates = await page.findAll('pierce/market-date-picker-date');\n\n      // The first 9 date objects are weekdays and blank spaces for Feb 2022.\n      const firstDate = dates[9];\n      const secondDate = dates[10];\n      const fifthDate = dates[13];\n\n      await secondDate.click();\n      await page.waitForChanges();\n\n      await fifthDate.click();\n      await page.waitForChanges();\n\n      // After initial range of 2-5 is set, choosing 1 should reset the range\n      await firstDate.click();\n      await page.waitForChanges();\n\n      expect(await el.getProperty('selectedStartDate')).toContain('2022-02-01');\n      expect(await el.getProperty('selectedEndDate')).toBeNull();\n\n      expect(fifthDate).not.toHaveAttribute('selected');\n      expect(fifthDate.getAttribute('selection')).toEqual('none');\n\n      expect(secondDate).not.toHaveAttribute('selected');\n      expect(secondDate.getAttribute('selection')).toEqual('none');\n\n      expect(firstDate).toHaveAttribute('selected');\n      expect(firstDate.getAttribute('selection')).toEqual('range-first');\n    });\n\n    it('should not create a date range when an invalid range is selected', async () => {\n      page = await newE2EPage();\n      await page.setContent(\n        '<market-date-picker selection-type=\"range\" displayed-date=\"02/22/2022\"></market-date-picker>',\n      );\n\n      el = await page.find('market-date-picker');\n      const dates = await page.findAll('pierce/market-date-picker-date');\n\n      // The first 9 date objects are weekdays and blank spaces for Feb 2022.\n      const secondDate = dates[10];\n      const fifthDate = dates[13];\n\n      await fifthDate.click();\n      await page.waitForChanges();\n\n      await secondDate.click();\n      await page.waitForChanges();\n\n      expect(await el.getProperty('selectedStartDate')).toContain('2022-02-02');\n      expect(await el.getProperty('selectedEndDate')).toBeNull();\n\n      expect(secondDate).toHaveAttribute('selected');\n      expect(secondDate.getAttribute('selection')).toEqual('range-first');\n\n      expect(fifthDate).not.toHaveAttribute('selected');\n      expect(fifthDate.getAttribute('selection')).toEqual('none');\n    });\n\n    it('should allow a date range of 1 day to be selected', async () => {\n      page = await newE2EPage();\n      await page.setContent(\n        '<market-date-picker selection-type=\"range\" displayed-date=\"02/22/2022\"></market-date-picker>',\n      );\n\n      el = await page.find('market-date-picker');\n      const dates = await page.findAll('pierce/market-date-picker-date');\n\n      // The first 9 date objects are weekdays and blank spaces for Feb 2022.\n      const secondDate = dates[10];\n\n      await secondDate.click();\n      await page.waitForChanges();\n\n      await secondDate.click();\n      await page.waitForChanges();\n\n      expect(await el.getProperty('selectedStartDate')).toContain('2022-02-02');\n      expect(await el.getProperty('selectedEndDate')).toContain('2022-02-02');\n\n      expect(secondDate).toHaveAttribute('selected');\n      expect(secondDate.getAttribute('selection')).toEqual('range-last');\n    });\n\n    describe('with date inputs enabled', () => {\n      it('should have invalid attribute with invalid date range', async () => {\n        page = await newE2EPage();\n        await page.setContent(\n          `<market-date-picker\n            selection-type=\"range\"\n            displayed-date=\"02/22/2022\"\n            selected-start-date=\"02/15/2022\"\n            selected-end-date=\"02/14/2022\"\n            with-inputs=\"date-and-time\">\n          </market-date-picker>`,\n        );\n\n        el = await page.find('market-date-picker');\n        const inputs = await page.findAll('pierce/market-input-text');\n\n        expect(inputs.length).toBe(4);\n        expect(el).toHaveAttribute('invalid');\n        for (const input of inputs) {\n          expect(input).toHaveAttribute('invalid');\n        }\n      });\n    });\n\n    it('should be able to set a valid date and time by typing', async () => {\n      page = await newE2EPage();\n      await page.setContent(\n        `<market-date-picker\n            selection-type=\"single\"\n            displayed-date=\"02/22/2022\"\n            with-inputs=\"date-and-time\">\n          </market-date-picker>`,\n      );\n\n      el = await page.find('market-date-picker');\n      const inputs = await page.findAll('pierce/market-input-text');\n      const dateInput = inputs[0];\n      const timeInput = inputs[1];\n\n      await dateInput.click();\n      expect(dateInput).toEqualAttribute('type', 'date');\n\n      // The input will read this as a valid date, so we have to wait before finishing typing the date.\n      await page.keyboard.type('2/20/202');\n      await page.waitForChanges();\n      await page.keyboard.type('2');\n\n      await timeInput.click();\n      expect(timeInput).toEqualAttribute('type', 'time');\n      await page.keyboard.type('0230AM');\n\n      await page.waitForChanges();\n\n      // NOTE: this test WILL FAIL locally due to timezones.\n      // If this breaks in automated testing, we can remove the time check.\n      expect(await el.getProperty('selectedStartDate')).toEqual('2022-02-20T02:30:00.000Z');\n    });\n\n    it('should be able to set an invalid date range by typing', async () => {\n      page = await newE2EPage();\n      await page.setContent(\n        `<market-date-picker\n            selection-type=\"range\"\n            displayed-date=\"02/22/2022\"\n            with-inputs=\"date\">\n          </market-date-picker>`,\n      );\n\n      el = await page.find('market-date-picker');\n      const inputs = await page.findAll('pierce/market-input-text');\n      const startDateInput = inputs[0];\n      const endDateInput = inputs[1];\n\n      expect(inputs.length).toBe(2);\n      expect(el).not.toHaveAttribute('invalid');\n      for (const input of inputs) {\n        expect(input).not.toHaveAttribute('invalid');\n      }\n\n      await startDateInput.click();\n      await page.keyboard.type('2/15/2022');\n\n      await endDateInput.click();\n      await page.keyboard.type('2/14/2022');\n\n      await page.waitForChanges();\n      expect(el).toHaveAttribute('invalid');\n      for (const input of inputs) {\n        expect(input).toHaveAttribute('invalid');\n      }\n      expect(await el.getProperty('selectedStartDate')).toContain('2022-02-15');\n      expect(await el.getProperty('selectedEndDate')).toContain('2022-02-14');\n    });\n  });\n\n  describe('with date-picker-menu enabled', () => {\n    it('should show the menu', async () => {\n      page = await newE2EPage();\n      await page.setContent('<market-date-picker display-menu=\"true\"></market-date-picker>');\n\n      // Work around to dive into TWO shadow roots, target a container element!\n      el = await page.find('market-date-picker');\n      const menuContainer = await el.find('pierce/list-view');\n      const menuRows = await menuContainer.findAll('pierce/market-row');\n\n      expect(menuContainer).not.toBeNull();\n      expect(menuRows.length).toBe(9);\n      expect(menuRows[0].innerText).toEqual('Today');\n    });\n\n    it('should show or hide menu items based on timeframe prop', async () => {\n      page = await newE2EPage();\n      await page.setContent('<market-date-picker timeframe=\"past\" display-menu=\"true\"></market-date-picker>');\n\n      el = await page.find('market-date-picker');\n      const menuContainer = await el.find('pierce/list-view');\n      const menuRows = await menuContainer.findAll('pierce/market-row');\n\n      expect(menuRows.length).toBe(5);\n      expect(menuRows[0].innerText).toEqual('Yesterday');\n      expect(menuRows[1].innerText).toEqual('Last week');\n      expect(menuRows[2].innerText).toEqual('Last month');\n      expect(menuRows[3].innerText).toEqual('Last year');\n      expect(menuRows[4].innerText).toEqual('Custom');\n    });\n\n    it('should hide menu items based on excludeMenuItems prop', async () => {\n      page = await newE2EPage();\n      await page.setContent(\n        '<market-date-picker exclude-menu-items=\"last-year,custom\" display-menu=\"true\"></market-date-picker>',\n      );\n\n      el = await page.find('market-date-picker');\n      const menuContainer = await el.find('pierce/list-view');\n      const menuRows = await menuContainer.findAll('pierce/market-row');\n\n      expect(menuRows.length).toBe(7);\n      expect(menuRows[0].innerText).toEqual('Today');\n      expect(menuRows[1].innerText).toEqual('Yesterday');\n      expect(menuRows[2].innerText).toEqual('This week');\n      expect(menuRows[3].innerText).toEqual('Last week');\n      expect(menuRows[4].innerText).toEqual('This month');\n      expect(menuRows[5].innerText).toEqual('Last month');\n      expect(menuRows[6].innerText).toEqual('This year');\n    });\n\n    it('should hide menu items based on timeframe and excludeMenuItems prop', async () => {\n      page = await newE2EPage();\n      await page.setContent(\n        '<market-date-picker timeframe=\"past\" exclude-menu-items=\"last-year,custom\" display-menu=\"true\"></market-date-picker>',\n      );\n\n      el = await page.find('market-date-picker');\n      const menuContainer = await el.find('pierce/list-view');\n      const menuRows = await menuContainer.findAll('pierce/market-row');\n\n      expect(menuRows.length).toBe(3);\n      expect(menuRows[0].innerText).toEqual('Yesterday');\n      expect(menuRows[1].innerText).toEqual('Last week');\n      expect(menuRows[2].innerText).toEqual('Last month');\n    });\n\n    it('should select correct date ranges when menu items are selected and fire associated events', async () => {\n      // Note: this test changes value by the day--because it checks for current day values.\n      // If any erroring/flaking occurs we can revisit this.\n\n      page = await newE2EPage();\n      await page.setContent('<market-date-picker display-menu=\"true\" selection-type=\"range\"></market-date-picker>');\n\n      el = await page.find('market-date-picker');\n      const menuContainer = await el.find('pierce/list-view');\n      const menuRows = await menuContainer.findAll('pierce/market-row');\n\n      const today = new Date();\n      const menuSelected = await page.spyOnEvent('marketMenuSelectionChanged');\n      const dateRangeChanged = await page.spyOnEvent('marketDateRangeChanged');\n\n      expect(menuRows[0].innerText).toEqual('Today');\n      await menuRows[0].click();\n      await page.waitForChanges();\n\n      // Using the current ISO string format causes errors due to it changing by the second.\n      // Manipulating the dates to use date strings just compare day values to get this to work.\n      let currentSelectedStartDate = new Date(await el.getProperty('selectedStartDate')).toDateString();\n\n      expect(currentSelectedStartDate).toEqual(today.toDateString());\n      expect(await el.getProperty('selectedEndDate')).toBeNull();\n      expect(menuSelected).toHaveReceivedEventTimes(1);\n      expect(dateRangeChanged).toHaveReceivedEventTimes(1);\n\n      expect(menuRows[2].innerText).toEqual('This week');\n      await menuRows[2].click();\n      await page.waitForChanges();\n\n      let startDate = startOfWeek(today).toDateString();\n      let endDate = endOfWeek(today).toDateString();\n\n      currentSelectedStartDate = new Date(await el.getProperty('selectedStartDate')).toDateString();\n      let currentSelectedEndDate = new Date(await el.getProperty('selectedEndDate')).toDateString();\n\n      expect(currentSelectedStartDate).toEqual(startDate);\n      expect(currentSelectedEndDate).toEqual(endDate);\n      expect(menuSelected).toHaveReceivedEventTimes(2);\n      expect(dateRangeChanged).toHaveReceivedEventTimes(2);\n\n      expect(menuRows[6].innerText).toEqual('This year');\n      await menuRows[6].click();\n      await page.waitForChanges();\n\n      startDate = startOfYear(today).toDateString();\n      endDate = lastDayOfYear(today).toDateString();\n\n      currentSelectedStartDate = new Date(await el.getProperty('selectedStartDate')).toDateString();\n      currentSelectedEndDate = new Date(await el.getProperty('selectedEndDate')).toDateString();\n\n      expect(currentSelectedStartDate).toEqual(startDate);\n      expect(currentSelectedEndDate).toEqual(endDate);\n      expect(menuSelected).toHaveReceivedEventTimes(3);\n      expect(dateRangeChanged).toHaveReceivedEventTimes(3);\n    });\n\n    it.skip('should properly set presetMenuOption and selected dates for the preset option', async () => {\n      jest.useFakeTimers();\n      jest.setSystemTime(new Date('2023-05-15'));\n\n      page = await newE2EPage();\n      await page.setContent(\n        '<market-date-picker selection-type=\"range\" preset-menu-option=\"this-month\" display-menu=\"true\"></market-date-picker>',\n      );\n\n      el = await page.find('market-date-picker');\n      const menuContainer = await el.find('pierce/list-view');\n      const menuRows = await menuContainer.findAll('pierce/market-row');\n\n      // Check that preset menu option is selected\n      expect(menuRows[4].innerText).toEqual('This month');\n      expect(await menuRows[4].getProperty('selected')).toEqual(true);\n\n      // Check that correct selected start and end dates are set\n      expect(await el.getProperty('selectedStartDate')).toContain('2023-05-01');\n      expect(await el.getProperty('selectedEndDate')).toContain('2023-05-31');\n\n      jest.useRealTimers();\n    });\n  });\n\n  describe('with year view', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent('<market-date-picker displayed-date=\"04/15/2024\"></market-date-picker>');\n\n      el = await page.find('market-date-picker');\n      header = await el.find('pierce/h2');\n    });\n\n    it('swaps between month and year view when header is clicked', async () => {\n      const dates = await el.findAll('pierce/market-date-picker-date');\n\n      // Weekday headers should only show in default month view\n      expect(dates[0].getAttribute('day')).toEqual('Su');\n      expect(dates[1].getAttribute('day')).toEqual('Mo');\n\n      await header.click();\n      await page.waitForChanges();\n\n      const updatedDates = await el.findAll('pierce/market-date-picker-date');\n\n      // Year and month dates should be only shown in year view\n      expect(updatedDates[0].getAttribute('day')).toEqual('2023');\n      expect(updatedDates[1].getAttribute('day')).toEqual('2024');\n\n      expect(updatedDates[3].getAttribute('day')).toEqual('Jan');\n      expect(updatedDates[4].getAttribute('day')).toEqual('Feb');\n    });\n\n    it('increments years shown when chevrons are selected', async () => {\n      // Swap to year view\n      await header.click();\n      await page.waitForChanges();\n\n      const navigationButtons = await el.findAll('pierce/market-button');\n      const dates = await el.findAll('pierce/market-date-picker-date');\n\n      expect(dates[0].getAttribute('day')).toEqual('2023');\n      expect(dates[1].getAttribute('day')).toEqual('2024');\n      expect(dates[2].getAttribute('day')).toEqual('2025');\n\n      // Decrement\n      await navigationButtons[1].click();\n      await page.waitForChanges();\n\n      expect(dates[0].getAttribute('day')).toEqual('2022');\n      expect(dates[1].getAttribute('day')).toEqual('2023');\n      expect(dates[2].getAttribute('day')).toEqual('2024');\n\n      // Increment\n      await navigationButtons[2].click();\n      await navigationButtons[2].click();\n      await page.waitForChanges();\n\n      expect(dates[0].getAttribute('day')).toEqual('2024');\n      expect(dates[1].getAttribute('day')).toEqual('2025');\n      expect(dates[2].getAttribute('day')).toEqual('2026');\n    });\n\n    it('allows selection of year to update displayed date and header', async () => {\n      // Swap to year view\n      await header.click();\n      await page.waitForChanges();\n\n      expect(header.innerHTML).toEqual('Apr 2024');\n\n      // Passed in value\n      expect(await el.getProperty('displayedDate')).toEqual('04/15/2024');\n\n      const dates = await el.findAll('pierce/market-date-picker-date');\n      await dates[0].click();\n\n      await page.waitForChanges();\n\n      expect(header.innerHTML).toEqual('Apr 2023');\n\n      // ISO string value of date, set by component\n      expect(await el.getProperty('displayedDate')).toContain('2023-04-01');\n    });\n\n    it('allows selection of month to update displayed date and switches back to month view', async () => {\n      // Swap to year view\n      await header.click();\n      await page.waitForChanges();\n\n      expect(header.innerHTML).toEqual('Apr 2024');\n\n      // Passed in value\n      expect(await el.getProperty('displayedDate')).toEqual('04/15/2024');\n\n      const dates = await el.findAll('pierce/market-date-picker-date');\n\n      expect(dates[3].getAttribute('day')).toEqual('Jan');\n      await dates[3].click();\n      await page.waitForChanges();\n\n      expect(header.innerHTML).toEqual('Jan 2024');\n\n      // ISO string value of date, set by component\n      expect(await el.getProperty('displayedDate')).toContain('2024-01-01');\n\n      // Swaps back to month view\n      const updatedDates = await el.findAll('pierce/market-date-picker-date');\n      expect(updatedDates[0].getAttribute('day')).toEqual('Su');\n      expect(updatedDates[1].getAttribute('day')).toEqual('Mo');\n    });\n  });\n\n  describe('with validation', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent('<market-date-picker displayed-date=\"Invalid Date\"></market-date-picker>');\n\n      el = await page.find('market-date-picker');\n    });\n\n    it('should set displayed date to current date if invalid date is passed or set', async () => {\n      // Note: this test changes value by the day--because it checks for current day values.\n      // If any erroring/flaking occurs we can revisit this.\n      const today = new Date();\n      const displayedDate = new Date(await el.getProperty('displayedDate'));\n\n      expect(displayedDate.toDateString()).toEqual(today.toDateString());\n      el.setProperty('displayed-date', 'Invalid Date');\n\n      await page.waitForChanges();\n      const updatedDate = new Date(await el.getProperty('displayedDate'));\n\n      expect(updatedDate.toDateString()).toEqual(today.toDateString());\n    });\n  });\n\n  describe('keyboard navigation when triggered from a market-input-text', () => {\n    // TODO: UI-7837 Not able to run this locally to debug why it's failing\n    test.skip('I can select a date using the keyboard', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-field>\n          <market-dropdown id=\"market-date-picker-field-example\" interaction=\"persistent\" popover-placement=\"bottom-start\">\n          <market-input-text slot=\"trigger\" style=\"width: 300px;\">\n            <label>Start Date</label>\n          </market-input-text>\n          <market-popover slot=\"popover\">\n            <market-date-picker displayed-date=\"02/22/2022\"></market-date-picker>\n          </market-popover>\n          </market-dropdown>\n        </market-field>`);\n\n      el = await page.find('market-date-picker');\n\n      const triggerInput = await page.find('market-input-text[slot=\"trigger\"]');\n      await triggerInput.focus();\n      await page.waitForChanges();\n\n      // Hit \"Enter\" key to open the dropdown\n      await page.keyboard.press('Enter');\n      await page.waitForChanges();\n\n      const dates = await page.findAll('pierce/market-date-picker-date');\n\n      // Tab 5 times to get to Feb 1st.\n      for (let i = 0; i < 5; i++) {\n        await page.keyboard.press('Tab');\n        await page.waitForChanges();\n      }\n\n      // Hit \"Enter\" key to confirm the date\n      await page.keyboard.press('Enter');\n      await page.waitForChanges();\n\n      // The first 9 date objects are weekdays and blank spaces for Feb 2022.\n      const firstDate = dates[9];\n      const secondDate = dates[10];\n\n      expect(firstDate).toHaveAttribute('selected');\n      expect(await el.getProperty('selectedStartDate')).toContain('2022-02-01');\n      expect(secondDate).not.toHaveAttribute('selected');\n    });\n  });\n});\n"]}