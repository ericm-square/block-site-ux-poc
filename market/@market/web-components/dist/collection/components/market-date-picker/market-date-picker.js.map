{"version":3,"file":"market-date-picker.js","sourceRoot":"","sources":["../../../../src/components/market-date-picker/market-date-picker.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop, Element, State, Listen, Event, EventEmitter } from '@stencil/core';\nimport {\n  endOfWeek,\n  isAfter,\n  isBefore,\n  isSameDay,\n  lastDayOfMonth,\n  startOfMonth,\n  startOfWeek,\n  subMonths,\n  subWeeks,\n  startOfYesterday,\n  startOfYear,\n  lastDayOfYear,\n  subYears,\n} from 'date-fns';\nimport { v4 as uuid } from 'uuid';\n\nimport { MENU_SLOT_NAMES } from './enums/menu';\nimport { TMarketDateRangeChangedEventDetail, TMarketDatePickerMenuSelectionChangedEventDetail } from './events';\n\nimport { getNamespacedTagFor } from '../../utils/namespace';\n\n/**\n * Object class to hold necessary date information when building out each market-date-picker-date for the calendar\n */\nclass Day {\n  date: string = '';\n  month: number = null;\n  year: number = null;\n\n  // For market-date-picker-date props\n  selected: boolean = false;\n  selection: 'none' | 'single' | 'range-first' | 'range-middle' | 'range-last' = 'none';\n  today: boolean = false;\n  disabled: boolean = false;\n}\n\n@Component({\n  tag: 'market-date-picker',\n  styleUrl: 'market-date-picker.css',\n  shadow: true,\n})\nexport class MarketDatePicker {\n  @Element() el: HTMLMarketDatePickerElement;\n\n  /**\n   * Whether the date picker allows selection of a single date or a date range\n   */\n  @Prop() readonly selectionType: 'single' | 'range' = 'single';\n\n  /**\n   * User selected single date or start date for a range saved as an ISO formatted string.\n   * Use DateTime string format as seen here: https://tc39.es/ecma262/#sec-date-time-string-format\n   * Example: `YYYY-MM-DDT08:00`.\n   */\n  @Prop({ reflect: true, mutable: true }) selectedStartDate: string;\n\n  /**\n   * User selected end date for a range saved as an ISO formatted string.\n   * Use DateTime string format as seen here: https://tc39.es/ecma262/#sec-date-time-string-format\n   * Example: `YYYY-MM-DDT08:00`.\n   */\n  @Prop({ reflect: true, mutable: true }) selectedEndDate: string;\n\n  /**\n   * Preset menu option to populate date picker range.\n   * Presetting `custom` should be used with `selectedStartDate` and `selectedEndDate` props.\n   * Otherwise if both `selectedStartDate/selectedEndDate` and `presetMenuOption` are given, `presetMenuOption` takes precedence.\n   */\n  @Prop() readonly presetMenuOption: MENU_SLOT_NAMES;\n\n  /**\n   * Whether or not the side market-date-picker-menu is shown.\n   * To pass in translation supported text, use slots available for each option.\n   */\n  @Prop() readonly displayMenu: boolean = false;\n\n  /**\n   * Position of menu on a mobile screen, if market-date-picker-menu is shown.\n   */\n  @Prop({ reflect: true }) readonly mobileMenuPosition: 'top' | 'bottom' = 'top';\n\n  /**\n   * A list of market-date-picker-menu items that will be excluded from appearing on the menu list.\n   * i.e. `this-year,last-year` or `today,this-week,last-week,custom`\n   * The menu names are lowercase and hyphenated strings, found here:\n   * https://github.com/squareup/market/blob/main/web/web-components/src/components/market-date-picker/enums/menu.tsx\n   *\n   * This works in conjunction with timeframe,\n   * i.e. \"timeframe=past\", excludes dates in the future in addition to the ones here.\n   * This is written as items separated by ','.\n   */\n  @Prop() readonly excludeMenuItems: string = '';\n\n  /**\n   * String for setting timeframe type to select which market-date-picker-menu items to show.\n   * Past means only past dates available, future is only current and future dates, and present is the default for all shown.\n   */\n  @Prop() readonly timeframe: 'past' | 'present' | 'future' = 'present';\n\n  /**\n   * A function that takes a datestring and returns a boolean determining if it should be disabled.\n   * This does not override disabled dates based on the timeframe prop.\n   * See https://ionicframework.com/docs/api/datetime#advanced-date-constraints for examples of passing in a function as a Stencil component prop.\n   */\n  @Prop() readonly isDateDisabled: (day: Date) => boolean;\n\n  /**\n   * Date picker locale. Defaults to browser locale. If that cannot be determined, defaults to 'en-US'.\n   */\n  @Prop() readonly locale: string = navigator.language || 'en-US';\n\n  /**\n   * The ISO formatted string that determines the displayed month on the calendar.\n   * Use DateTime string format as seen here: https://tc39.es/ecma262/#sec-date-time-string-format\n   * Example: `YYYY-MM-DDT08:00`.\n   * Note: Omitting the time portion defaults to UTC, so this may display as a day behind on your calendar!\n   * If you add hours it will default to your timezone, like the above example.\n   * Invalid date strings default to today's date.\n   */\n  @Prop({ mutable: true }) displayedDate: string;\n\n  /**\n   * This enables the input field for the date picker.\n   */\n  @Prop({ reflect: true, mutable: true }) withInputs: '' | 'date' | 'date-and-time' = '';\n\n  /**\n   * Whether the selected dates are invalid.\n   * It should not be possible to click on invalid dates, so this occurs through date inputs.\n   */\n  @Prop({ reflect: true, mutable: true }) invalid: boolean = false;\n\n  /**\n   * Displays a clickable caret in the month/year header.\n   * If it is up, we show the month/year selection view instead of dates.\n   */\n  @Prop({ reflect: true, mutable: true }) yearViewActive: boolean = false;\n\n  /**\n   * Fired whenever the selected date range is changed.\n   */\n  @Event({ bubbles: true, composed: true }) marketDateRangeChanged: EventEmitter<TMarketDateRangeChangedEventDetail>;\n\n  /**\n   * @deprecated\n   * **DEPRECATED (v4.5.0)** Use `marketDatePickerMenuSelectionChanged` instead.\n   *\n   * Fired whenever the menu selection is changed. Indicates which menu option is currently selected.\n   * Possible values are found here:\n   * https://github.com/squareup/market/blob/main/web/web-components/src/components/market-date-picker/enums/menu.tsx\n   */\n  @Event({ bubbles: true, composed: true })\n  marketMenuSelectionChanged: EventEmitter<TMarketDatePickerMenuSelectionChangedEventDetail>;\n\n  /**\n   * Current displayed month and year for the calendar view. This can be updated with month or locale changes.\n   */\n  @State() displayedMonth: string;\n\n  /**\n   * Current displayed weekday header for the calendar view. This can be updated with locale changes.\n   */\n  @State() displayedWeekdays: Array<string> = [];\n\n  /**\n   * Current displayed years for the calendar year view. This can be updated with the left and right chevron buttons.\n   */\n  @State() yearViewYearsList: Array<string> = [];\n\n  /**\n   * Currently hovered date. Only used for date range calendar styling to highlight potential ranges.\n   */\n  @State() hoveredDate: Date;\n\n  /**\n   * Array holding our Day objects to build out calendar view.\n   */\n  private days: Array<Day>;\n\n  /**\n   * Current displayed months for the calendar year view. This can be updated with locale changes.\n   */\n  private yearViewMonthList: Array<string> = [];\n\n  /**\n   * Unique id for date picker label for a11y\n   */\n  private datePickerLabel: string;\n\n  /**\n   * Build out the weekday headers based on locale for the calendar view.\n   */\n  buildWeekdays() {\n    this.displayedWeekdays = [];\n\n    // Grab start of the week\n    const weekday = startOfWeek(new Date(), { weekStartsOn: this.getLocaleFirstDayOfWeek() });\n    let weekdayText;\n\n    for (let d: number = 0; d < 7; d++) {\n      weekdayText = weekday.toLocaleDateString(this.locale, { weekday: 'short' });\n\n      // Shorten English based weekday headers by one\n      if (this.locale.startsWith('en-')) {\n        weekdayText = weekdayText.slice(0, -1);\n      }\n      this.displayedWeekdays.push(weekdayText);\n      weekday.setDate(weekday.getDate() + 1);\n    }\n  }\n\n  getLocaleFirstDayOfWeek() {\n    const intl = new Intl.Locale(this.locale) as any;\n\n    // Chrome uses weekInfo as a property, Safari uses getWeekInfo() as a fn on the locale to get week info.\n    // This is not yet supported in Firefox, so default to Sunday if no first day info is found.\n    const firstDay = intl?.weekInfo?.firstDay ?? intl?.getWeekInfo?.()?.firstDay ?? 0;\n\n    // Translates the \"Sunday\" case, which weekInfo sets to 7\n    return (firstDay % 7) as 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  }\n\n  /**\n   * Compares current hovered date to selected dates to determine correct styling for selection.\n   */\n  addHoveredDateRangeStyling(currentDate: Date, datePickerDay: Day) {\n    if (!this.hoveredDate) {\n      return;\n    }\n\n    const currentStartDate = new Date(this.selectedStartDate);\n    // Set the day to be in the middle of a range when there is a start date and no end date,\n    // and the day in question is between the start date and hovered date.\n    if (\n      this.selectedStartDate &&\n      !this.selectedEndDate &&\n      isBefore(currentDate, this.hoveredDate) &&\n      isAfter(currentDate, currentStartDate)\n    ) {\n      datePickerDay.selection = 'range-middle';\n    }\n\n    if (!isSameDay(this.hoveredDate, currentDate)) {\n      return;\n    }\n\n    // If there's no start date, or a date range is selected, or the hovered date is before or the same as the start date,\n    // the hovered button should be the start of a new range.\n    if (\n      !this.selectedStartDate ||\n      (this.selectedStartDate && this.selectedEndDate) ||\n      !isAfter(this.hoveredDate, currentStartDate)\n    ) {\n      datePickerDay.selection = 'range-first';\n    } else {\n      datePickerDay.selection = 'range-last';\n    }\n  }\n\n  /**\n   * Helper function to add selection metadata to the date object being processed in buildCalendar.\n   */\n  addDateSelectionAttributes(day, calendarDate, currentStartDate, currentEndDate) {\n    // Checks for start date comparison (for both single/range types)\n    if (currentStartDate && isSameDay(calendarDate, currentStartDate)) {\n      day.selected = true;\n      day.selection = this.selectionType === 'single' ? 'single' : 'range-first';\n    }\n\n    // For range types only, check for dates within a selected range, or ends in a range\n    if (this.selectionType === 'range') {\n      this.addHoveredDateRangeStyling(calendarDate, day);\n\n      if (\n        currentStartDate &&\n        currentEndDate &&\n        isAfter(calendarDate, currentStartDate) &&\n        isBefore(calendarDate, currentEndDate)\n      ) {\n        day.selected = true;\n        day.selection = 'range-middle';\n      }\n\n      if (currentEndDate && isSameDay(calendarDate, currentEndDate)) {\n        day.selected = true;\n        day.selection = 'range-last';\n      }\n    }\n  }\n\n  /**\n   * The main chunk of this component is building out the calendar view.\n   * Ensures correct styling and formatting is placed on each date component.\n   * Adapted from: https://ionicframework.com/blog/building-with-stencil-calendar-component/\n   */\n  buildCalendar() {\n    const today: Date = new Date();\n    const currentDisplayedDate = new Date(this.displayedDate);\n\n    // Calendar used in iteration\n    const calendar: Date = new Date(currentDisplayedDate.getFullYear(), currentDisplayedDate.getMonth(), 1);\n\n    // First day of month may not be first day of week\n    // Roll back until first day of week\n\n    // First day can either start at Sunday or Monday, so if it is Monday, subtract a day at the start of the calendar\n    const firstDayOffset = this.getLocaleFirstDayOfWeek();\n\n    // Handles edge case where a locale with Monday as the first day, starts on Sunday\n    // This case builds the calendar with 6 blank squares in front of the first day (as expected)\n    if (calendar.getDay() === 0 && firstDayOffset === 1) {\n      calendar.setDate(calendar.getDate() - 6);\n    } else {\n      calendar.setDate(calendar.getDate() - (calendar.getDay() - firstDayOffset));\n    }\n\n    // Clear days to be rendered\n    this.days = [];\n\n    // Create date objects from selected dates if they exist\n    const currentStartDate = this.selectedStartDate && new Date(this.selectedStartDate);\n    const currentEndDate = this.selectedEndDate && new Date(this.selectedEndDate);\n\n    for (let d: number = 0; d < 42; d++) {\n      // Day to be rendered\n      // Seed with current date in iteration\n      const day: Day = new Day();\n      day.year = calendar.getFullYear();\n      day.month = calendar.getMonth();\n\n      // Populate day in month\n      // Undefined date properties are not rendered\n      if (\n        calendar.getFullYear() === currentDisplayedDate.getFullYear() &&\n        calendar.getMonth() === currentDisplayedDate.getMonth()\n      ) {\n        day.date = calendar.getDate().toString();\n      }\n\n      // Check for today\n      if (isSameDay(calendar, today)) {\n        day.today = true;\n      }\n\n      // Check for selection types\n      this.addDateSelectionAttributes(day, calendar, currentStartDate, currentEndDate);\n\n      // Check for disabled dates\n      if (day.date && this.isDateDisabled) {\n        day.disabled = this.isDateDisabled(calendar);\n      }\n\n      if (this.timeframe === 'future' && isBefore(calendar, today) && !isSameDay(calendar, today)) {\n        day.disabled = true;\n      }\n\n      if (this.timeframe === 'past' && isAfter(calendar, today) && !isSameDay(calendar, today)) {\n        day.disabled = true;\n      }\n\n      // Add to days to be rendered\n      this.days.push(day);\n\n      // Move to next date\n      calendar.setDate(calendar.getDate() + 1);\n\n      // Do not render the last week\n      // Depending on calendar layout\n      // Some months require five weeks\n      // Others six weeks (see May 2021)\n      if (calendar.getDay() === 0 + firstDayOffset && calendar.getMonth() !== currentDisplayedDate.getMonth()) {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Helper function to clear date selections.\n   */\n  clearDateSelections() {\n    this.selectedStartDate = null;\n    this.selectedEndDate = null;\n  }\n\n  /**\n   * Used for the navigation arrows in the market-date-picker header, moves the calendar forward/backward by increment.\n   * Currently only used for +1/-1 month.\n   */\n  navigateMonth(increment) {\n    const currentDisplayedDate = new Date(this.displayedDate);\n    this.displayedDate = new Date(\n      currentDisplayedDate.getFullYear(),\n      currentDisplayedDate.getMonth() + increment,\n      1,\n    ).toISOString();\n  }\n\n  /**\n   *  When ever an event changes the selected date, this updates the calendar view.\n   *  The event receives a date string in the yyyy-mm-dd or yyy-mm-ddThh:mm format.\n   *  this then checks what parts of the date have changed and only sends the changed parts to the\n   * _selectDate function that receives (day, month, year)\n   */\n  @Listen('marketDatePickerInputDateSet')\n  dateInputDateSet({ detail: { date, input } }) {\n    const [newDate, time] = date.split('T');\n    const [newYear, newMonth, newDay] = newDate.split('-').map(Number);\n    this.displayedDate = new Date(newYear, newMonth - 1, 1).toString();\n\n    // fallback to undefined, to prevent overwriting if time was initialized but withTime is disabled.\n    const [hour, minute] = this.withInputs === 'date-and-time' ? time.split(':').map(Number) : [];\n    this._selectDate({\n      day: newDay,\n      month: newMonth - 1,\n      year: newYear,\n      hour,\n      minute,\n      input,\n    });\n  }\n\n  /**\n   * Whenever a market-date-picker-date is selected, this updates the selected date props, which then updates the calendar view.\n   */\n  @Listen('marketDatePickerDateSelected')\n  selectDate({ detail: { date: dateElement } }) {\n    if (dateElement.type !== 'day') {\n      this.updateDisplayedHeader(dateElement.type, dateElement.day);\n    } else {\n      this._selectDate({ day: dateElement.day });\n    }\n  }\n\n  /**\n   * Whenever a market-date-picker-date is moused over or hovered, this updates the hovered date to update the calendar view.\n   */\n  @Listen('marketDatePickerDateMousedOver')\n  hoverDate({ detail: { date: dateElement } }) {\n    const currentDisplayedDate = new Date(this.displayedDate);\n    this.hoveredDate = new Date(currentDisplayedDate.getFullYear(), currentDisplayedDate.getMonth(), dateElement.day);\n  }\n\n  /**\n   * Whenever a market-date-picker-date is moused out, clear any hovering styling in the calendar view.\n   */\n  @Listen('marketDatePickerDateMousedOut')\n  mousedOutDate() {\n    this.hoveredDate = null;\n  }\n\n  /**\n   * Whenever a market-row within market-date-picker-menu is selected, this ensures we move the current selected dates\n   * to whichever option the user has selected.\n   */\n  @Listen('marketDatePickerMenuSelectionChanged')\n  selectMenuRow(e: CustomEvent<TMarketDatePickerMenuSelectionChangedEventDetail>) {\n    const menuOption = e.detail.menuSelection;\n    if (!menuOption) {\n      return;\n    }\n    this.marketMenuSelectionChanged.emit({\n      menuSelection: menuOption,\n    });\n\n    const prevStartDate = this.selectedStartDate;\n    const prevEndDate = this.selectedEndDate;\n    this._setMenuRowOption(menuOption);\n\n    if (menuOption !== MENU_SLOT_NAMES.CUSTOM) {\n      this.marketDateRangeChanged.emit({\n        prevStartDate,\n        prevEndDate,\n        startDate: this.selectedStartDate,\n        endDate: this.selectedEndDate,\n        menuSelection: menuOption,\n      });\n    }\n  }\n\n  /**\n   * Updates invalid state of date picker based on date input selections\n   */\n  @Listen('marketDatePickerInputDateInvalidStateChanged')\n  setInvalidState({ detail: { invalid } }) {\n    this.invalid = invalid;\n  }\n\n  private _setMenuRowOption(menuOption: `${MENU_SLOT_NAMES}`) {\n    const today = new Date();\n\n    switch (menuOption) {\n      case MENU_SLOT_NAMES.TODAY:\n        this.clearDateSelections();\n        this.selectedStartDate = today.toISOString();\n        break;\n\n      case MENU_SLOT_NAMES.YESTERDAY:\n        this.clearDateSelections();\n        this.selectedStartDate = startOfYesterday().toISOString();\n        break;\n\n      case MENU_SLOT_NAMES.THIS_WEEK:\n        this.selectedStartDate = startOfWeek(today).toISOString();\n        if (this.selectionType === 'range') {\n          this.selectedEndDate = endOfWeek(today).toISOString();\n        }\n        break;\n\n      case MENU_SLOT_NAMES.LAST_WEEK: {\n        const lastWeekDate = subWeeks(today, 1);\n\n        this.selectedStartDate = startOfWeek(lastWeekDate).toISOString();\n        if (this.selectionType === 'range') {\n          this.selectedEndDate = endOfWeek(lastWeekDate).toISOString();\n        }\n        break;\n      }\n\n      case MENU_SLOT_NAMES.THIS_MONTH:\n        this.selectedStartDate = startOfMonth(today).toISOString();\n        if (this.selectionType === 'range') {\n          this.selectedEndDate = lastDayOfMonth(today).toISOString();\n        }\n        break;\n\n      case MENU_SLOT_NAMES.LAST_MONTH: {\n        const lastMonthDate = subMonths(today, 1);\n\n        this.selectedStartDate = startOfMonth(lastMonthDate).toISOString();\n        if (this.selectionType === 'range') {\n          this.selectedEndDate = lastDayOfMonth(lastMonthDate).toISOString();\n        }\n        break;\n      }\n\n      case MENU_SLOT_NAMES.THIS_YEAR:\n        this.selectedStartDate = startOfYear(today).toISOString();\n        if (this.selectionType === 'range') {\n          this.selectedEndDate = lastDayOfYear(today).toISOString();\n        }\n        break;\n\n      case MENU_SLOT_NAMES.LAST_YEAR: {\n        const lastYearDate = subYears(today, 1);\n\n        this.selectedStartDate = startOfYear(lastYearDate).toISOString();\n        if (this.selectionType === 'range') {\n          this.selectedEndDate = lastDayOfYear(lastYearDate).toISOString();\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n\n    // Update displayed date to selected date\n    if (menuOption !== MENU_SLOT_NAMES.CUSTOM) {\n      this.displayedDate = this.selectedStartDate;\n    }\n  }\n\n  _selectDate(options: {\n    day?: number;\n    month?: number;\n    year?: number;\n    hour?: number;\n    minute?: number;\n    input?: string;\n  }) {\n    const prevStartDate = this.selectedStartDate;\n    const prevEndDate = this.selectedEndDate;\n\n    const currentDisplayedDate = new Date(this.displayedDate);\n\n    // Handles case where month is January, represented by 0\n    const checkedMonth = options.month ?? currentDisplayedDate.getMonth();\n\n    const day = new Date(\n      options.year || currentDisplayedDate.getFullYear(),\n      checkedMonth,\n      options.day || currentDisplayedDate.getDate(),\n      options.hour || currentDisplayedDate.getHours(),\n      options.minute || currentDisplayedDate.getMinutes(),\n    ).toISOString();\n\n    if (this.displayMenu && !isSameDay(new Date(this.selectedStartDate), new Date(day))) {\n      // Select custom menu row if it exists when calendar is updated\n      const menu = this.el.shadowRoot.querySelector<HTMLMarketDatePickerMenuElement>(\n        getNamespacedTagFor('market-date-picker-menu'),\n      );\n      menu._selectCustomRow();\n    }\n\n    if (this.selectionType === 'single') {\n      this.clearDateSelections();\n      this.selectedStartDate = day;\n    } else {\n      // Date range logic\n      if (this.selectedStartDate && !this.selectedEndDate && day >= this.selectedStartDate) {\n        // if new day is equal or after selected start date, and end date isn't set, update end date.\n        this.selectedEndDate = day;\n      } else {\n        if (options.input) {\n          if (options.input === 'start') this.selectedStartDate = day;\n          if (options.input === 'end') this.selectedEndDate = day;\n        } else {\n          this.clearDateSelections();\n          this.selectedStartDate = day;\n        }\n      }\n    }\n\n    this.marketDateRangeChanged.emit({\n      prevStartDate,\n      prevEndDate,\n      startDate: this.selectedStartDate,\n      endDate: this.selectedEndDate,\n      menuSelection: MENU_SLOT_NAMES.CUSTOM,\n    });\n  }\n\n  // MONTH & YEAR VIEW FUNCTIONS\n  toggleCaret() {\n    this.yearViewActive = !this.yearViewActive;\n  }\n\n  validateDisplayedDate(date: string) {\n    // Handles invalid dates passed in to displayed date\n    if (new Date(date).toString() === 'Invalid Date') {\n      this.displayedDate = new Date().toISOString();\n    }\n  }\n\n  buildInitialYearView() {\n    this.validateDisplayedDate(this.displayedDate);\n\n    const currentDisplayedDate = new Date(this.displayedDate);\n    const currentYear = currentDisplayedDate.getFullYear();\n    this.yearViewYearsList = [(currentYear - 1).toString(), currentYear.toString(), (currentYear + 1).toString()];\n\n    for (let i = 0; i < 12; i++) {\n      const monthName = new Date(2024, i).toLocaleDateString(this.locale, { month: 'short' });\n      this.yearViewMonthList.push(monthName);\n    }\n  }\n\n  updateDisplayedYearList(increment: number) {\n    this.yearViewYearsList = this.yearViewYearsList.map((year) => {\n      return (Number(year) + increment).toString();\n    });\n  }\n\n  updateDisplayedHeader(type: string, value: string) {\n    let updatedDate;\n    if (type === 'year') {\n      updatedDate = { year: value };\n    }\n\n    if (type === 'month') {\n      const monthDate = new Date(`${value} 1`);\n      const monthValue = monthDate.toLocaleDateString(this.locale, { month: 'numeric' });\n\n      updatedDate = { month: Number(monthValue) - 1 };\n\n      // Close the year view if month is selected\n      this.toggleCaret();\n    }\n\n    const currentDisplayedDate = new Date(this.displayedDate);\n\n    // Handles case where month is January, represented by 0\n    const checkedMonth = updatedDate?.month ?? currentDisplayedDate.getMonth();\n    const day = new Date(updatedDate.year || currentDisplayedDate.getFullYear(), checkedMonth, 1).toISOString();\n\n    this.displayedDate = day;\n  }\n\n  componentWillLoad() {\n    if (this.presetMenuOption) {\n      this._setMenuRowOption(this.presetMenuOption);\n    }\n\n    this.buildInitialYearView();\n    this.datePickerLabel = `date-picker-label-${uuid()}`;\n  }\n\n  /**\n   * Core function called whenever props or states are changed to update the calendar view.\n   */\n  componentWillRender() {\n    this.validateDisplayedDate(this.displayedDate);\n    this.displayedMonth = new Date(this.displayedDate).toLocaleString(this.locale, { month: 'short', year: 'numeric' });\n    this.buildWeekdays();\n    this.buildCalendar();\n  }\n\n  render() {\n    const MarketDatePickerMenuTagName = getNamespacedTagFor('market-date-picker-menu');\n    const MarketDatePickerDateTagName = getNamespacedTagFor('market-date-picker-date');\n    const MarketDatePickerInputDateTagName = getNamespacedTagFor('market-date-picker-input-date');\n    const MarketButtonTagName = getNamespacedTagFor('market-button');\n    const MarketIconTagName = getNamespacedTagFor('market-icon');\n    const MarketDividerTagName = getNamespacedTagFor('market-divider');\n\n    // TODO: remove when design tokens are added (UI-6454)\n    const DATE_PICKER_BUTTON_PREVIOUS_YEAR_ICON_ASSET = 'chevron-left';\n    const DATE_PICKER_BUTTON_NEXT_YEAR_ICON_ASSET = 'chevron-right';\n    const DATE_PICKER_BUTTON_PREVIOUS_MONTH_ICON_ASSET = 'arrow-left';\n    const DATE_PICKER_BUTTON_NEXT_MONTH_ICON_ASSET = 'arrow-right';\n\n    return (\n      <Host class=\"market-date-picker\">\n        {/* DATE PICKER MENU */}\n        {this.displayMenu && (\n          <list-view>\n            <MarketDatePickerMenuTagName\n              timeframe={this.timeframe}\n              excludeMenuItems={this.excludeMenuItems}\n              presetMenuOption={this.presetMenuOption}\n            >\n              <slot name={MENU_SLOT_NAMES.TODAY} slot={MENU_SLOT_NAMES.TODAY}>\n                Today\n              </slot>\n              <slot name={MENU_SLOT_NAMES.YESTERDAY} slot={MENU_SLOT_NAMES.YESTERDAY}>\n                Yesterday\n              </slot>\n              <slot name={MENU_SLOT_NAMES.THIS_WEEK} slot={MENU_SLOT_NAMES.THIS_WEEK}>\n                This week\n              </slot>\n              <slot name={MENU_SLOT_NAMES.LAST_WEEK} slot={MENU_SLOT_NAMES.LAST_WEEK}>\n                Last week\n              </slot>\n              <slot name={MENU_SLOT_NAMES.THIS_MONTH} slot={MENU_SLOT_NAMES.THIS_MONTH}>\n                This month\n              </slot>\n              <slot name={MENU_SLOT_NAMES.LAST_MONTH} slot={MENU_SLOT_NAMES.LAST_MONTH}>\n                Last month\n              </slot>\n              <slot name={MENU_SLOT_NAMES.THIS_YEAR} slot={MENU_SLOT_NAMES.THIS_YEAR}>\n                This year\n              </slot>\n              <slot name={MENU_SLOT_NAMES.LAST_YEAR} slot={MENU_SLOT_NAMES.LAST_YEAR}>\n                Last year\n              </slot>\n              <slot name={MENU_SLOT_NAMES.CUSTOM} slot={MENU_SLOT_NAMES.CUSTOM}>\n                Custom\n              </slot>\n            </MarketDatePickerMenuTagName>\n          </list-view>\n        )}\n\n        {/* DATE PICKER CALENDAR VIEW */}\n        <calendar>\n          {/* DATE PICKER HEADER */}\n          <header>\n            <nav>\n              {!this.yearViewActive && (\n                <MarketButtonTagName\n                  class=\"left-nav\"\n                  size=\"small\"\n                  aria-label=\"Previous month\"\n                  onClick={() => this.navigateMonth(-1)}\n                >\n                  <MarketIconTagName\n                    slot=\"icon\"\n                    name={DATE_PICKER_BUTTON_PREVIOUS_MONTH_ICON_ASSET}\n                  ></MarketIconTagName>\n                </MarketButtonTagName>\n              )}\n              <MarketButtonTagName\n                class=\"year-view-button\"\n                aria-label={'Toggle year view'}\n                onClick={() => this.toggleCaret()}\n                caret={this.yearViewActive ? 'up' : 'down'}\n                rank=\"tertiary\"\n              >\n                <h2 id={this.datePickerLabel}>{this.displayedMonth}</h2>\n              </MarketButtonTagName>\n              {!this.yearViewActive && (\n                <MarketButtonTagName size=\"small\" aria-label=\"Next month\" onClick={() => this.navigateMonth(1)}>\n                  <MarketIconTagName slot=\"icon\" name={DATE_PICKER_BUTTON_NEXT_MONTH_ICON_ASSET}></MarketIconTagName>\n                </MarketButtonTagName>\n              )}\n            </nav>\n          </header>\n\n          {/* DATE PICKER GROUP VIEW */}\n          {!this.yearViewActive && (\n            <month-view role=\"grid\" aria-labelledby={this.datePickerLabel}>\n              {\n                // Set the weekdays header for the date picker calendar\n                this.displayedWeekdays.map((text) => (\n                  <MarketDatePickerDateTagName\n                    class={'weekday-header'}\n                    disabled={true}\n                    day={text}\n                  ></MarketDatePickerDateTagName>\n                ))\n              }\n              {\n                // Set the available dates\n                this.days.map((day: Day) => (\n                  <MarketDatePickerDateTagName\n                    disabled={day.disabled}\n                    selection={day.selection}\n                    today={day.today}\n                    selected={day.selected}\n                    day={day.date || null}\n                    type=\"day\"\n                  ></MarketDatePickerDateTagName>\n                ))\n              }\n            </month-view>\n          )}\n          {this.yearViewActive && (\n            <year-view aria-labelledby={this.datePickerLabel}>\n              {/* add chevrons for year updates */}\n              <year-section>\n                <MarketButtonTagName\n                  size=\"small\"\n                  rank=\"tertiary\"\n                  aria-label=\"Previous year\"\n                  onClick={() => this.updateDisplayedYearList(-1)}\n                >\n                  <MarketIconTagName slot=\"icon\" name={DATE_PICKER_BUTTON_PREVIOUS_YEAR_ICON_ASSET}></MarketIconTagName>\n                </MarketButtonTagName>\n                {this.yearViewYearsList.map((year) => (\n                  <MarketDatePickerDateTagName day={year} type=\"year\"></MarketDatePickerDateTagName>\n                ))}\n                <MarketButtonTagName\n                  size=\"small\"\n                  rank=\"tertiary\"\n                  aria-label=\"Next year\"\n                  onClick={() => this.updateDisplayedYearList(1)}\n                >\n                  <MarketIconTagName slot=\"icon\" name={DATE_PICKER_BUTTON_NEXT_YEAR_ICON_ASSET}></MarketIconTagName>\n                </MarketButtonTagName>\n              </year-section>\n              <MarketDividerTagName size=\"thin\"></MarketDividerTagName>\n              <month-section role=\"grid\">\n                {this.yearViewMonthList.map((monthName: string) => (\n                  <MarketDatePickerDateTagName day={monthName} type=\"month\"></MarketDatePickerDateTagName>\n                ))}\n              </month-section>\n            </year-view>\n          )}\n          {this.withInputs && (\n            <MarketDatePickerInputDateTagName\n              class=\"date-input-top-margin\"\n              range={this.selectionType === 'range'}\n              isDateDisabled={this.isDateDisabled}\n              selectedStartDate={this.selectedStartDate}\n              selectedEndDate={this.selectedEndDate}\n              withTime={this.withInputs === 'date-and-time'}\n              timeframe={this.timeframe}\n            >\n              <slot name=\"start-date\" slot=\"start-date\">\n                {this.selectionType === 'range' ? 'Start ' : ''}Date\n              </slot>\n              <slot name=\"end-date\" slot=\"end-date\">\n                End Date\n              </slot>\n              <slot name=\"start-time\" slot=\"start-time\">\n                {this.selectionType === 'range' ? 'Start ' : ''}Time\n              </slot>\n              <slot name=\"end-time\" slot=\"end-time\">\n                End Time\n              </slot>\n              <slot name=\"range-error\" slot=\"range-error\">\n                Enter a valid date range\n              </slot>\n            </MarketDatePickerInputDateTagName>\n          )}\n        </calendar>\n      </Host>\n    );\n  }\n}\n"]}