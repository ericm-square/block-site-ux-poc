{"version":3,"file":"market-date-picker-date.spec.js","sourceRoot":"","sources":["../../../../../../../src/components/market-date-picker/subcomponents/market-date-picker-date/test/market-date-picker-date.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAElE,OAAO,gBAAgB,MAAM,mBAAmB,CAAC;AAEjD,0DAA0D;AAC1D,MAAM,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAE3C,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;IACvC,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,oBAAoB,CAAC;YAClC,IAAI,EAAE,qDAAqD;SAC5D,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;KAK7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,oBAAoB,CAAC;YAClC,IAAI,EAAE,kEAAkE;SACzE,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,oBAAoB,CAAC;YAClC,IAAI,EAAE,6EAA6E;SACpF,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,oBAAoB,CAAC;YAClC,IAAI,EAAE,sFAAsF;SAC7F,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { MarketDatePickerDate } from '../market-date-picker-date';\n\nimport MutationObserver from 'mutation-observer';\n\n// Fix for ReferenceError: MutationObserver is not defined\nglobal.MutationObserver = MutationObserver;\n\ndescribe('market-date-picker-date', () => {\n  it('renders correctly', async () => {\n    const page = await newSpecPage({\n      components: [MarketDatePickerDate],\n      html: '<market-date-picker-date></market-date-picker-date>',\n    });\n\n    expect(page.root).toEqualHtml(`\n      <market-date-picker-date class=\"market-date-picker-date\" selection=\"none\" tabindex=\"-1\">\n        <mock:shadow-root>\n        </mock:shadow-root>\n      </market-date-picker-date>\n    `);\n  });\n\n  it('renders correctly a disabled date', async () => {\n    const page = await newSpecPage({\n      components: [MarketDatePickerDate],\n      html: '<market-date-picker-date disabled>Dim.</market-date-picker-date>',\n    });\n\n    expect(page.root).toEqualHtml(`\n      <market-date-picker-date class=\"market-date-picker-date\" selection=\"none\" tabindex=\"-1\" aria-disabled disabled>\n        <mock:shadow-root>\n        </mock:shadow-root>\n        Dim.\n      </market-date-picker-date>\n    `);\n  });\n\n  it('renders correctly a selected day-type date', async () => {\n    const page = await newSpecPage({\n      components: [MarketDatePickerDate],\n      html: '<market-date-picker-date type=\"day\" selected>Lun.</market-date-picker-date>',\n    });\n\n    expect(page.root).toEqualHtml(`\n      <market-date-picker-date class=\"market-date-picker-date\" selected=\"\" selection=\"none\" tabindex=\"-1\" type=\"day\">\n        <mock:shadow-root>\n        </mock:shadow-root>\n        Lun.\n      </market-date-picker-date>\n    `);\n  });\n\n  it('renders correctly a selected disabled day-type date', async () => {\n    const page = await newSpecPage({\n      components: [MarketDatePickerDate],\n      html: '<market-date-picker-date type=\"day\" selected disabled>Mar.</market-date-picker-date>',\n    });\n\n    expect(page.root).toEqualHtml(`\n      <market-date-picker-date aria-disabled=\"\" class=\"market-date-picker-date\" disabled=\"\" selected=\"\" selection=\"none\" tabindex=\"-1\" type=\"day\">\n        <mock:shadow-root>\n        </mock:shadow-root>\n        Mar.\n      </market-date-picker-date>\n    `);\n  });\n});\n"]}