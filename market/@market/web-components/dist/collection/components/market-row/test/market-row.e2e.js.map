{"version":3,"file":"market-row.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-row/test/market-row.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAEnD,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;QAExD,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,SAAS,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAElE,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC1B,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE3C,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACtC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,8CAA8C,CAAC,CAAC;QAEtE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEzC,MAAM,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;QAClE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,0DAA0D,CAAC,CAAC;QAElF,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,oBAAoB,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;QACxE,MAAM,sBAAsB,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;QAE5E,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QAEjB,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAEvC,MAAM,CAAC,oBAAoB,CAAC,CAAC,mBAAmB,EAAE,CAAC;QACnD,MAAM,CAAC,oBAAoB,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAElE,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QAEjB,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,sBAAsB,CAAC,CAAC,mBAAmB,EAAE,CAAC;QACrD,MAAM,CAAC,sBAAsB,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wEAAwE,EAAE,KAAK,IAAI,EAAE;QACtF,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,oEAAoE,CAAC,CAAC;QAE5F,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,oBAAoB,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;QAExE,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QAEjB,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC5D,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,yCAAyC,CAAC,CAAC;QAEjE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEzC,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC/B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;KAKrB,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClD,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE3C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAE5C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAE5C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAEhD,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE7C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;KAKrB,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,KAAK,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5C,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE3C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAEzC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE1C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE9C,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE1C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;KAIrB,CAAC,CAAC;QACH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACxD,MAAM,UAAU,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACvD,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,mCAAmC;QAC9E,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,iCAAiC;QAC1E,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC/B,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAElC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;QACvD,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;KAKrB,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC9C,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE3C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAE1C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAE1C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAE9C,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE3C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;QAClE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;KAKrB,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAE9C,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE/C,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE3C,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAClC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;KAKrB,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClD,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAEhD,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mFAAmF,EAAE,KAAK,IAAI,EAAE;QACjG,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;KAKrB,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClD,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC;QAE7E,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,QAAQ,CAAC,KAAK,EAAE,CAAC;QACvB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;KAKrB,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClD,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE3C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAE5C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAE5C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAEhD,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAE7C,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;KAIrB,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAC3B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;KAIrB,CAAC,CAAC;QAEH,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvC,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;QACpB,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACpD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mEAAmE,EAAE,KAAK,IAAI,EAAE;QACjF,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;;KAMrB,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClD,MAAM,YAAY,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEpD,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAEhD,MAAM,YAAY,CAAC,KAAK,EAAE,CAAC;QAC3B,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;;KAMrB,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClD,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEvC,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAEhD,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;QACrB,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC3C,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('market-row', () => {\n  it('should render with defaults', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-row>Apple</market-row>');\n\n    const el = await page.find('market-row');\n    const container = await el.shadowRoot.querySelector('.container');\n\n    expect(el).not.toBeNull();\n    expect(el).not.toHaveAttribute('selected');\n\n    expect(el.innerText).toEqual('Apple');\n    expect(container.tagName).toEqual('DIV');\n  });\n\n  it('can have a value', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-row value=\"apple\">Apple</market-row>');\n\n    const el = await page.find('market-row');\n\n    expect(el).toEqualAttribute('value', 'apple');\n  });\n\n  it('should become selected when clicked if interactive', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-row value=\"apple\" interactive>Apple</market-row>');\n\n    const el = await page.find('market-row');\n    const marketRowSelectedSpy = await page.spyOnEvent('marketRowSelected');\n    const marketRowDeselectedSpy = await page.spyOnEvent('marketRowDeselected');\n\n    expect(el).not.toHaveAttribute('selected');\n    await el.click();\n\n    expect(el).toHaveAttribute('selected');\n\n    expect(marketRowSelectedSpy).toHaveReceivedEvent();\n    expect(marketRowSelectedSpy.lastEvent.detail.value).toBe('apple');\n\n    await el.click();\n\n    expect(el).not.toHaveAttribute('selected');\n    expect(marketRowDeselectedSpy).toHaveReceivedEvent();\n    expect(marketRowDeselectedSpy.lastEvent.detail.value).toBe('apple');\n  });\n\n  it('should *not* become selected when clicked if interactive and transient', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-row value=\"apple\" interactive transient>Apple</market-row>');\n\n    const el = await page.find('market-row');\n    const marketRowSelectedSpy = await page.spyOnEvent('marketRowSelected');\n\n    expect(el).not.toHaveAttribute('selected');\n    await el.click();\n\n    expect(el).not.toHaveAttribute('selected');\n    expect(marketRowSelectedSpy).not.toHaveReceivedEvent();\n  });\n\n  it('should reflect value if changed after render', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-row value=\"\">Apple</market-row>');\n\n    const el = await page.find('market-row');\n    expect(el).toEqualAttribute('value', '');\n\n    el.setProperty('value', 'foo');\n    await page.waitForChanges();\n\n    expect(el).toEqualAttribute('value', 'foo');\n  });\n\n  it('behaves correctly with a slotted checkbox', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-row>\n        <label slot=\"label\">Apple</label>\n        <market-checkbox slot=\"control\"></market-checkbox>\n      </market-row>\n    `);\n\n    const el = await page.find('market-row');\n    const checkbox = await el.find('market-checkbox');\n    expect(el).toHaveAttribute('hydrated');\n    expect(el).not.toHaveAttribute('selected');\n\n    await el.hover();\n    expect(checkbox).toHaveAttribute('hovered');\n\n    await el.click();\n    expect(el).toHaveAttribute('selected');\n    expect(checkbox).toHaveAttribute('checked');\n\n    await el.click();\n    expect(el).not.toHaveAttribute('selected');\n    expect(checkbox).not.toHaveAttribute('checked');\n\n    el.setProperty('disabled', true);\n    await page.waitForChanges();\n    expect(el).toHaveAttribute('disabled');\n    expect(checkbox).toHaveAttribute('disabled');\n\n    await el.click();\n    expect(el).not.toHaveAttribute('selected');\n    expect(checkbox).not.toHaveAttribute('checked');\n  });\n\n  it('behaves correctly with a slotted radio', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-row>\n        <label slot=\"label\">Apple</label>\n        <market-radio slot=\"control\"></market-radio>\n      </market-row>\n    `);\n\n    const el = await page.find('market-row');\n    const radio = await el.find('market-radio');\n    expect(el).toHaveAttribute('hydrated');\n    expect(el).not.toHaveAttribute('selected');\n\n    await el.hover();\n    expect(radio).toHaveAttribute('hovered');\n\n    await el.click();\n    expect(el).toHaveAttribute('selected');\n    expect(radio).toHaveAttribute('selected');\n\n    await el.click();\n    expect(el).not.toHaveAttribute('selected');\n    expect(radio).not.toHaveAttribute('selected');\n\n    el.setProperty('disabled', true);\n    await page.waitForChanges();\n    expect(el).toHaveAttribute('disabled');\n    expect(radio).toHaveAttribute('disabled');\n\n    await el.click();\n    expect(el).not.toHaveAttribute('selected');\n  });\n\n  it('behaves correctly in drill mode', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-row variant=\"drill\">\n        <label slot=\"label\">Apple</label>\n      </market-row>\n    `);\n    await page.waitForChanges();\n\n    const el = await page.find('market-row');\n    const controlSlot = await el.find('slot[name=control]');\n    const drillCaret = await el.find('pierce/.drill-icon');\n    expect(el).toHaveAttribute('hydrated');\n    expect(el).toHaveAttribute('interactive'); // drill rows should be interactive\n    expect(el).toHaveAttribute('transient'); // drill rows should be transient\n    expect(el).not.toHaveAttribute('selected');\n    expect(controlSlot).toBeNull();\n    expect(drillCaret).not.toBeNull();\n\n    await el.click();\n    await page.waitForChanges();\n    expect(el).not.toHaveAttribute('selected');\n  });\n\n  it('behaves correctly with a slotted toggle', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-row>\n        <label slot=\"label\">Apple</label>\n        <market-toggle slot=\"control\"></market-toggle>\n      </market-row>\n    `);\n\n    const el = await page.find('market-row');\n    const toggle = await el.find('market-toggle');\n    expect(el).toHaveAttribute('hydrated');\n    expect(el).not.toHaveAttribute('selected');\n\n    await el.hover();\n    expect(toggle).toHaveAttribute('hovered');\n\n    await el.click();\n    expect(el).toHaveAttribute('selected');\n    expect(toggle).toHaveAttribute('checked');\n\n    await el.click();\n    expect(el).not.toHaveAttribute('selected');\n    expect(toggle).not.toHaveAttribute('checked');\n\n    el.setProperty('disabled', true);\n    await page.waitForChanges();\n    expect(el).toHaveAttribute('disabled');\n    expect(toggle).toHaveAttribute('disabled');\n\n    await el.click();\n    expect(el).not.toHaveAttribute('selected');\n    expect(toggle).not.toHaveAttribute('checked');\n  });\n\n  it('properly disables and re-enables a slotted control', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-row>\n        <label slot=\"label\">Apple</label>\n        <market-toggle slot=\"control\"></market-toggle>\n      </market-row>\n    `);\n\n    const el = await page.find('market-row');\n    const toggle = await el.find('market-toggle');\n\n    expect(el).not.toHaveAttribute('disabled');\n    expect(toggle).not.toHaveAttribute('disabled');\n\n    el.setProperty('disabled', true);\n    await page.waitForChanges();\n    expect(el).toHaveAttribute('disabled');\n    expect(toggle).toHaveAttribute('disabled');\n\n    el.setProperty('disabled', false);\n    await page.waitForChanges();\n    expect(el).not.toHaveAttribute('disabled');\n    expect(toggle).not.toHaveAttribute('disabled');\n  });\n\n  it('can be programmatically selected when the row is disabled', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-row disabled>\n        <label slot=\"label\">Apple</label>\n        <market-checkbox slot=\"control\"></market-checkbox>\n      </market-row>\n    `);\n\n    const el = await page.find('market-row');\n    const checkbox = await el.find('market-checkbox');\n    expect(checkbox).not.toHaveAttribute('checked');\n\n    el.setProperty('selected', true);\n    await page.waitForChanges();\n    expect(checkbox).toHaveAttribute('checked');\n  });\n\n  it('does not fire a checkbox (slotted control) change event when disabled and clicked', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-row disabled>\n        <label slot=\"label\">Apple</label>\n        <market-checkbox slot=\"control\"></market-checkbox>\n      </market-row>\n    `);\n\n    const el = await page.find('market-row');\n    const checkbox = await el.find('market-checkbox');\n    const marketCheckboxSpy = await page.spyOnEvent('marketCheckboxValueChange');\n\n    await el.click();\n    await checkbox.click();\n    await page.waitForChanges();\n\n    expect(marketCheckboxSpy).not.toHaveReceivedEvent();\n  });\n\n  it('behaves correctly with a leading checkbox', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-row control-position='leading'>\n        <label slot=\"label\">Apple</label>\n        <market-checkbox slot=\"control\" />\n      </market-row>\n    `);\n\n    const el = await page.find('market-row');\n    const checkbox = await el.find('market-checkbox');\n    expect(el).toHaveAttribute('hydrated');\n    expect(el).not.toHaveAttribute('selected');\n\n    await el.hover();\n    expect(checkbox).toHaveAttribute('hovered');\n\n    await el.click();\n    expect(el).toHaveAttribute('selected');\n    expect(checkbox).toHaveAttribute('checked');\n\n    await el.click();\n    expect(el).not.toHaveAttribute('selected');\n    expect(checkbox).not.toHaveAttribute('checked');\n\n    el.setProperty('disabled', true);\n    await page.waitForChanges();\n    expect(el).toHaveAttribute('disabled');\n    expect(checkbox).toHaveAttribute('disabled');\n\n    await el.click();\n    expect(el).not.toHaveAttribute('selected');\n    expect(checkbox).not.toHaveAttribute('checked');\n  });\n\n  it('coerces non-string values to strings', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-row>\n        <label slot=\"label\">Zero</label>\n      </market-row>\n    `);\n\n    const el = await page.find('market-row');\n    el.setProperty('value', 0);\n    await page.waitForChanges();\n\n    expect(await el.getProperty('value')).toEqual('0');\n  });\n\n  it('does not intercept keyboard events of descendant elements', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-row interactive>\n        <input type=\"text\" />\n      </market-row>\n    `);\n\n    const input = await page.find('input');\n    await input.focus();\n    await page.keyboard.type('A sentence with spaces.');\n    expect(await input.getProperty('value')).toEqual('A sentence with spaces.');\n  });\n\n  it('should not select the row when a slotted market-button is clicked', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-row>\n        <label slot=\"label\">Row</label>\n        <market-checkbox slot=\"control\"></market-checkbox>\n        <market-button size=\"small\" slot=\"trailing-accessory\">Button</market-button>\n      </market-row>\n    `);\n\n    const el = await page.find('market-row');\n    const checkbox = await el.find('market-checkbox');\n    const marketButton = await el.find('market-button');\n\n    expect(el).not.toHaveAttribute('selected');\n    expect(checkbox).not.toHaveAttribute('checked');\n\n    await marketButton.click();\n    expect(el).not.toHaveAttribute('selected');\n    expect(checkbox).not.toHaveAttribute('checked');\n  });\n\n  it('should not select the row when a slotted button is clicked', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-row>\n        <label slot=\"label\">Row</label>\n        <market-checkbox slot=\"control\"></market-checkbox>\n        <button size=\"small\" slot=\"trailing-accessory\">Button</button>\n      </market-row>\n    `);\n\n    const el = await page.find('market-row');\n    const checkbox = await el.find('market-checkbox');\n    const button = await el.find('button');\n\n    expect(el).not.toHaveAttribute('selected');\n    expect(checkbox).not.toHaveAttribute('checked');\n\n    await button.click();\n    expect(el).not.toHaveAttribute('selected');\n    expect(checkbox).not.toHaveAttribute('checked');\n  });\n});\n"]}