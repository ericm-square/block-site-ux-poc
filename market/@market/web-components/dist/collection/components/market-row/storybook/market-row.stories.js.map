{"version":3,"file":"market-row.stories.js","sourceRoot":"","sources":["../../../../../src/components/market-row/storybook/market-row.stories.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { SlottedAccessoryTypes } from '../../../../docs/helpers/slotted-accessory';\nimport { SlottedControlTypes } from '../../../../docs/helpers/slotted-control';\nimport {\n  MarketRowTemplate,\n  MarketRowExamplesTemplate,\n  MarketRowInteractiveExamplesTemplate,\n} from './market-row.templates';\n\nexport default {\n  title: 'Components/Row/API',\n  component: 'market-row',\n  tags: ['autodocs', '!dev'],\n  argTypes: {\n    // set markup controls\n    label: {\n      name: 'Label',\n      description: 'Slot in a label element',\n      control: { type: 'text' },\n      table: { category: 'Demo' },\n    },\n    subtext: {\n      name: 'Subtext',\n      description: 'Slot in a subtext element',\n      control: { type: 'text' },\n      table: { category: 'Demo' },\n    },\n    sideLabel: {\n      name: 'Side label',\n      description: 'Slot in a side label element',\n      control: { type: 'text' },\n      table: { category: 'Demo' },\n    },\n    sideSubtext: {\n      name: 'Side subtext',\n      description: 'Slot in a side subtext element',\n      control: { type: 'text' },\n      table: { category: 'Demo' },\n    },\n    control: {\n      name: 'Control',\n      description: 'Slot in a control element',\n      control: { type: 'select' },\n      table: { category: 'Demo' },\n      options: SlottedControlTypes,\n    },\n    leadingAccessory: {\n      name: 'Leading accessory',\n      description: 'Slot in a leading accessory',\n      control: { type: 'select' },\n      table: { category: 'Demo' },\n      options: SlottedAccessoryTypes,\n    },\n    trailingAccessory: {\n      name: 'Trailing accessory',\n      description: 'Slot in a trailing accessory',\n      control: { type: 'select' },\n      table: { category: 'Demo' },\n      options: SlottedAccessoryTypes,\n    },\n  },\n  args: {\n    label: 'Row',\n    subtext: '',\n    sideLabel: '',\n    sideSubtext: '',\n  },\n} as Meta;\n\nexport const API: StoryObj = {\n  render: (args) => MarketRowTemplate(args),\n};\n\nexport const Examples: StoryObj = {\n  render: (args) => MarketRowExamplesTemplate(args),\n};\n\nexport const InteractiveExamples: StoryObj = {\n  render: (args) => MarketRowInteractiveExamplesTemplate(args),\n};\n\n// ------------------------------\n// Medium Rows\n// ------------------------------\nexport const MediumExamples: StoryObj = {\n  ...Examples,\n};\nexport const MediumInteractiveExamples: StoryObj = {\n  ...InteractiveExamples,\n};\nexport const MediumDestructiveExamples: StoryObj = {\n  ...Examples,\n  args: { destructive: true },\n};\nexport const MediumDestructiveInteractiveExamples: StoryObj = {\n  ...InteractiveExamples,\n  args: { destructive: true },\n};\n\n// ------------------------------\n// Small Rows\n// ------------------------------\nexport const SmallExamples: StoryObj = {\n  ...Examples,\n  args: { size: 'small' },\n};\nexport const SmallInteractiveExamples: StoryObj = {\n  ...InteractiveExamples,\n  args: { size: 'small' },\n};\nexport const SmallDestructiveExamples: StoryObj = {\n  ...Examples,\n  args: { size: 'small', destructive: true },\n};\nexport const SmallDestructiveInteractiveExamples: StoryObj = {\n  ...InteractiveExamples,\n  args: { size: 'small', destructive: true },\n};\n\n// ------------------------------\n// Guide\n// ------------------------------\n\nexport const WrappingBehavior: StoryObj = {\n  render: () => html`\n    <market-row interactive>\n      <label slot=\"label\">\n        This label is long and will wrap on smaller screens, which is good since you can read it.\n      </label>\n      <p slot=\"subtext\">Secondary text is also long and will wrap on smaller screens, and that's cool too.</p>\n    </market-row>\n    <style>\n      market-row {\n        /* giving the row a narrow width so it'll wrap, no need to copy this */\n        width: 400px;\n      }\n    </style>\n  `,\n};\n\nexport const TruncationBehavior: StoryObj = {\n  render: () => html`\n    <market-row interactive class=\"my-market-row\">\n      <label class=\"my-label\" slot=\"label\">\n        This label is long and will wrap on smaller screens, but the extra text is not super important so it's OK to\n        truncate.\n      </label>\n      <p class=\"my-subtext\" slot=\"subtext\">\n        Secondary text is also long and will wrap on smaller screens, but the extra text is not super important so it's\n        OK to truncate.\n      </p>\n    </market-row>\n    <style>\n      market-row {\n        /* giving the row a narrow width so it'll wrap, no need to copy this */\n        width: 400px;\n      }\n      .my-label,\n      .my-subtext {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    </style>\n  `,\n};\n"]}