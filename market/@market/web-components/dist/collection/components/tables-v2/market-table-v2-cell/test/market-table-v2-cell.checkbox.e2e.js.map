{"version":3,"file":"market-table-v2-cell.checkbox.e2e.js","sourceRoot":"","sources":["../../../../../../src/components/tables-v2/market-table-v2-cell/test/market-table-v2-cell.checkbox.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-table-v2-cell: checkbox control', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let checkbox: E2EElement;\n  let selectionChangeSpy: EventSpy;\n\n  describe('when rendered not selected', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table-v2-cell>\n          <market-checkbox slot=\"control\"></market-checkbox>\n          Cell\n        </market-table-v2-cell>\n      `);\n      el = await page.find('market-table-v2-cell');\n      checkbox = await el.find('market-checkbox');\n      selectionChangeSpy = await el.spyOnEvent('marketInternalTableV2CellSelectionChange');\n    });\n\n    it('renders an unchecked checkbox', async () => {\n      expect(checkbox).not.toBeNull();\n      expect(await checkbox.getProperty('checked')).toBe(false);\n      expect(await checkbox.getProperty('indeterminate')).toBe(false);\n    });\n\n    describe('when the checkbox is clicked', () => {\n      beforeEach(async () => {\n        await checkbox.click();\n        await page.waitForChanges();\n      });\n\n      it('sets the cell selection to true', async () => {\n        expect(await el.getProperty('selected')).toBe('true');\n      });\n\n      it('renders a checked checkbox', async () => {\n        expect(await checkbox.getProperty('checked')).toBe(true);\n        expect(await checkbox.getProperty('indeterminate')).toBe(false);\n      });\n\n      it('fires the internal change event', () => {\n        expect(selectionChangeSpy).toHaveReceivedEventTimes(1);\n        expect(selectionChangeSpy).toHaveReceivedEventDetail({ current: 'true', previous: 'false' });\n      });\n    });\n  });\n\n  describe('when rendered with selected = true', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table-v2-cell selected=\"true\">\n          <market-checkbox slot=\"control\"></market-checkbox>\n          Cell\n        </market-table-v2-cell>\n      `);\n      el = await page.find('market-table-v2-cell');\n      checkbox = await el.find('market-checkbox');\n      selectionChangeSpy = await el.spyOnEvent('marketInternalTableV2CellSelectionChange');\n    });\n\n    it('renders a checked checkbox', async () => {\n      expect(checkbox).not.toBeNull();\n      expect(await checkbox.getProperty('checked')).toBe(true);\n      expect(await checkbox.getProperty('indeterminate')).toBe(false);\n    });\n\n    describe('when the checkbox is clicked', () => {\n      beforeEach(async () => {\n        await checkbox.click();\n        await page.waitForChanges();\n      });\n\n      it('sets the cell selection to false', async () => {\n        expect(await el.getProperty('selected')).toBe('false');\n      });\n\n      it('renders an unchecked checkbox', async () => {\n        expect(await checkbox.getProperty('checked')).toBe(false);\n        expect(await checkbox.getProperty('indeterminate')).toBe(false);\n      });\n\n      it('fires the internal change event', () => {\n        expect(selectionChangeSpy).toHaveReceivedEventTimes(1);\n        expect(selectionChangeSpy).toHaveReceivedEventDetail({ current: 'false', previous: 'true' });\n      });\n    });\n  });\n\n  describe('when rendered with selected = indeterminate', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table-v2-cell selected=\"indeterminate\">\n          <market-checkbox slot=\"control\"></market-checkbox>\n          Cell\n        </market-table-v2-cell>\n      `);\n      el = await page.find('market-table-v2-cell');\n      checkbox = await el.find('market-checkbox');\n      selectionChangeSpy = await el.spyOnEvent('marketInternalTableV2CellSelectionChange');\n    });\n\n    it('renders an indeterminate checkbox', async () => {\n      expect(checkbox).not.toBeNull();\n      expect(await checkbox.getProperty('checked')).toBe(false);\n      expect(await checkbox.getProperty('indeterminate')).toBe(true);\n    });\n\n    describe('when the checkbox is clicked', () => {\n      beforeEach(async () => {\n        await checkbox.click();\n        await page.waitForChanges();\n      });\n\n      it('sets the cell selection to true', async () => {\n        expect(await el.getProperty('selected')).toBe('true');\n      });\n\n      it('renders a checked checkbox', async () => {\n        expect(await checkbox.getProperty('checked')).toBe(true);\n        expect(await checkbox.getProperty('indeterminate')).toBe(false);\n      });\n\n      it('fires the internal change event', () => {\n        expect(selectionChangeSpy).toHaveReceivedEventTimes(1);\n        expect(selectionChangeSpy).toHaveReceivedEventDetail({ current: 'true', previous: 'indeterminate' });\n      });\n    });\n  });\n\n  describe('when a nested control checkbox is clicked', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table-v2-cell>\n          <market-row><market-checkbox slot=\"control\"></market-checkbox></market-row>\n        </market-table-v2-cell>\n      `);\n      el = await page.find('market-table-v2-cell');\n      checkbox = await el.find('market-checkbox');\n      selectionChangeSpy = await el.spyOnEvent('marketInternalTableV2CellSelectionChange');\n      await checkbox.click();\n      await page.waitForChanges();\n    });\n\n    it('does NOT set the cell selection to true', async () => {\n      expect(await el.getProperty('selected')).toBe('false');\n    });\n\n    it('does NOT fire the internal change event', () => {\n      expect(selectionChangeSpy).not.toHaveReceivedEvent();\n    });\n  });\n});\n"]}