{"version":3,"file":"market-table-v2-row.js","sourceRoot":"","sources":["../../../../../src/components/tables-v2/market-table-v2-row/market-table-v2-row.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop, Element, Listen, Watch, EventEmitter, Event, Method } from '@stencil/core';\nimport { getNamespacedTagFor } from '../../../utils/namespace';\nimport { TMarketTableV2Selection, MarketTableV2SelectionChangeEventDetail } from '../market-table-v2/types';\nimport { Draggable } from '../../../utils/draggable';\nimport type { TMarketDragCoords } from '../../../utils/gesture/types';\n\n/**\n * @slot - Default slot for table cells.\n * @part drag-handle - the drag handle when `dragEnabled` is true.\n */\n\n@Component({\n  tag: 'market-table-v2-row',\n  styleUrl: 'market-table-v2-row.css',\n  shadow: true,\n})\nexport class MarketTableV2Row {\n  private firstCell: HTMLMarketTableV2CellElement;\n  private drag: Draggable;\n\n  @Element() el: HTMLMarketTableV2RowElement;\n\n  /**\n   * Whether the row is currently active.\n   */\n  @Prop({ reflect: true }) readonly active: boolean = false;\n\n  /**\n   * Sets the horizontal alignment.\n   * When not set, alignment is inherited from an ancestor table.\n   * Likewise, row alignment will be inherited by descendant cells.\n   */\n  @Prop({ reflect: true }) readonly align: 'left' | 'center' | 'right';\n\n  /**\n   * Displays a leading clickable caret in the first cell;\n   * intended to be used in conjunction with\n   * `<market-table-v2-group>` to support nested rows.\n   */\n  @Prop({ reflect: true }) readonly caret: 'up' | 'down';\n\n  /**\n   * Whether the row is currently disabled.\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Whether the row is drag & drop enabled.\n   */\n  @Prop({ reflect: true }) readonly dragEnabled: boolean = false;\n\n  /**\n   * Whether the drag handle appears always or only on hover\n   */\n  @Prop({ reflect: true }) readonly dragHandleVisibility: 'always' | 'hover';\n\n  /**\n   * Whether the drag handle appears to the left or right.\n   */\n  @Prop({ reflect: true }) readonly dragHandlePosition: 'leading' | 'trailing';\n\n  /**\n   * Styles a row with footer styles.\n   */\n  @Prop({ reflect: true }) readonly footer: boolean = false;\n\n  /**\n   * Styles a row with header styles.\n   */\n  @Prop({ reflect: true }) readonly header: boolean = false;\n\n  /**\n   * Indentation level of the first cell in the row.\n   */\n  @Prop({ reflect: true }) readonly indent: number;\n\n  /**\n   * Whether the row is interactive, which results in hover, focus, & pressed styles.\n   */\n  @Prop({ reflect: true }) readonly interactive: boolean = false;\n\n  /**\n   * Whether the row is selected.\n   * Relevant if the row's first cell has a slotted control.\n   */\n  @Prop({ mutable: true }) selected: TMarketTableV2Selection = 'false';\n\n  /**\n   * Makes a row \"stick\" to the top or bottom of its parent table.\n   * Requires an explict height on the table to enable vertical scrolling.\n   */\n  @Prop({ reflect: true }) readonly sticky: 'top' | 'bottom';\n\n  /**\n   * Sets the vertical alignment.\n   * When not set, alignment is inherited from an ancestor table.\n   * Likewise, row alignment will be inherited by descendant cells.\n   */\n  @Prop({ reflect: true }) readonly valign: 'bottom' | 'middle' | 'top';\n\n  /**\n   * @internal\n   * Fired when the row selection state changes. Used internally in table components.\n   */\n  @Event({ bubbles: true, composed: true })\n  marketInternalTableV2RowSelectionChange: EventEmitter<MarketTableV2SelectionChangeEventDetail>;\n\n  /**\n   * Fired when the row selection state changes. Used to externally signal selection changes.\n   */\n  @Event({ bubbles: true, composed: true })\n  marketTableV2RowSelectionChange: EventEmitter<MarketTableV2SelectionChangeEventDetail>;\n\n  @Listen('keydown')\n  onKeydown(e: KeyboardEvent) {\n    const { target, key } = e;\n    const { el, disabled, interactive } = this;\n    if (disabled) return;\n    if (!interactive) return;\n    if (target !== el) return;\n    if (key === 'Enter' || key === ' ') {\n      e.preventDefault();\n      el.click();\n    }\n  }\n\n  @Listen('marketInternalTableV2CellSelectionChange')\n  async onMarketInternalTableV2CellSelectionChange(e: CustomEvent<MarketTableV2SelectionChangeEventDetail>) {\n    const { detail, target } = e;\n    const { current } = detail;\n    const { firstCell } = this;\n    if (target !== firstCell) return;\n    e.stopPropagation();\n    await this.setSelected(current);\n  }\n\n  async onDragStart(e: CustomEvent<TMarketDragCoords>) {\n    const { el, dragHandlePosition } = this;\n    if (el.slot === 'parent') return;\n    e.stopPropagation();\n    const coords: TMarketDragCoords = e.detail;\n    const anchor = dragHandlePosition === 'leading' ? 'left' : 'right';\n    const drag = new Draggable(el, { anchor });\n    this.drag = drag;\n    await drag.start(coords);\n  }\n\n  onDragMove(e: CustomEvent<TMarketDragCoords>) {\n    if (this.el.slot === 'parent') return;\n    e.stopPropagation();\n    const coords: TMarketDragCoords = e.detail;\n    this.drag.move(coords);\n  }\n\n  async onDragEnd(e: CustomEvent<TMarketDragCoords>) {\n    if (this.el.slot === 'parent') return;\n    e.stopPropagation();\n    const coords: TMarketDragCoords = e.detail;\n    await this.drag.end(coords);\n    this.drag.destroy();\n  }\n\n  @Watch('caret')\n  watchCaret() {\n    const { firstCell, caret } = this;\n    if (firstCell) firstCell.caret = caret;\n  }\n\n  @Watch('indent')\n  watchIndent() {\n    const { firstCell, indent } = this;\n    if (firstCell) firstCell.indent = indent;\n  }\n\n  /**\n   * Sets selection on the row and propagates the value\n   * downwards to the slotted control in its first cell\n   * and upwards to any parent groups or tables.\n   */\n  @Method()\n  async setSelected(selected: TMarketTableV2Selection, { silent = false } = {}) {\n    const {\n      firstCell,\n      selected: prevSelected,\n      marketTableV2RowSelectionChange,\n      marketInternalTableV2RowSelectionChange,\n    } = this;\n\n    // return if no values have changed\n    if (prevSelected === selected) return Promise.resolve();\n\n    // always fire the external selection event\n    const { defaultPrevented } = marketTableV2RowSelectionChange.emit({\n      current: selected,\n      previous: prevSelected,\n    });\n\n    // if default was prevented, reset the cell & control\n    if (defaultPrevented) {\n      await firstCell?.setSelected(prevSelected, { silent: true });\n      return Promise.resolve();\n    }\n\n    // fire the internal selection event\n    if (!silent) {\n      marketInternalTableV2RowSelectionChange.emit({\n        current: selected,\n        previous: prevSelected,\n      });\n    }\n\n    // save the state\n    this.selected = selected;\n    await firstCell?.setSelected(selected, { silent });\n\n    return Promise.resolve();\n  }\n\n  private getTabIndex() {\n    const { disabled, interactive } = this;\n    return interactive && !disabled ? '0' : null;\n  }\n\n  private async initFirstCell() {\n    const { el, selected } = this;\n\n    const MarketTableV2CellTagName = getNamespacedTagFor('market-table-v2-cell');\n    const firstCell = el.querySelector(`${MarketTableV2CellTagName}`);\n\n    if (firstCell) {\n      this.firstCell = firstCell;\n      if (selected) await firstCell?.setSelected(selected);\n    }\n\n    this.watchCaret();\n    this.watchIndent();\n  }\n\n  async connectedCallBack() {\n    await this.initFirstCell();\n  }\n\n  private renderDragHandleCell() {\n    const MarketDragHandleTagName = getNamespacedTagFor('market-drag-handle');\n    const MarketTableV2CellTagName = getNamespacedTagFor('market-table-v2-cell');\n\n    return (\n      <MarketTableV2CellTagName class=\"drag-handle-cell\">\n        <MarketDragHandleTagName part=\"drag-handle\"></MarketDragHandleTagName>\n      </MarketTableV2CellTagName>\n    );\n  }\n\n  render() {\n    const { dragEnabled, dragHandlePosition } = this;\n\n    return (\n      <Host\n        role=\"row\"\n        class=\"market-table-v2-row\"\n        tabindex={this.getTabIndex()}\n        onMarketDragHandleDragStart={(e: CustomEvent<TMarketDragCoords>) => this.onDragStart(e)}\n        onMarketDragHandleDragMove={(e: CustomEvent<TMarketDragCoords>) => this.onDragMove(e)}\n        onMarketDragHandleDragEnd={(e: CustomEvent<TMarketDragCoords>) => this.onDragEnd(e)}\n      >\n        {dragEnabled && dragHandlePosition === 'leading' && this.renderDragHandleCell()}\n        <slot onSlotchange={() => this.initFirstCell()}></slot>\n        {dragEnabled && dragHandlePosition !== 'leading' && this.renderDragHandleCell()}\n      </Host>\n    );\n  }\n}\n"]}