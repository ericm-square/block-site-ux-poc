{"version":3,"file":"market-table-v2-row.methods.e2e.js","sourceRoot":"","sources":["../../../../../../src/components/tables-v2/market-table-v2-row/test/market-table-v2-row.methods.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-table-v2-row: methods', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let firstCell: E2EElement;\n  let internalSelectionChangeSpy: EventSpy;\n  let externalSelectionChangeSpy: EventSpy;\n\n  describe('setSelected()', () => {\n    describe('when rendered not selected', () => {\n      beforeEach(async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-table-v2-row>\n            <market-table-v2-cell>Cell</market-table-v2-cell>\n            <market-table-v2-cell>Cell</market-table-v2-cell>\n            <market-table-v2-cell>Cell</market-table-v2-cell>\n          </market-table-v2-row>\n        `);\n        el = await page.find('market-table-v2-row');\n        firstCell = await el.find('market-table-v2-cell');\n        internalSelectionChangeSpy = await el.spyOnEvent('marketInternalTableV2RowSelectionChange');\n        externalSelectionChangeSpy = await el.spyOnEvent('marketTableV2RowSelectionChange');\n      });\n\n      describe('when setSelected(false) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'false');\n          await page.waitForChanges();\n        });\n\n        it('remains unselected', async () => {\n          expect(await el.getProperty('selected')).toBe('false');\n        });\n\n        it('leaves the first cell unselected', async () => {\n          expect(await firstCell.getProperty('selected')).toBe('false');\n        });\n\n        it('does NOT fire the internal change event', () => {\n          expect(internalSelectionChangeSpy).not.toHaveReceivedEvent();\n        });\n\n        it('does NOT fire the external change event', () => {\n          expect(externalSelectionChangeSpy).not.toHaveReceivedEvent();\n        });\n      });\n\n      describe('when setSelected(true) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'true');\n          await page.waitForChanges();\n        });\n\n        it('becomes selected', async () => {\n          expect(await el.getProperty('selected')).toBe('true');\n        });\n\n        it('selects the first cell', async () => {\n          expect(await firstCell.getProperty('selected')).toBe('true');\n        });\n\n        it('fires the internal change event', () => {\n          expect(internalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(internalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'true', previous: 'false' });\n        });\n\n        it('fires the external change event', () => {\n          expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'true', previous: 'false' });\n        });\n      });\n\n      describe('when setSelected(indeterminate) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'indeterminate');\n          await page.waitForChanges();\n        });\n\n        it('becomes indeterminate', async () => {\n          expect(await el.getProperty('selected')).toBe('indeterminate');\n        });\n\n        it('sets the first cell to indeterminate', async () => {\n          expect(await firstCell.getProperty('selected')).toBe('indeterminate');\n        });\n\n        it('fires the internal change event', () => {\n          expect(internalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(internalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'indeterminate', previous: 'false' });\n        });\n\n        it('fires the external change event', () => {\n          expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'indeterminate', previous: 'false' });\n        });\n      });\n\n      describe('when setSelected(true) is called silently', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'true', { silent: true });\n          await page.waitForChanges();\n        });\n\n        it('becomes selected', async () => {\n          expect(await el.getProperty('selected')).toBe('true');\n        });\n\n        it('selects the first cell', async () => {\n          expect(await firstCell.getProperty('selected')).toBe('true');\n        });\n\n        it('does NOT fire the internal change event', () => {\n          expect(internalSelectionChangeSpy).not.toHaveReceivedEvent();\n        });\n\n        it('STILL fires the external change event', () => {\n          expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'true', previous: 'false' });\n        });\n      });\n    });\n\n    describe('when rendered with selected = true', () => {\n      beforeEach(async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-table-v2-row selected=\"true\">\n            <market-table-v2-cell>Cell</market-table-v2-cell>\n            <market-table-v2-cell>Cell</market-table-v2-cell>\n            <market-table-v2-cell>Cell</market-table-v2-cell>\n          </market-table-v2-row>\n        `);\n        el = await page.find('market-table-v2-row');\n        firstCell = await el.find('market-table-v2-cell');\n        internalSelectionChangeSpy = await el.spyOnEvent('marketInternalTableV2RowSelectionChange');\n        externalSelectionChangeSpy = await el.spyOnEvent('marketTableV2RowSelectionChange');\n      });\n\n      describe('when setSelected(false) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'false');\n          await page.waitForChanges();\n        });\n\n        it('becomes unselected', async () => {\n          expect(await el.getProperty('selected')).toBe('false');\n        });\n\n        it('deselects the first cell', async () => {\n          expect(await firstCell.getProperty('selected')).toBe('false');\n        });\n\n        it('fires the internal change event', () => {\n          expect(internalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(internalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'false', previous: 'true' });\n        });\n\n        it('fires the external change event', () => {\n          expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'false', previous: 'true' });\n        });\n      });\n\n      describe('when setSelected(true) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'true');\n          await page.waitForChanges();\n        });\n\n        it('remains selected', async () => {\n          expect(await el.getProperty('selected')).toBe('true');\n        });\n\n        it('leaves the first cell selected', async () => {\n          expect(await firstCell.getProperty('selected')).toBe('true');\n        });\n\n        it('does NOT fire the internal change event', () => {\n          expect(internalSelectionChangeSpy).not.toHaveReceivedEvent();\n        });\n\n        it('does NOT fire the external change event', () => {\n          expect(externalSelectionChangeSpy).not.toHaveReceivedEvent();\n        });\n      });\n\n      describe('when setSelected(indeterminate) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'indeterminate');\n          await page.waitForChanges();\n        });\n\n        it('becomes indeterminate', async () => {\n          expect(await el.getProperty('selected')).toBe('indeterminate');\n        });\n\n        it('sets the first cell to indeterminate control', async () => {\n          expect(await firstCell.getProperty('selected')).toBe('indeterminate');\n        });\n\n        it('fires the internal change event', () => {\n          expect(internalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(internalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'indeterminate', previous: 'true' });\n        });\n\n        it('fires the external change event', () => {\n          expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'indeterminate', previous: 'true' });\n        });\n      });\n\n      describe('when setSelected(false) is called silently', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'false', { silent: true });\n          await page.waitForChanges();\n        });\n\n        it('becomes unselected', async () => {\n          expect(await el.getProperty('selected')).toBe('false');\n        });\n\n        it('deselects the first cell', async () => {\n          expect(await firstCell.getProperty('selected')).toBe('false');\n        });\n\n        it('does NOT fire the internal change event', () => {\n          expect(internalSelectionChangeSpy).not.toHaveReceivedEvent();\n        });\n\n        it('STILL fires the external change event', () => {\n          expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'false', previous: 'true' });\n        });\n      });\n    });\n\n    describe('when rendered with selected = indeterminate', () => {\n      beforeEach(async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-table-v2-row selected=\"indeterminate\">\n            <market-table-v2-cell>Cell</market-table-v2-cell>\n            <market-table-v2-cell>Cell</market-table-v2-cell>\n            <market-table-v2-cell>Cell</market-table-v2-cell>\n          </market-table-v2-row>\n        `);\n        el = await page.find('market-table-v2-row');\n        firstCell = await el.find('market-table-v2-cell');\n        internalSelectionChangeSpy = await el.spyOnEvent('marketInternalTableV2RowSelectionChange');\n        externalSelectionChangeSpy = await el.spyOnEvent('marketTableV2RowSelectionChange');\n      });\n\n      describe('when setSelected(false) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'false');\n          await page.waitForChanges();\n        });\n\n        it('becomes unselected', async () => {\n          expect(await el.getProperty('selected')).toBe('false');\n        });\n\n        it('deselects the first cell', async () => {\n          expect(await firstCell.getProperty('selected')).toBe('false');\n        });\n\n        it('fires the internal change event', () => {\n          expect(internalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(internalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'false', previous: 'indeterminate' });\n        });\n\n        it('fires the external change event', () => {\n          expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'false', previous: 'indeterminate' });\n        });\n      });\n\n      describe('when setSelected(true) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'true');\n          await page.waitForChanges();\n        });\n\n        it('becomes selected', async () => {\n          expect(await el.getProperty('selected')).toBe('true');\n        });\n\n        it('selects the first cell', async () => {\n          expect(await firstCell.getProperty('selected')).toBe('true');\n        });\n\n        it('fires the internal change event', () => {\n          expect(internalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(internalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'true', previous: 'indeterminate' });\n        });\n\n        it('fires the external change event', () => {\n          expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'true', previous: 'indeterminate' });\n        });\n      });\n\n      describe('when setSelected(indeterminate) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'indeterminate');\n          await page.waitForChanges();\n        });\n\n        it('remains indeterminate', async () => {\n          expect(await el.getProperty('selected')).toBe('indeterminate');\n        });\n\n        it('leaves the first cell indeterminate', async () => {\n          expect(await firstCell.getProperty('selected')).toBe('indeterminate');\n        });\n\n        it('does NOT fire the internal change event', () => {\n          expect(internalSelectionChangeSpy).not.toHaveReceivedEvent();\n        });\n\n        it('does NOT fire the external change event', () => {\n          expect(externalSelectionChangeSpy).not.toHaveReceivedEvent();\n        });\n      });\n\n      describe('when setSelected(true) is called silently', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'true', { silent: true });\n          await page.waitForChanges();\n        });\n\n        it('becomes selected', async () => {\n          expect(await el.getProperty('selected')).toBe('true');\n        });\n\n        it('selects the first cell', async () => {\n          expect(await firstCell.getProperty('selected')).toBe('true');\n        });\n\n        it('does NOT fire the internal change event', () => {\n          expect(internalSelectionChangeSpy).not.toHaveReceivedEvent();\n        });\n\n        it('STILL fires the external change event', () => {\n          expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n          expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'true', previous: 'indeterminate' });\n        });\n      });\n    });\n  });\n});\n"]}