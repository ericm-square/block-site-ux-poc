{"version":3,"file":"market-table-v2-row.e2e.js","sourceRoot":"","sources":["../../../../../../src/components/tables-v2/market-table-v2-row/test/market-table-v2-row.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-table-v2-row', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let firstCell: E2EElement;\n  let thirdCell: E2EElement;\n  let caret: E2EElement;\n  let internalSelectionChangeSpy: EventSpy;\n  let externalSelectionChangeSpy: EventSpy;\n\n  describe('when rendered with defaults', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table-v2-row>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n        </market-table-v2-row>\n      `);\n      el = await page.find('market-table-v2-row');\n      firstCell = await el.find('market-table-v2-cell');\n      caret = await firstCell.find('pierce/button.caret-button');\n    });\n\n    it('renders correctly', () => {\n      expect(el).not.toBeNull();\n      expect(el.getAttribute('role')).toBe('row');\n      expect(el).not.toHaveAttribute('caret');\n      expect(el).not.toHaveAttribute('indent');\n    });\n\n    it('does NOT set caret on the first cell', () => {\n      expect(firstCell).not.toHaveAttribute('caret');\n    });\n\n    it('does NOT render the caret button', () => {\n      expect(caret).toBeNull();\n    });\n\n    it('does NOT indent the first cell', () => {\n      expect(firstCell).not.toHaveAttribute('indent');\n    });\n  });\n\n  describe('when rendered with a caret', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table-v2-row caret=\"up\">\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n        </market-table-v2-row>\n      `);\n\n      el = await page.find('market-table-v2-row');\n      firstCell = await el.find('market-table-v2-cell');\n      caret = await firstCell.find('pierce/button.caret-button');\n    });\n\n    it('sets caret on the first cell', () => {\n      expect(firstCell.getAttribute('caret')).toBe('up');\n    });\n\n    it('renders the caret button', () => {\n      expect(caret).not.toBeNull();\n    });\n  });\n\n  describe('when rendered with indentation', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table-v2-row indent=\"3\">\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n        </market-table-v2-row>\n      `);\n\n      el = await page.find('market-table-v2-row');\n      firstCell = await el.find('market-table-v2-cell');\n    });\n\n    it('indents the first cell', () => {\n      expect(firstCell.getAttribute('indent')).toBe('3');\n    });\n  });\n\n  describe('when rendered not selected', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table-v2-row>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n        </market-table-v2-row>\n      `);\n      el = await page.find('market-table-v2-row');\n      firstCell = await el.find('market-table-v2-cell');\n      thirdCell = (await el.findAll('market-table-v2-cell'))[2];\n      internalSelectionChangeSpy = await el.spyOnEvent('marketInternalTableV2RowSelectionChange');\n      externalSelectionChangeSpy = await el.spyOnEvent('marketTableV2RowSelectionChange');\n    });\n\n    it('leaves the first cell unselected', async () => {\n      expect(await firstCell.getProperty('selected')).toBe('false');\n    });\n\n    describe('when the first cell is selected', () => {\n      beforeEach(async () => {\n        await firstCell.callMethod('setSelected', 'true');\n        await page.waitForChanges();\n      });\n\n      it('selects the row', async () => {\n        expect(await el.getProperty('selected')).toBe('true');\n      });\n\n      it('fires the internal change event', () => {\n        expect(internalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n        expect(internalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'true', previous: 'false' });\n      });\n\n      it('fires the external change event', () => {\n        expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n        expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'true', previous: 'false' });\n      });\n    });\n\n    describe('when a cell (but NOT the first cell) is selected', () => {\n      beforeEach(async () => {\n        await thirdCell.callMethod('setSelected', 'true');\n        await page.waitForChanges();\n      });\n\n      it('does NOT select the row', async () => {\n        expect(await el.getProperty('selected')).toBe('false');\n      });\n\n      it('does NOT fire the internal change event', () => {\n        expect(internalSelectionChangeSpy).not.toHaveReceivedEvent();\n      });\n\n      it('does NOT fire the external change event', () => {\n        expect(externalSelectionChangeSpy).not.toHaveReceivedEvent();\n      });\n    });\n  });\n\n  describe('when rendered selected', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table-v2-row selected=\"true\">\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n        </market-table-v2-row>\n      `);\n      el = await page.find('market-table-v2-row');\n      firstCell = await el.find('market-table-v2-cell');\n      internalSelectionChangeSpy = await el.spyOnEvent('marketInternalTableV2RowSelectionChange');\n      externalSelectionChangeSpy = await el.spyOnEvent('marketTableV2RowSelectionChange');\n    });\n\n    it('sets the first cell to selected', async () => {\n      expect(await firstCell.getProperty('selected')).toBe('true');\n    });\n\n    describe('when the first cell is deselected', () => {\n      beforeEach(async () => {\n        await firstCell.callMethod('setSelected', 'false');\n        await page.waitForChanges();\n      });\n\n      it('deselects the row', async () => {\n        expect(await el.getProperty('selected')).toBe('false');\n      });\n\n      it('fires the internal change event', () => {\n        expect(internalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n        expect(internalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'false', previous: 'true' });\n      });\n\n      it('fires the external change event', () => {\n        expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n        expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'false', previous: 'true' });\n      });\n    });\n  });\n\n  describe('when rendered indeterminate', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table-v2-row selected=\"indeterminate\">\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n          <market-table-v2-cell>Cell</market-table-v2-cell>\n        </market-table-v2-row>\n      `);\n      el = await page.find('market-table-v2-row');\n      firstCell = await el.find('market-table-v2-cell');\n      internalSelectionChangeSpy = await el.spyOnEvent('marketInternalTableV2RowSelectionChange');\n      externalSelectionChangeSpy = await el.spyOnEvent('marketTableV2RowSelectionChange');\n    });\n\n    it('sets the first cell to indeterminate', async () => {\n      expect(await firstCell.getProperty('selected')).toBe('indeterminate');\n    });\n\n    describe('when the first cell is selected', () => {\n      beforeEach(async () => {\n        await firstCell.callMethod('setSelected', 'true');\n        await page.waitForChanges();\n      });\n\n      it('selects the row', async () => {\n        expect(await el.getProperty('selected')).toBe('true');\n      });\n\n      it('fires the internal change event', () => {\n        expect(internalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n        expect(internalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'true', previous: 'indeterminate' });\n      });\n\n      it('fires the external change event', () => {\n        expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n        expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'true', previous: 'indeterminate' });\n      });\n    });\n\n    describe('when the first cell is deselected', () => {\n      beforeEach(async () => {\n        await firstCell.callMethod('setSelected', 'false');\n        await page.waitForChanges();\n      });\n\n      it('deselects the row', async () => {\n        expect(await el.getProperty('selected')).toBe('false');\n      });\n\n      it('fires the internal change event', () => {\n        expect(internalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n        expect(internalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'false', previous: 'indeterminate' });\n      });\n\n      it('fires the external change event', () => {\n        expect(externalSelectionChangeSpy).toHaveReceivedEventTimes(1);\n        expect(externalSelectionChangeSpy).toHaveReceivedEventDetail({ current: 'false', previous: 'indeterminate' });\n      });\n    });\n  });\n});\n"]}