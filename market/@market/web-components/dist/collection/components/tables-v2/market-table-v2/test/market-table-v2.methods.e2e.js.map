{"version":3,"file":"market-table-v2.methods.e2e.js","sourceRoot":"","sources":["../../../../../../src/components/tables-v2/market-table-v2/test/market-table-v2.methods.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement } from '@stencil/core/testing';\n\ndescribe('market-table-v2-group: methods', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let row: E2EElement;\n  let header: E2EElement;\n  let footer: E2EElement;\n  let group: E2EElement;\n\n  describe('setSelected()', () => {\n    describe('when rendered not selected', () => {\n      beforeEach(async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-table-v2>\n            <market-table-v2-row header></market-table-v2-row>  \n            <market-table-v2-row class=\"normal-row\"></market-table-v2-row>\n            <market-table-v2-group>\n              <market-table-v2-row slot=\"parent\"></market-table-v2-row>\n              <market-table-v2-row></market-table-v2-row>\n            </market-table-v2-group>\n            <market-table-v2-row footer></market-table-v2-row>  \n          </market-table-v2>\n        `);\n\n        el = await page.find('market-table-v2');\n        row = await el.find('market-table-v2-row.normal-row');\n        header = await el.find('market-table-v2-row[header]');\n        footer = await el.find('market-table-v2-row[footer]');\n        group = await el.find('market-table-v2-group');\n      });\n\n      describe('when setSelected(true) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'true');\n          await page.waitForChanges();\n        });\n\n        it('selects the entire table', async () => {\n          expect(await el.getProperty('selected')).toBe('true');\n          expect(await header.getProperty('selected')).toBe('true');\n          expect(await footer.getProperty('selected')).toBe('true');\n          expect(await row.getProperty('selected')).toBe('true');\n          expect(await group.getProperty('selected')).toBe('true');\n        });\n      });\n    });\n\n    describe('when rendered selected', () => {\n      beforeEach(async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-table-v2 selected=\"true\">\n            <market-table-v2-row header selected=\"true\"></market-table-v2-row>  \n            <market-table-v2-row class=\"normal-row\" selected=\"true\"></market-table-v2-row>\n            <market-table-v2-group selected=\"true\">\n              <market-table-v2-row slot=\"parent\" selected=\"true\"></market-table-v2-row>\n              <market-table-v2-row selected=\"true\"></market-table-v2-row>\n            </market-table-v2-group>\n            <market-table-v2-row footer selected=\"true\"></market-table-v2-row>  \n          </market-table-v2>\n        `);\n\n        el = await page.find('market-table-v2');\n        row = await el.find('market-table-v2-row.normal-row');\n        header = await el.find('market-table-v2-row[header]');\n        footer = await el.find('market-table-v2-row[footer]');\n        group = await el.find('market-table-v2-group');\n      });\n\n      describe('when setSelected(false) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'false');\n          await page.waitForChanges();\n        });\n\n        it('deselects the entire table', async () => {\n          expect(await el.getProperty('selected')).toBe('false');\n          expect(await header.getProperty('selected')).toBe('false');\n          expect(await footer.getProperty('selected')).toBe('false');\n          expect(await row.getProperty('selected')).toBe('false');\n          expect(await group.getProperty('selected')).toBe('false');\n        });\n      });\n    });\n\n    describe('when rendered indeterminate', () => {\n      beforeEach(async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-table-v2 selected=\"indeterminate\">\n            <market-table-v2-row header selected=\"indeterminate\"></market-table-v2-row>  \n            <market-table-v2-row class=\"normal-row\" selected=\"false\"></market-table-v2-row>\n            <market-table-v2-group selected=\"true\">\n              <market-table-v2-row slot=\"parent\"></market-table-v2-row>\n              <market-table-v2-row></market-table-v2-row>\n            </market-table-v2-group>\n            <market-table-v2-row footer selected=\"indeterminate\"></market-table-v2-row>  \n          </market-table-v2>\n        `);\n\n        el = await page.find('market-table-v2');\n        row = await el.find('market-table-v2-row.normal-row');\n        header = await el.find('market-table-v2-row[header]');\n        footer = await el.find('market-table-v2-row[footer]');\n        group = await el.find('market-table-v2-group');\n      });\n\n      describe('when setSelected(true) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'true');\n          await page.waitForChanges();\n        });\n\n        it('selects the entire table', async () => {\n          expect(await el.getProperty('selected')).toBe('true');\n          expect(await header.getProperty('selected')).toBe('true');\n          expect(await footer.getProperty('selected')).toBe('true');\n          expect(await row.getProperty('selected')).toBe('true');\n          expect(await group.getProperty('selected')).toBe('true');\n        });\n      });\n\n      describe('when setSelected(false) is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('setSelected', 'false');\n          await page.waitForChanges();\n        });\n\n        it('deselects the entire table', async () => {\n          expect(await el.getProperty('selected')).toBe('false');\n          expect(await header.getProperty('selected')).toBe('false');\n          expect(await footer.getProperty('selected')).toBe('false');\n          expect(await row.getProperty('selected')).toBe('false');\n          expect(await group.getProperty('selected')).toBe('false');\n        });\n      });\n    });\n  });\n});\n"]}