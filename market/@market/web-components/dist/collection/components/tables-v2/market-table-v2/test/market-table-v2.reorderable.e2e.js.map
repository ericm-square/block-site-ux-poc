{"version":3,"file":"market-table-v2.reorderable.e2e.js","sourceRoot":"","sources":["../../../../../../src/components/tables-v2/market-table-v2/test/market-table-v2.reorderable.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\nimport { drag } from '../../../../utils/e2e/drag';\n\ndescribe('market-table-v2: reorderable functionality', () => {\n  let page: E2EPage;\n\n  let table1: E2EElement;\n  let table1Rows: E2EElement[];\n  let table1ReorderedSpy: EventSpy;\n\n  let table2: E2EElement;\n  let table2Rows: E2EElement[];\n  let table2ReorderedSpy: EventSpy;\n\n  let draggedRowNode: HTMLMarketTableV2RowElement;\n\n  // magic numbers to assist with mouse manipulation\n  const ROW_H = 50;\n  const X_TABLE_1 = 20;\n  const X_TABLE_2 = 220;\n  const Y_ROW_2 = 75;\n  const Y_ROW_3 = 125;\n  const Y_ROW_4 = 175;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n\n    // absolutely position tables to simplify mouse manipulation\n    await page.setContent(`\n      <market-table-v2 id=\"table-1\" style=\"position: absolute; width: 200px; top: 0; left: 0;\">\n        <market-table-v2-row drag-handle-position=\"leading\">\n          <market-table-v2-cell>Row 1.1</market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row drag-handle-position=\"leading\">\n          <market-table-v2-cell>Row 1.2</market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row drag-handle-position=\"leading\">\n          <market-table-v2-cell>Row 1.3</market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row drag-handle-position=\"leading\">\n          <market-table-v2-cell>Row 1.4</market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row drag-handle-position=\"leading\">\n          <market-table-v2-cell>Row 1.5</market-table-v2-cell>\n        </market-table-v2-row>\n      </market-table-v2>\n      <market-table-v2 id=\"table-2\" style=\"position: absolute; width: 200px; top: 0; left: 200px;\">\n        <market-table-v2-row drag-handle-position=\"leading\">\n          <market-table-v2-cell>Row 2.1</market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row drag-handle-position=\"leading\">\n          <market-table-v2-cell>Row 2.2</market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row drag-handle-position=\"leading\">\n          <market-table-v2-cell>Row 2.3</market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row drag-handle-position=\"leading\">\n          <market-table-v2-cell>Row 2.4</market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row drag-handle-position=\"leading\">\n          <market-table-v2-cell>Row 2.5</market-table-v2-cell>\n        </market-table-v2-row>\n      </market-table-v2>\n    `);\n\n    table1 = await page.find('#table-1');\n    table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n    table1ReorderedSpy = await table1.spyOnEvent('marketTableV2RowsReordered');\n\n    table2 = await page.find('#table-2');\n    table2Rows = await page.findAll('#table-2 > market-table-v2-row');\n    table2ReorderedSpy = await table2.spyOnEvent('marketTableV2RowsReordered');\n  });\n\n  describe('when both tables are NOT reorderable', () => {\n    it('does NOT set the table rows to be drag enabled', () => {\n      table1Rows.forEach(async (row) => {\n        expect(await row.getProperty('dragEnabled')).toEqual(false);\n      });\n      table2Rows.forEach(async (row) => {\n        expect(await row.getProperty('dragEnabled')).toEqual(false);\n      });\n    });\n  });\n\n  describe('when both tables are internally reorderable', () => {\n    beforeEach(async () => {\n      table1.setProperty('reorderable', 'internal');\n      table2.setProperty('reorderable', 'internal');\n      await page.waitForChanges();\n      draggedRowNode = (await page.$eval(\n        '#table-1 market-table-v2-row:nth-child(3)',\n        (el) => el,\n      )) as HTMLMarketTableV2RowElement;\n    });\n\n    it('sets the table rows to be drag enabled', () => {\n      table1Rows.forEach(async (row) => {\n        expect(await row.getProperty('dragEnabled')).toEqual(true);\n      });\n      table2Rows.forEach(async (row) => {\n        expect(await row.getProperty('dragEnabled')).toEqual(true);\n      });\n    });\n\n    describe('when a row is dragged upwards', () => {\n      beforeEach(async () => {\n        // drag 3rd row between 1st and 2nd rows\n        const from = { x: X_TABLE_1, y: Y_ROW_3 };\n        const to = { x: X_TABLE_1, y: Y_ROW_2 - ROW_H / 2 };\n        await drag(page, from, to);\n        table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n      });\n\n      it('fires the reordered event', () => {\n        expect(table1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(table1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: 1,\n        });\n      });\n\n      it('moves the row to proper position', () => {\n        expect(table1Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 1.1',\n          'Row 1.3',\n          'Row 1.2',\n          'Row 1.4',\n          'Row 1.5',\n        ]);\n      });\n    });\n\n    describe('when a row is dragged downwards', () => {\n      beforeEach(async () => {\n        // drag 3rd row between 4th and 5th rows\n        const from = { x: X_TABLE_1, y: Y_ROW_3 };\n        const to = { x: X_TABLE_1, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n      });\n\n      it('fires the reordered event', () => {\n        expect(table1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(table1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: 3,\n        });\n      });\n\n      it('moves the row to the proper position', () => {\n        expect(table1Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 1.1',\n          'Row 1.2',\n          'Row 1.4',\n          'Row 1.3',\n          'Row 1.5',\n        ]);\n      });\n    });\n\n    describe('when preventDefault is called on the reordered event', () => {\n      beforeEach(async () => {\n        await page.$eval('#table-1', (el: HTMLMarketTableV2Element) => {\n          el.addEventListener('marketTableV2RowsReordered', (e: CustomEvent) => {\n            e.preventDefault();\n          });\n        });\n        // drag 3rd row between 1st and 2nd rows\n        const from = { x: X_TABLE_1, y: Y_ROW_3 };\n        const to = { x: X_TABLE_1, y: Y_ROW_2 - ROW_H / 2 };\n        await drag(page, from, to);\n        table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n      });\n\n      it('fires the reordered event', () => {\n        expect(table1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(table1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: 1,\n        });\n      });\n\n      it('does NOT move the row', () => {\n        expect(table1Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 1.1',\n          'Row 1.2',\n          'Row 1.3',\n          'Row 1.4',\n          'Row 1.5',\n        ]);\n      });\n    });\n\n    describe('when a row is dragged from one table to the other', () => {\n      beforeEach(async () => {\n        // drag 3rd row in table 1 between 4th and 5th rows in table 2\n        const from = { x: X_TABLE_1, y: Y_ROW_3 };\n        const to = { x: X_TABLE_2, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n        table2Rows = await page.findAll('#table-2 > market-table-v2-row');\n      });\n\n      it('does NOT fire the reordered event on either table', () => {\n        expect(table1ReorderedSpy).not.toHaveReceivedEvent();\n        expect(table2ReorderedSpy).not.toHaveReceivedEvent();\n      });\n\n      it('does NOT move the row', () => {\n        expect(table1Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 1.1',\n          'Row 1.2',\n          'Row 1.3',\n          'Row 1.4',\n          'Row 1.5',\n        ]);\n        expect(table2Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 2.1',\n          'Row 2.2',\n          'Row 2.3',\n          'Row 2.4',\n          'Row 2.5',\n        ]);\n      });\n    });\n\n    describe('when a new row is added to a table', () => {\n      beforeEach(async () => {\n        await page.$eval('#table-1', (el: HTMLMarketTableV2Element) => {\n          const newRow = document.createElement('market-table-v2-row');\n          newRow.id = 'new-row';\n          el.append(newRow);\n        });\n        await page.waitForChanges();\n      });\n\n      it('makes the new row drag enabled', async () => {\n        const newRow: E2EElement = await table1.find('#new-row');\n        expect(newRow).toHaveAttribute('drag-enabled');\n        expect(await newRow.getProperty('dragEnabled')).toEqual(true);\n      });\n    });\n  });\n\n  describe('when one table is internally reorderable and the other is externally reorderable', () => {\n    beforeEach(async () => {\n      table1.setProperty('reorderable', 'internal');\n      table2.setProperty('reorderable', 'external');\n      await page.waitForChanges();\n      draggedRowNode = (await page.$eval(\n        '#table-1 market-table-v2-row:nth-child(3)',\n        (el) => el,\n      )) as HTMLMarketTableV2RowElement;\n    });\n\n    describe('when a row is dragged from the internal table to the external table', () => {\n      beforeEach(async () => {\n        // drag 3rd row in table 1 between 4th and 5th rows in table 2\n        const from = { x: X_TABLE_1, y: Y_ROW_3 };\n        const to = { x: X_TABLE_2, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n        table2Rows = await page.findAll('#table-2 > market-table-v2-row');\n      });\n\n      it('does NOT fire the reordered event on either table', () => {\n        expect(table1ReorderedSpy).not.toHaveReceivedEvent();\n        expect(table2ReorderedSpy).not.toHaveReceivedEvent();\n      });\n\n      it('does NOT remove the row from the internal table', () => {\n        expect(table1Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 1.1',\n          'Row 1.2',\n          'Row 1.3',\n          'Row 1.4',\n          'Row 1.5',\n        ]);\n      });\n\n      it('does NOT add the row to the external table', () => {\n        expect(table2Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 2.1',\n          'Row 2.2',\n          'Row 2.3',\n          'Row 2.4',\n          'Row 2.5',\n        ]);\n      });\n    });\n\n    describe('when a row is dragged from the external table to the internal table', () => {\n      beforeEach(async () => {\n        // drag 3rd row in table 2 between 4th and 5th rows in table 1\n        const from = { x: X_TABLE_2, y: Y_ROW_3 };\n        const to = { x: X_TABLE_1, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n        table2Rows = await page.findAll('#table-2 > market-table-v2-row');\n      });\n\n      it('does NOT fire the reordered event on either table', () => {\n        expect(table1ReorderedSpy).not.toHaveReceivedEvent();\n        expect(table2ReorderedSpy).not.toHaveReceivedEvent();\n      });\n\n      it('does NOT add the row to the internal table', () => {\n        expect(table1Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 1.1',\n          'Row 1.2',\n          'Row 1.3',\n          'Row 1.4',\n          'Row 1.5',\n        ]);\n      });\n\n      it('does NOT remove the row from the external table', () => {\n        expect(table2Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 2.1',\n          'Row 2.2',\n          'Row 2.3',\n          'Row 2.4',\n          'Row 2.5',\n        ]);\n      });\n    });\n  });\n\n  describe('when both tables are externally reorderable', () => {\n    beforeEach(async () => {\n      table1.setProperty('reorderable', 'external');\n      table2.setProperty('reorderable', 'external');\n      await page.waitForChanges();\n      draggedRowNode = (await page.$eval(\n        '#table-1 market-table-v2-row:nth-child(3)',\n        (el) => el,\n      )) as HTMLMarketTableV2RowElement;\n    });\n\n    it('sets the table rows to be drag enabled', () => {\n      table1Rows.forEach(async (row) => {\n        expect(await row.getProperty('dragEnabled')).toEqual(true);\n      });\n      table2Rows.forEach(async (row) => {\n        expect(await row.getProperty('dragEnabled')).toEqual(true);\n      });\n    });\n\n    describe('when a row is dragged from the first table to the second', () => {\n      beforeEach(async () => {\n        // drag 3rd row in table 1 between 4th and 5th rows in table 2\n        const from = { x: X_TABLE_1, y: Y_ROW_3 };\n        const to = { x: X_TABLE_2, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n        table2Rows = await page.findAll('#table-2 > market-table-v2-row');\n      });\n\n      it('fires the reordered event on the table the row exited', () => {\n        expect(table1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(table1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: -1,\n        });\n      });\n\n      it('fires the reordered event on the table the row entered', () => {\n        expect(table2ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(table2ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: -1,\n          newIndex: 4,\n        });\n      });\n\n      it('removes the row from the first table', () => {\n        expect(table1Rows.map((row) => row.innerText.trim())).toEqual(['Row 1.1', 'Row 1.2', 'Row 1.4', 'Row 1.5']);\n      });\n\n      it('adds the row to the second table in the proper position', () => {\n        expect(table2Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 2.1',\n          'Row 2.2',\n          'Row 2.3',\n          'Row 2.4',\n          'Row 1.3',\n          'Row 2.5',\n        ]);\n      });\n    });\n\n    describe('when a row is dragged from the second table to the first', () => {\n      beforeEach(async () => {\n        // drag 3rd row in table 2 between 4th and 5th rows in table 1\n        const from = { x: X_TABLE_2, y: Y_ROW_3 };\n        const to = { x: X_TABLE_1, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n        table2Rows = await page.findAll('#table-2 > market-table-v2-row');\n      });\n\n      it('fires the reordered event on the table the row exited', () => {\n        expect(table2ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(table2ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: -1,\n        });\n      });\n\n      it('fires the reordered event on the table the row entered', () => {\n        expect(table1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(table1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: -1,\n          newIndex: 4,\n        });\n      });\n\n      it('removes the row from the second table', () => {\n        expect(table2Rows.map((row) => row.innerText.trim())).toEqual(['Row 2.1', 'Row 2.2', 'Row 2.4', 'Row 2.5']);\n      });\n\n      it('adds the row to the first table in the proper position', () => {\n        expect(table1Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 1.1',\n          'Row 1.2',\n          'Row 1.3',\n          'Row 1.4',\n          'Row 2.3',\n          'Row 1.5',\n        ]);\n      });\n    });\n\n    describe('when preventDefault is called on the first table reordered event', () => {\n      beforeEach(async () => {\n        await page.$eval('#table-1', (el: HTMLMarketTableV2Element) => {\n          el.addEventListener('marketTableV2RowsReordered', (e: CustomEvent) => {\n            e.preventDefault();\n          });\n        });\n        // drag 3rd row in table 1 between 4th and 5th rows in table 2\n        const from = { x: X_TABLE_1, y: Y_ROW_3 };\n        const to = { x: X_TABLE_2, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n        table2Rows = await page.findAll('#table-2 > market-table-v2-row');\n      });\n\n      it('fires the reordered event on the table the row exited', () => {\n        expect(table1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(table1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: -1,\n        });\n      });\n\n      it('does NOT fire the reordered event on the table the row entered', () => {\n        expect(table2ReorderedSpy).not.toHaveReceivedEvent();\n      });\n\n      it('does NOT remove the row from the first table', () => {\n        expect(table1Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 1.1',\n          'Row 1.2',\n          'Row 1.3',\n          'Row 1.4',\n          'Row 1.5',\n        ]);\n      });\n\n      it('does NOT add the row to the second table', () => {\n        expect(table2Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 2.1',\n          'Row 2.2',\n          'Row 2.3',\n          'Row 2.4',\n          'Row 2.5',\n        ]);\n      });\n    });\n\n    describe('when preventDefault is called on the second table reordered event', () => {\n      beforeEach(async () => {\n        await page.$eval('#table-2', (el: HTMLMarketTableV2Element) => {\n          el.addEventListener('marketTableV2RowsReordered', (e: CustomEvent) => {\n            e.preventDefault();\n          });\n        });\n        // drag 3rd row in table 1 between 4th and 5th rows in table 2\n        const from = { x: X_TABLE_1, y: Y_ROW_3 };\n        const to = { x: X_TABLE_2, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n        table2Rows = await page.findAll('#table-2 > market-table-v2-row');\n      });\n\n      it('fires the reordered event on the table the row exited', () => {\n        expect(table1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(table1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: -1,\n        });\n      });\n\n      it('fires the reordered event on the table the row entered', () => {\n        expect(table2ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(table2ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: -1,\n          newIndex: 4,\n        });\n      });\n\n      it('does NOT remove the row from the first table', () => {\n        expect(table1Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 1.1',\n          'Row 1.2',\n          'Row 1.3',\n          'Row 1.4',\n          'Row 1.5',\n        ]);\n      });\n\n      it('does NOT add the row to the second table', () => {\n        expect(table2Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 2.1',\n          'Row 2.2',\n          'Row 2.3',\n          'Row 2.4',\n          'Row 2.5',\n        ]);\n      });\n    });\n  });\n\n  describe('when a table is reorderable in framework mode', () => {\n    beforeEach(async () => {\n      table1.setProperty('reorderable', 'internal');\n      table1.setProperty('reorderMode', 'framework');\n      await page.waitForChanges();\n      draggedRowNode = (await page.$eval(\n        '#table-1 market-table-v2-row:nth-child(3)',\n        (el) => el,\n      )) as HTMLMarketTableV2RowElement;\n    });\n\n    describe.only('when a row is dragged upwards', () => {\n      beforeEach(async () => {\n        // drag 3rd row between 1st and 2nd rows\n        const from = { x: X_TABLE_1, y: Y_ROW_3 };\n        const to = { x: X_TABLE_1, y: Y_ROW_2 - ROW_H / 2 };\n        await drag(page, from, to);\n        table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n      });\n\n      it('fires the reordered event', () => {\n        expect(table1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(table1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: 1,\n        });\n      });\n\n      it('returns the row to its original position (for the framework to take over)', () => {\n        expect(table1Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 1.1',\n          'Row 1.2',\n          'Row 1.3',\n          'Row 1.4',\n          'Row 1.5',\n        ]);\n      });\n    });\n\n    describe.only('when a row is dragged downwards', () => {\n      beforeEach(async () => {\n        // drag 3rd row between 4th and 5th rows\n        const from = { x: X_TABLE_1, y: Y_ROW_3 };\n        const to = { x: X_TABLE_1, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        table1Rows = await page.findAll('#table-1 > market-table-v2-row');\n      });\n\n      it('fires the reordered event', () => {\n        expect(table1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(table1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: 3,\n        });\n      });\n\n      it('returns the row to its original position (for the framework to take over)', () => {\n        expect(table1Rows.map((row) => row.innerText.trim())).toEqual([\n          'Row 1.1',\n          'Row 1.2',\n          'Row 1.3',\n          'Row 1.4',\n          'Row 1.5',\n        ]);\n      });\n    });\n  });\n});\n"]}