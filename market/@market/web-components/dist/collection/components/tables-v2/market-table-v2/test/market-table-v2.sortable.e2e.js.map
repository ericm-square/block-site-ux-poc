{"version":3,"file":"market-table-v2.sortable.e2e.js","sourceRoot":"","sources":["../../../../../../src/components/tables-v2/market-table-v2/test/market-table-v2.sortable.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement } from '@stencil/core/testing';\n\ndescribe('market-table-v2: reorderable functionality', () => {\n  let page: E2EPage;\n\n  let table: E2EElement;\n  let headers: E2EElement[];\n  let numberHeader: E2EElement;\n  let stringHeader: E2EElement;\n  let dateHeader: E2EElement;\n  let timeHeader: E2EElement;\n  let functionHeader: E2EElement;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-table-v2>\n        <market-table-v2-row header>\n          <market-table-v2-cell sortable sort-strategy=\"number\">\n            Number\n          </market-table-v2-cell>\n          <market-table-v2-cell sortable sort-strategy=\"string\">\n            String\n          </market-table-v2-cell>\n          <market-table-v2-cell sortable sort-strategy=\"datetime\" sort-strategy-format=\"MM/dd/yyyy\">\n            Date\n          </market-table-v2-cell>\n          <market-table-v2-cell sortable sort-strategy=\"datetime\" sort-strategy-format=\"h:mm aa\">\n            Time\n          </market-table-v2-cell>\n          <market-table-v2-cell sortable>\n            Function\n          </market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row>\n          <market-table-v2-cell> 3.14 </market-table-v2-cell>\n          <market-table-v2-cell> Eerie </market-table-v2-cell>\n          <market-table-v2-cell> 12/31/1999 </market-table-v2-cell>\n          <market-table-v2-cell> 11:11 AM </market-table-v2-cell>\n          <market-table-v2-cell> $1,012.12 </market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row>\n          <market-table-v2-cell> 42 </market-table-v2-cell>\n          <market-table-v2-cell> Zebra </market-table-v2-cell>\n          <market-table-v2-cell> 02/03/2024 </market-table-v2-cell>\n          <market-table-v2-cell> 5:16 PM </market-table-v2-cell>\n          <market-table-v2-cell> $448.20 </market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row>\n          <market-table-v2-cell> -0.9 </market-table-v2-cell>\n          <market-table-v2-cell> ascot </market-table-v2-cell>\n          <market-table-v2-cell> 06/25/1982 </market-table-v2-cell>\n          <market-table-v2-cell> 3:02 PM </market-table-v2-cell>\n          <market-table-v2-cell> $2,344,330.20 </market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row>\n          <market-table-v2-cell> 999 </market-table-v2-cell>\n          <market-table-v2-cell> Wonderful </market-table-v2-cell>\n          <market-table-v2-cell> 07/04/1776 </market-table-v2-cell>\n          <market-table-v2-cell> 12:32 AM </market-table-v2-cell>\n          <market-table-v2-cell> $76.03 </market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row>\n          <market-table-v2-cell> 0 </market-table-v2-cell>\n          <market-table-v2-cell> Aardvark </market-table-v2-cell>\n          <market-table-v2-cell> 04/05/2063 </market-table-v2-cell>\n          <market-table-v2-cell> 2:05 PM </market-table-v2-cell>\n          <market-table-v2-cell> $9.99 </market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row>\n          <market-table-v2-cell> -1 </market-table-v2-cell>\n          <market-table-v2-cell> wonder </market-table-v2-cell>\n          <market-table-v2-cell> 03/10/1984 </market-table-v2-cell>\n          <market-table-v2-cell> 9:00 AM </market-table-v2-cell>\n          <market-table-v2-cell> $25.00 </market-table-v2-cell>\n        </market-table-v2-row>\n        <market-table-v2-row footer>\n          <market-table-v2-cell> Number </market-table-v2-cell>\n          <market-table-v2-cell> String </market-table-v2-cell>\n          <market-table-v2-cell> Date </market-table-v2-cell>\n          <market-table-v2-cell> Time </market-table-v2-cell>\n          <market-table-v2-cell> Function </market-table-v2-cell>\n        </market-table-v2-row>\n      </market-table-v2>\n    `);\n\n    table = await page.find('market-table-v2');\n    headers = await table.findAll('market-table-v2-row[header] market-table-v2-cell');\n    numberHeader = headers[0];\n    stringHeader = headers[1];\n    dateHeader = headers[2];\n    timeHeader = headers[3];\n    functionHeader = headers[4];\n  });\n\n  describe('clicking the number header', () => {\n    beforeEach(async () => {\n      await numberHeader.click();\n      await page.waitForChanges();\n    });\n\n    it('sets the header to ascending', async () => {\n      expect(numberHeader.getAttribute('aria-sort')).toEqual('ascending');\n      expect(await numberHeader.getProperty('sortOrder')).toEqual('ascending');\n    });\n\n    it('sorts the rows ascending by number', async () => {\n      const cells = await table.findAll('market-table-v2-cell:nth-of-type(1)');\n      expect(cells.map((cell) => cell.innerText.trim())).toEqual([\n        'Number',\n        '-1',\n        '-0.9',\n        '0',\n        '3.14',\n        '42',\n        '999',\n        'Number',\n      ]);\n    });\n\n    describe('clicking the number header again', () => {\n      beforeEach(async () => {\n        await numberHeader.click();\n        await page.waitForChanges();\n      });\n\n      it('sets the header to descending', async () => {\n        expect(numberHeader.getAttribute('aria-sort')).toEqual('descending');\n        expect(await numberHeader.getProperty('sortOrder')).toEqual('descending');\n      });\n\n      it('sorts the rows descending by number', async () => {\n        const cells = await table.findAll('market-table-v2-cell:nth-of-type(1)');\n        expect(cells.map((cell) => cell.innerText.trim())).toEqual([\n          'Number',\n          '999',\n          '42',\n          '3.14',\n          '0',\n          '-0.9',\n          '-1',\n          'Number',\n        ]);\n      });\n    });\n  });\n\n  describe('clicking the string header', () => {\n    beforeEach(async () => {\n      await stringHeader.click();\n      await page.waitForChanges();\n    });\n\n    it('sets the header to ascending', async () => {\n      expect(stringHeader.getAttribute('aria-sort')).toEqual('ascending');\n      expect(await stringHeader.getProperty('sortOrder')).toEqual('ascending');\n    });\n\n    it('sorts the rows ascending by string', async () => {\n      const cells = await table.findAll('market-table-v2-cell:nth-of-type(2)');\n      expect(cells.map((cell) => cell.innerText.trim())).toEqual([\n        'String',\n        'Aardvark',\n        'ascot',\n        'Eerie',\n        'wonder',\n        'Wonderful',\n        'Zebra',\n        'String',\n      ]);\n    });\n\n    describe('clicking the string header again', () => {\n      beforeEach(async () => {\n        await stringHeader.click();\n        await page.waitForChanges();\n      });\n\n      it('sets the header to descending', async () => {\n        expect(stringHeader.getAttribute('aria-sort')).toEqual('descending');\n        expect(await stringHeader.getProperty('sortOrder')).toEqual('descending');\n      });\n\n      it('sorts the rows descending by string', async () => {\n        const cells = await table.findAll('market-table-v2-cell:nth-of-type(2)');\n        expect(cells.map((cell) => cell.innerText.trim())).toEqual([\n          'String',\n          'Zebra',\n          'Wonderful',\n          'wonder',\n          'Eerie',\n          'ascot',\n          'Aardvark',\n          'String',\n        ]);\n      });\n    });\n  });\n\n  describe('clicking the date header', () => {\n    beforeEach(async () => {\n      await dateHeader.click();\n      await page.waitForChanges();\n    });\n\n    it('sets the header to ascending', async () => {\n      expect(dateHeader.getAttribute('aria-sort')).toEqual('ascending');\n      expect(await dateHeader.getProperty('sortOrder')).toEqual('ascending');\n    });\n\n    it('sorts the rows ascending by date', async () => {\n      const cells = await table.findAll('market-table-v2-cell:nth-of-type(3)');\n      expect(cells.map((cell) => cell.innerText.trim())).toEqual([\n        'Date',\n        '07/04/1776',\n        '06/25/1982',\n        '03/10/1984',\n        '12/31/1999',\n        '02/03/2024',\n        '04/05/2063',\n        'Date',\n      ]);\n    });\n\n    describe('clicking the date header again', () => {\n      beforeEach(async () => {\n        await dateHeader.click();\n        await page.waitForChanges();\n      });\n\n      it('sets the header to descending', async () => {\n        expect(dateHeader.getAttribute('aria-sort')).toEqual('descending');\n        expect(await dateHeader.getProperty('sortOrder')).toEqual('descending');\n      });\n\n      it('sorts the rows descending by date', async () => {\n        const cells = await table.findAll('market-table-v2-cell:nth-of-type(3)');\n        expect(cells.map((cell) => cell.innerText.trim())).toEqual([\n          'Date',\n          '04/05/2063',\n          '02/03/2024',\n          '12/31/1999',\n          '03/10/1984',\n          '06/25/1982',\n          '07/04/1776',\n          'Date',\n        ]);\n      });\n    });\n  });\n\n  describe('clicking the time header', () => {\n    beforeEach(async () => {\n      await timeHeader.click();\n      await page.waitForChanges();\n    });\n\n    it('sets the header to ascending', async () => {\n      expect(timeHeader.getAttribute('aria-sort')).toEqual('ascending');\n      expect(await timeHeader.getProperty('sortOrder')).toEqual('ascending');\n    });\n\n    it('sorts the rows ascending by time', async () => {\n      const cells = await table.findAll('market-table-v2-cell:nth-of-type(4)');\n      expect(cells.map((cell) => cell.innerText.trim())).toEqual([\n        'Time',\n        '12:32 AM',\n        '9:00 AM',\n        '11:11 AM',\n        '2:05 PM',\n        '3:02 PM',\n        '5:16 PM',\n        'Time',\n      ]);\n    });\n\n    describe('clicking the time header again', () => {\n      beforeEach(async () => {\n        await timeHeader.click();\n        await page.waitForChanges();\n      });\n\n      it('sets the header to descending', async () => {\n        expect(timeHeader.getAttribute('aria-sort')).toEqual('descending');\n        expect(await timeHeader.getProperty('sortOrder')).toEqual('descending');\n      });\n\n      it('sorts the rows descending by time', async () => {\n        const cells = await table.findAll('market-table-v2-cell:nth-of-type(4)');\n        expect(cells.map((cell) => cell.innerText.trim())).toEqual([\n          'Time',\n          '5:16 PM',\n          '3:02 PM',\n          '2:05 PM',\n          '11:11 AM',\n          '9:00 AM',\n          '12:32 AM',\n          'Time',\n        ]);\n      });\n    });\n  });\n\n  describe('clicking the function header with strategy set to a custom function', () => {\n    beforeEach(async () => {\n      await page.$eval('market-table-v2-row[header] market-table-v2-cell:nth-of-type(5)', (cell) => {\n        cell.sortStrategy = ({ rowA, rowB, order, column }) => {\n          const stringA = rowA.children[column].textContent.trim();\n          const stringB = rowB.children[column].textContent.trim();\n          const numA = Number.parseFloat(stringA.replace(/[^\\d.]+/g, ''));\n          const numB = Number.parseFloat(stringB.replace(/[^\\d.]+/g, ''));\n          if (order === 'ascending') {\n            return numA - numB;\n          } else {\n            return numB - numA;\n          }\n        };\n      });\n      await page.waitForChanges();\n      await functionHeader.click();\n      await page.waitForChanges();\n    });\n\n    it('sets the header to ascending', async () => {\n      expect(functionHeader.getAttribute('aria-sort')).toEqual('ascending');\n      expect(await functionHeader.getProperty('sortOrder')).toEqual('ascending');\n    });\n\n    it('sorts the rows ascending using the function', async () => {\n      const cells = await table.findAll('market-table-v2-cell:nth-of-type(5)');\n      expect(cells.map((cell) => cell.innerText.trim())).toEqual([\n        'Function',\n        '$9.99',\n        '$25.00',\n        '$76.03',\n        '$448.20',\n        '$1,012.12',\n        '$2,344,330.20',\n        'Function',\n      ]);\n    });\n\n    describe('clicking the function header again', () => {\n      beforeEach(async () => {\n        await functionHeader.click();\n        await page.waitForChanges();\n      });\n\n      it('sets the header to descending', async () => {\n        expect(functionHeader.getAttribute('aria-sort')).toEqual('descending');\n        expect(await functionHeader.getProperty('sortOrder')).toEqual('descending');\n      });\n\n      it('sorts the rows descending using the function', async () => {\n        const cells = await table.findAll('market-table-v2-cell:nth-of-type(5)');\n        expect(cells.map((cell) => cell.innerText.trim())).toEqual([\n          'Function',\n          '$2,344,330.20',\n          '$1,012.12',\n          '$448.20',\n          '$76.03',\n          '$25.00',\n          '$9.99',\n          'Function',\n        ]);\n      });\n    });\n  });\n});\n"]}