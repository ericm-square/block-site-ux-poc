{"version":3,"file":"market-segmented-control.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-segmented-control/test/market-segmented-control.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-segmented-control', () => {\n  let segmentChangeEventSpy: EventSpy;\n  let segmentedControlValueChangeEventSpy: EventSpy;\n\n  it('selects first segment as default', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<market-segmented-control>\n      <market-segment value=\"one\">One</market-segment>\n      <market-segment value=two\">Two</market-segment>\n      <market-segment value=\"three\">Three</market-segment>\n    </market-segmented-control>`);\n\n    const element = await page.find('market-segmented-control');\n    expect(element).toHaveAttribute('hydrated');\n  });\n\n  it('selects segment specified by defaultSelected', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<market-segmented-control value=\"two\">\n      <market-segment value=\"one\">One</market-segment>\n      <market-segment value=\"two\">Two</market-segment>\n      <market-segment value=\"three\">Three</market-segment>\n    </market-segmented-control>`);\n\n    const element = await page.find('market-segmented-control');\n    expect(element).toHaveAttribute('hydrated');\n\n    const segment2 = await page.find('market-segment[selected]');\n    expect(segment2).toEqualAttribute('value', 'two');\n    expect(await page.findAll('market-segment[selected]')).toHaveLength(1);\n  });\n\n  it('selects segment on click and correct events fire', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<market-segmented-control value=\"two\">\n      <market-segment value=\"one\">One</market-segment>\n      <market-segment value=\"two\">Two</market-segment>\n      <market-segment value=\"three\">Three</market-segment>\n    </market-segmented-control>`);\n\n    const element = await page.find('market-segmented-control');\n    segmentedControlValueChangeEventSpy = await element.spyOnEvent('marketSegmentedSelectionDidChange');\n    expect(element).toHaveAttribute('hydrated');\n\n    const segment1 = await page.find('market-segment[selected]');\n    expect(segment1).toEqualAttribute('value', 'two');\n    expect(await page.findAll('market-segment[selected]')).toHaveLength(1);\n    const tab3 = await page.find('market-segment[value=\"three\"]');\n\n    segmentChangeEventSpy = await tab3.spyOnEvent('marketSegmentSelectedChanged');\n    await tab3.click();\n    const segment3 = await page.find('market-segment[selected]');\n    expect(segment3).toEqualAttribute('value', 'three');\n    expect(await page.findAll('market-segment[selected]')).toHaveLength(1);\n    expect(segmentChangeEventSpy).toHaveReceivedEventTimes(1);\n    expect(segmentedControlValueChangeEventSpy).toHaveReceivedEventTimes(1);\n  });\n\n  it('cannot select segments when control is disabled', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<market-segmented-control disabled value=\"two\">\n      <market-segment value=\"one\">One</market-segment>\n      <market-segment value=\"two\">Two</market-segment>\n      <market-segment  value=\"three\">Three</market-segment>\n    </market-segmented-control>`);\n\n    const element = await page.find('market-segmented-control');\n    expect(element).toHaveAttribute('hydrated');\n\n    const segment1 = await page.find('market-segment[selected]');\n    expect(segment1).toEqualAttribute('value', 'two');\n    expect(await page.findAll('market-segment[selected]')).toHaveLength(1);\n\n    const tab3 = await page.find('market-segment[value=\"three\"]');\n\n    await tab3.click();\n    const selectedSegment = await page.find('market-segment[selected]');\n    expect(selectedSegment).toEqualAttribute('value', 'two');\n    expect(await page.findAll('market-segment[selected]')).toHaveLength(1);\n  });\n});\n"]}