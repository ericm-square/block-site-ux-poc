{"version":3,"file":"market-toaster.stories.js","sourceRoot":"","sources":["../../../../../src/components/market-toaster/storybook/market-toaster.stories.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAE3B,OAAO,EAAE,sBAAsB,EAAE,MAAM,0CAA0C,CAAC;AAClF,OAAO,EAAE,kBAAkB,EAAE,2BAA2B,EAAE,MAAM,qDAAqD,CAAC;AAEtH,eAAe;IACb,KAAK,EAAE,wCAAwC;IAC/C,SAAS,EAAE,gBAAgB;IAC3B,IAAI,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC;CACnB,CAAC;AAEV,MAAM,CAAC,MAAM,GAAG,GAAa;IAC3B,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA;;;;QAIZ,kBAAkB,CAAC,GAAG,CACtB,CAAC,OAAO,EAAE,EAAE,CACV,IAAI,CAAA,+BAA+B,OAAO;cACtC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;2BACrC,CACpB;;;;4DAIqD,2BAA2B,EAAE;GACtF;IACD,UAAU,EAAE;QACV,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAA,kCAAkC,KAAK,EAAE,QAAQ;QAChE,CAAC,KAAK,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE;YAC3B,CAAC,KAAK,IAAI,EAAE;gBACV,MAAM,sBAAsB,CAAC,aAAa,CAAC,CAAC;gBAC5C,MAAM,OAAO,GAAG,aAAa,CAAC,aAAa,CAAC,gBAAgB,CAA6B,CAAC;gBAC1F,MAAM,OAAO,GAAG,aAAa,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;gBAChE,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;oBACzB,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;wBACpC,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,aAAa,CAAC;wBACtD,IAAI,OAAO,KAAK,aAAa,EAAE,CAAC;4BAC9B,OAAO,CAAC,SAAS,EAAE,CAAC;4BACpB,OAAO;wBACT,CAAC;wBACD,MAAM,aAAa,GAAG,aAAa,CAAC,aAAa,CAAC,8CAA8C,OAAO,GAAG,CAAC,CAAC;wBAC5G,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC9C,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,EAAE,CAAC;YACL,OAAO,KAAK,EAAE,CAAC;QACjB,CAAC;KACF;CACF,CAAC","sourcesContent":["import type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\n\nimport { waitForMarketHydration } from '../../../utils/wait-for-market-hydration';\nimport { ALL_TOAST_VARIANTS, MarketToastVariantsTemplate } from '../../market-toast/storybook/market-toast.templates';\n\nexport default {\n  title: 'Components/Toast & Toaster/Toaster/API',\n  component: 'market-toaster',\n  tags: ['autodocs', '!dev'],\n} as Meta;\n\nexport const API: StoryObj = {\n  render: () => html`\n    <market-toaster></market-toaster>\n\n    <div id=\"demo-buttons\" style=\"display: flex; gap: var(--core-metrics-spacing-300);\">\n      ${ALL_TOAST_VARIANTS.map(\n        (variant) =>\n          html` <market-button data-toast=\"${variant}\">\n            ${variant.charAt(0).toUpperCase() + variant.slice(1)} toast\n          </market-button>`,\n      )}\n      <market-button variant=\"destructive\">Remove all toasts</market-button>\n    </div>\n\n    <div id=\"demo-toast-templates\" style=\"display: none;\">${MarketToastVariantsTemplate()}</div>\n  `,\n  decorators: [\n    (Story) => html`<div style=\"min-height: 480px\">${Story()}</div>`,\n    (Story, { canvasElement }) => {\n      (async () => {\n        await waitForMarketHydration(canvasElement);\n        const toaster = canvasElement.querySelector('market-toaster') as HTMLMarketToasterElement;\n        const buttons = canvasElement.querySelectorAll('market-button');\n        buttons.forEach((button) => {\n          button.addEventListener('click', () => {\n            const variant = button.dataset.toast || 'destructive';\n            if (variant === 'destructive') {\n              toaster.removeAll();\n              return;\n            }\n            const toastTemplate = canvasElement.querySelector(`#demo-toast-templates market-toast[variant=${variant}]`);\n            toaster.show(toastTemplate.cloneNode(true));\n          });\n        });\n      })();\n      return Story();\n    },\n  ],\n};\n"]}