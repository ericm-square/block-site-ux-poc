{"version":3,"file":"market-filter.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-filter/test/market-filter.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EElement, E2EPage, EventSpy, newE2EPage } from '@stencil/core/testing';\n\ndescribe('market-filter', () => {\n  let page: E2EPage;\n  let element: E2EElement;\n  let popoverEl: E2EElement;\n  let valueDidChangeEventSpy: EventSpy;\n\n  it('renders', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-filter></market-filter>');\n    element = await page.find('market-filter');\n\n    expect(element).toHaveAttribute('hydrated');\n    expect(element).not.toHaveAttribute('disabled');\n  });\n\n  it('disables filter button', async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-filter disabled>\n        <label slot=\"label\">Color</label>\n      </market-filter>\n    `);\n    element = await page.find('market-filter');\n    const popoverEl = await element.find('pierce/market-popover');\n\n    expect(element).toHaveAttribute('disabled');\n    await element.click();\n    expect(await popoverEl.isVisible()).toBe(false);\n  });\n\n  describe('label and feedback', () => {\n    it('displays the label and display value', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-filter name=\"color\">\n          <label slot=\"label\">Color</label>\n          <span slot=\"display-value\">Tangerine</span>\n          <market-list slot=\"list\" value=\"living-coral\">\n            <market-row value=\"living-coral\">\n              <label slot=\"label\">Living coral</label>\n            </market-row>\n          </market-list>\n        </market-filter>\n      `);\n      element = await page.find('market-filter');\n      const labelEl = await element.find('pierce/label');\n      const displayValueEl = await element.find('pierce/[slot=\"display-value\"]');\n\n      expect(await labelEl.isVisible()).toBe(true);\n      expect(labelEl.innerText).toStrictEqual('Color');\n      expect(await displayValueEl.isVisible()).toBe(true);\n      expect(displayValueEl.innerText).toStrictEqual('Tangerine');\n    });\n\n    it('displays the market-list’s value as feedback', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-filter name=\"color\">\n          <label slot=\"label\">Color</label>\n          <market-list slot=\"list\" value=\"living-coral\">\n            <market-row>\n              <label slot=\"label\">None</label>\n            </market-row>\n            <market-row value=\"classic-blue\">\n              <label slot=\"label\">Classic blue</label>\n            </market-row>\n            <market-row value=\"living-coral\">\n              <label slot=\"label\">Living coral</label>\n            </market-row>\n          </market-list>\n        </market-filter>\n      `);\n      element = await page.find('market-filter');\n      const feedbackEl = await element.find('pierce/[slot=\"feedback\"]');\n\n      expect(await feedbackEl.isVisible()).toBe(true);\n      expect(feedbackEl.innerText).toStrictEqual('Living coral');\n    });\n\n    it('displays the market-date-picker’s value as feedback', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-filter name=\"date\">\n          <label slot=\"label\">Date</label>\n          <market-date-picker\n            displayed-date=\"1/1/2023\"\n            selected-start-date=\"1/16/2023\"\n            selected-end-date=\"1/29/2023\"\n            selection-type=\"range\"\n          ></market-date-picker>\n        </market-filter>\n      `);\n      element = await page.find('market-filter');\n      const feedbackEl = await element.find('pierce/[slot=\"feedback\"]');\n\n      expect(await feedbackEl.isVisible()).toBe(true);\n      expect(feedbackEl.innerText).toStrictEqual('1/16–1/29/23');\n    });\n\n    it('displays the count when multiple values are selected', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-filter name=\"color\">\n          <label slot=\"label\">Color</label>\n          <market-list multiselect slot=\"list\" value=\"living-coral,classic-blue\">\n            <market-row>\n              <label slot=\"label\">None</label>\n            </market-row>\n            <market-row value=\"classic-blue\">\n              <label slot=\"label\">Classic blue</label>\n            </market-row>\n            <market-row value=\"living-coral\">\n              <label slot=\"label\">Living coral</label>\n            </market-row>\n            <market-row value=\"ultra-violet\">\n              <label slot=\"label\">Ultra violet</label>\n            </market-row>\n          </market-list>\n        </market-filter>\n      `);\n      element = await page.find('market-filter');\n      const feedbackEl = await element.find('pierce/[slot=\"feedback\"]');\n\n      expect(feedbackEl.innerText).toStrictEqual('2');\n    });\n  });\n\n  describe('popover', () => {\n    it('displays popover on click, and the list within the popover', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-filter name=\"color\">\n          <label slot=\"label\">Color</label>\n          <market-list slot=\"list\">\n            <market-row>\n              <label slot=\"label\">None</label>\n            </market-row>\n            <market-row value=\"classic-blue\">\n              <label slot=\"label\">Classic blue</label>\n            </market-row>\n            <market-row value=\"living-coral\">\n              <label slot=\"label\">Living coral</label>\n            </market-row>\n          </market-list>\n        </market-filter>\n      `);\n      element = await page.find('market-filter');\n      popoverEl = await element.find('pierce/market-popover');\n      const listEl = await element.find('pierce/market-list');\n      const rowEls = await listEl.findAll('pierce/market-row');\n\n      await element.click();\n      expect(await popoverEl.isVisible()).toBe(true);\n      expect(await listEl.isVisible()).toBe(true);\n      expect(rowEls[0]).not.toHaveAttribute('value');\n      expect((await rowEls[0].find('label')).innerText).toStrictEqual('None');\n      expect(rowEls[1]).toEqualAttribute('value', 'classic-blue');\n      expect((await rowEls[1].find('label')).innerText).toStrictEqual('Classic blue');\n      expect(rowEls[2]).toEqualAttribute('value', 'living-coral');\n      expect((await rowEls[2].find('label')).innerText).toStrictEqual('Living coral');\n    });\n\n    it('correctly passes aria- attributes required by screen readers', async () => {\n      const POPOVER_ID = 'slotted-popover-id';\n      const page = await newE2EPage();\n      await page.setContent(`\n        <market-filter name=\"color\">\n          <label slot=\"label\">Color</label>\n          <market-list id=${POPOVER_ID}>\n            <market-row>\n              <label slot=\"label\">None</label>\n            </market-row>\n            <market-row value=\"classic-blue\">\n              <label slot=\"label\">Classic blue</label>\n            </market-row>\n            <market-row value=\"living-coral\">\n              <label slot=\"label\">Living coral</label>\n            </market-row>\n          </market-list>\n        </market-filter>\n    `);\n\n      const slottedTrigger = await page.find('pierce/button');\n      const slottedPopover = await page.find('pierce/market-popover');\n\n      expect(slottedTrigger).toEqualAttribute('aria-expanded', 'false');\n      expect(slottedTrigger).toEqualAttribute('aria-controls', POPOVER_ID);\n      expect(slottedPopover).toEqualAttribute('id', POPOVER_ID);\n\n      await slottedTrigger.click();\n\n      expect(slottedTrigger).toEqualAttribute('aria-expanded', 'true');\n    });\n\n    it('shows popover when clicked, then collapses when clicked again', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-filter name=\"color\">\n          <label slot=\"label\">Color</label>\n          <market-list slot=\"list\">\n            <market-row value=\"classic-blue\">\n              <label slot=\"label\">Classic blue</label>\n            </market-row>\n          </market-list>\n        </market-filter>\n      `);\n      element = await page.find('market-filter');\n      popoverEl = await element.find('pierce/market-popover');\n\n      await element.click();\n      expect(await popoverEl.isVisible()).toBe(true);\n      expect(element.getAttribute('expanded')).toBe('');\n      await element.click();\n      expect(await popoverEl.isVisible()).toBe(false);\n      expect(element.getAttribute('expanded')).toBeNull();\n    });\n\n    it('shows popover when expanded prop is provided, then collapses when removed', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-filter name=\"color\">\n          <label slot=\"label\">Color</label>\n          <market-list slot=\"list\">\n            <market-row value=\"classic-blue\">\n              <label slot=\"label\">Classic blue</label>\n            </market-row>\n          </market-list>\n        </market-filter>\n      `);\n      element = await page.find('market-filter');\n      popoverEl = await element.find('pierce/market-popover');\n\n      expect(await popoverEl.isVisible()).toBe(false);\n      element.setAttribute('expanded', '');\n      await page.waitForChanges();\n      expect(await popoverEl.isVisible()).toBe(true);\n      element.removeAttribute('expanded');\n      await page.waitForChanges();\n      expect(await popoverEl.isVisible()).toBe(false);\n    });\n\n    it('keeps popover shown while selecting on a multiselect market-list', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-filter name=\"color\">\n          <label slot=\"label\">Color</label>\n          <market-list slot=\"list\" multiselect>\n            <market-row>\n              <label slot=\"label\">None</label>\n            </market-row>\n            <market-row value=\"classic-blue\">\n              <label slot=\"label\">Classic blue</label>\n            </market-row>\n            <market-row value=\"living-coral\">\n              <label slot=\"label\">Living coral</label>\n            </market-row>\n          </market-list>\n        </market-filter>\n      `);\n      element = await page.find('market-filter');\n      popoverEl = await element.find('pierce/market-popover');\n      const listEl = await element.find('pierce/market-list');\n      const rowEls = await listEl.findAll('pierce/market-row');\n\n      await element.click();\n      expect(await popoverEl.isVisible()).toStrictEqual(true);\n      await rowEls[0].click();\n      await rowEls[1].click();\n      await rowEls[2].click();\n      expect(await popoverEl.isVisible()).toStrictEqual(true);\n    });\n\n    it('keeps popover shown while selecting dates on a market-date-picker', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-filter name=\"date\">\n          <label slot=\"label\">Date</label>\n          <market-date-picker\n            display-menu\n            selection-type=\"range\"\n          ></market-date-picker>\n        </market-filter>\n      `);\n      element = await page.find('market-filter');\n      popoverEl = await element.find('pierce/market-popover');\n      const dayEls = await element.findAll('pierce/market-date-picker-date');\n\n      await element.click();\n      expect(await popoverEl.isVisible()).toStrictEqual(true);\n      await dayEls[0].click();\n      await dayEls[1].click();\n      await dayEls[2].click();\n      expect(await popoverEl.isVisible()).toStrictEqual(true);\n    });\n  });\n\n  describe('selection', () => {\n    describe('list', () => {\n      beforeEach(async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-filter name=\"color\">\n            <label slot=\"label\">Color</label>\n            <market-list slot=\"list\">\n              <market-row>\n                <label slot=\"label\">None</label>\n              </market-row>\n              <market-row value=\"classic-blue\">\n                <label slot=\"label\">Classic blue</label>\n              </market-row>\n              <market-row value=\"living-coral\">\n                <label slot=\"label\">Living coral</label>\n              </market-row>\n            </market-list>\n          </market-filter>\n        `);\n        element = await page.find('market-filter');\n      });\n\n      it('selects an item, then displays the selected item’s label', async () => {\n        const livingCoralRowEl = await element.find('pierce/market-row[value=\"living-coral\"]');\n        const popoverEl = await element.find('pierce/market-popover');\n\n        await element.click();\n        await livingCoralRowEl.click();\n        expect(await popoverEl.isVisible()).toBe(false);\n\n        const feedbackEl = await element.find('pierce/[slot=\"feedback\"]');\n        expect(feedbackEl.innerText).toStrictEqual('Living coral');\n      });\n\n      it('selects multiple items, then displays the selected item’s label', async () => {\n        const listEl = await element.find('pierce/market-list');\n        listEl.setAttribute('multiselect', '');\n        await page.waitForChanges();\n\n        const popover = await element.find('pierce/market-popover');\n        const classicBlue = await element.find('pierce/market-row[value=\"classic-blue\"]');\n        const livingCoralRowEl = await element.find('pierce/market-row[value=\"living-coral\"]');\n\n        await element.click();\n        await classicBlue.click();\n\n        const feedbackEl = await element.find('pierce/[slot=\"feedback\"]');\n        expect(feedbackEl.innerText).toStrictEqual('Classic blue');\n        expect(await popover.isVisible()).toBe(true);\n        await livingCoralRowEl.click();\n        expect(feedbackEl.innerText).toStrictEqual('2');\n        await livingCoralRowEl.click();\n        expect(feedbackEl.innerText).toStrictEqual('Classic blue');\n      });\n\n      it('clears the selected item by selecting a row without a value', async () => {\n        const noneRowEl = await element.find('pierce/market-row:not([value])');\n        const feedbackEl = await element.find('pierce/[slot=\"feedback\"]');\n\n        await element.click();\n        await noneRowEl.click();\n        expect(feedbackEl).toBeNull();\n      });\n    });\n  });\n\n  describe('events', () => {\n    describe('expanded', () => {\n      beforeEach(async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-filter name=\"color\">\n            <label slot=\"label\">Color</label>\n            <market-list slot=\"list\">\n              <market-row value=\"classic-blue\">\n                <label slot=\"label\">Classic blue</label>\n              </market-row>\n            </market-list>\n          </market-filter>\n        `);\n        element = await page.find('market-filter');\n      });\n\n      it('emits open and close events', async () => {\n        const openEventSpy = await element.spyOnEvent('marketFilterOpened');\n        const closeEventSpy = await element.spyOnEvent('marketFilterClosed');\n        await element.click();\n        expect(openEventSpy).toHaveReceivedEventTimes(1);\n        await element.click();\n        expect(closeEventSpy).toHaveReceivedEventTimes(1);\n        await element.click();\n        expect(openEventSpy).toHaveReceivedEventTimes(2);\n        await element.click();\n        expect(closeEventSpy).toHaveReceivedEventTimes(2);\n      });\n\n      it('emits expanded change events', async () => {\n        const expandedChangeEventSpy = await element.spyOnEvent('marketFilterExpandedChanged');\n        await element.click();\n        expect(expandedChangeEventSpy).toHaveReceivedEventTimes(1);\n        expect(expandedChangeEventSpy).toHaveReceivedEventDetail(true);\n        await element.click();\n        expect(expandedChangeEventSpy).toHaveReceivedEventTimes(2);\n        expect(expandedChangeEventSpy).toHaveReceivedEventDetail(false);\n        await element.click();\n        expect(expandedChangeEventSpy).toHaveReceivedEventTimes(3);\n        expect(expandedChangeEventSpy).toHaveReceivedEventDetail(true);\n        await element.click();\n        expect(expandedChangeEventSpy).toHaveReceivedEventTimes(4);\n        expect(expandedChangeEventSpy).toHaveReceivedEventDetail(false);\n      });\n    });\n\n    describe('list', () => {\n      beforeEach(async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-filter name=\"color\">\n            <label slot=\"label\">Color</label>\n            <market-list slot=\"list\">\n              <market-row>\n                <label slot=\"label\">None</label>\n              </market-row>\n              <market-row value=\"classic-blue\">\n                <label slot=\"label\">Classic blue</label>\n              </market-row>\n              <market-row value=\"living-coral\">\n                <label slot=\"label\">Living coral</label>\n              </market-row>\n            </market-list>\n          </market-filter>\n        `);\n        element = await page.find('market-filter');\n      });\n\n      it('emits change event', async () => {\n        const noneRowEl = await element.find('pierce/market-row:not([value])');\n        const classicBlueRowEl = await element.find('pierce/market-row[value=\"classic-blue\"]');\n        const livingCoralRowEl = await element.find('pierce/market-row[value=\"living-coral\"]');\n        valueDidChangeEventSpy = await element.spyOnEvent('marketFilterValueDidChange');\n\n        await element.click();\n        await classicBlueRowEl.click();\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'color',\n          prevValue: null,\n          value: 'classic-blue',\n        });\n        await element.click();\n        await livingCoralRowEl.click();\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'color',\n          prevValue: 'classic-blue',\n          value: 'living-coral',\n        });\n        await element.click();\n        await noneRowEl.click();\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'color',\n          prevValue: 'living-coral',\n          value: null,\n        });\n      });\n\n      it('emits change event with multiselect', async () => {\n        const listEl = await element.find('pierce/market-list');\n        listEl.setAttribute('multiselect', '');\n        await page.waitForChanges();\n\n        const classicBlueRowEl = await element.find('pierce/market-row[value=\"classic-blue\"]');\n        const livingCoralRowEl = await element.find('pierce/market-row[value=\"living-coral\"]');\n        valueDidChangeEventSpy = await element.spyOnEvent('marketFilterValueDidChange');\n\n        await element.click();\n        await classicBlueRowEl.click();\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'color',\n          prevValue: null,\n          value: 'classic-blue',\n        });\n        await livingCoralRowEl.click();\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'color',\n          prevValue: 'classic-blue',\n          value: ['classic-blue', 'living-coral'],\n        });\n        await livingCoralRowEl.click();\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'color',\n          prevValue: ['classic-blue', 'living-coral'],\n          value: 'classic-blue',\n        });\n        await classicBlueRowEl.click();\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'color',\n          prevValue: 'classic-blue',\n          value: null,\n        });\n      });\n    });\n\n    describe('date', () => {\n      it('emits change event when custom dates are selected', async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-filter name=\"date\">\n            <label slot=\"label\">Date</label>\n            <market-date-picker\n              display-menu\n              displayed-date=\"1/1/2023\"\n              selected-start-date=\"1/16/2023\"\n              selected-end-date=\"1/29/2023\"\n              selection-type=\"range\"\n            ></market-date-picker>\n          </market-filter>\n        `);\n        element = await page.find('market-filter');\n        valueDidChangeEventSpy = await element.spyOnEvent('marketFilterValueDidChange');\n        const day1El = await element.find('pierce/market-date-picker-date[day=\"1\"]');\n        const day30El = await element.find('pierce/market-date-picker-date[day=\"30\"]');\n\n        await element.click();\n        await day1El.click();\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'date',\n          prevValue: {\n            startDate: '1/16/2023',\n            endDate: '1/29/2023',\n          },\n          value: {\n            startDate: new Date('1/1/2023').toISOString(),\n            endDate: null,\n          },\n        });\n        await day30El.click();\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'date',\n          prevValue: {\n            startDate: new Date('1/1/2023').toISOString(),\n            endDate: null,\n          },\n          value: {\n            startDate: new Date('1/1/2023').toISOString(),\n            endDate: new Date('1/30/2023').toISOString(),\n          },\n        });\n      });\n\n      it('emits change event when preset dates are selected', async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-filter name=\"date\">\n            <label slot=\"label\">Date</label>\n            <market-date-picker\n              display-menu\n              selection-type=\"range\"\n            ></market-date-picker>\n          </market-filter>\n        `);\n        element = await page.find('market-filter');\n        valueDidChangeEventSpy = await element.spyOnEvent('marketFilterValueDidChange');\n        const thisMonthEl = await element.find('pierce/market-row[value=\"this-month\"]');\n        const thisYearEl = await element.find('pierce/market-row[value=\"this-year\"]');\n\n        await element.click();\n        await thisMonthEl.click();\n        const currentDate = new Date();\n        const firstDayOfTheMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n        const lastDayOfTheMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'date',\n          prevValue: {},\n          value: {\n            startDate: firstDayOfTheMonth.toISOString(),\n            endDate: lastDayOfTheMonth.toISOString(),\n          },\n        });\n        await thisYearEl.click();\n        const firstDayOfTheYear = new Date(currentDate.getFullYear(), 0, 1);\n        const lastDayOfTheYear = new Date(currentDate.getFullYear(), 12, 0);\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'date',\n          prevValue: {\n            startDate: firstDayOfTheMonth.toISOString(),\n            endDate: lastDayOfTheMonth.toISOString(),\n          },\n          value: {\n            startDate: firstDayOfTheYear.toISOString(),\n            endDate: lastDayOfTheYear.toISOString(),\n          },\n        });\n      });\n    });\n  });\n\n  describe('methods', () => {\n    describe('__setAndEmitListValue', () => {\n      beforeEach(async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-filter name=\"color\">\n            <label slot=\"label\">Color</label>\n            <market-list>\n              <market-row>\n                <label slot=\"label\">None</label>\n              </market-row>\n              <market-row value=\"classic-blue\">\n                <label slot=\"label\">Classic blue</label>\n              </market-row>\n              <market-row value=\"living-coral\">\n                <label slot=\"label\">Living coral</label>\n              </market-row>\n            </market-list>\n          </market-filter>\n        `);\n        element = await page.find('market-filter');\n        valueDidChangeEventSpy = await element.spyOnEvent('marketFilterValueDidChange');\n        await page.waitForChanges();\n\n        await page.$eval('market-filter', (el: HTMLMarketFilterElement) => {\n          el.__setAndEmitListValue('classic-blue');\n        });\n        await page.waitForChanges();\n      });\n\n      it('emitted the change event', () => {\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'color',\n          prevValue: null,\n          value: 'classic-blue',\n        });\n      });\n\n      it('set the feedback value', async () => {\n        const feedbackEl = await element.find('pierce/[slot=\"feedback\"]');\n        expect(feedbackEl.innerText).toStrictEqual('Classic blue');\n      });\n\n      it('set the list value', async () => {\n        const listEl = await element.find('pierce/market-list');\n        expect(listEl.getAttribute('value')).toStrictEqual('classic-blue');\n      });\n    });\n\n    describe('__setAndEmitDatePickerValue', () => {\n      beforeEach(async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <market-filter name=\"date\">\n            <label slot=\"label\">Date</label>\n            <market-date-picker\n              displayed-date=\"1/1/2023\"\n              selected-start-date=\"1/16/2023\"\n              selected-end-date=\"1/29/2023\"\n              selection-type=\"range\"\n            ></market-date-picker>\n          </market-filter>\n        `);\n        element = await page.find('market-filter');\n        valueDidChangeEventSpy = await element.spyOnEvent('marketFilterValueDidChange');\n        await page.waitForChanges();\n\n        await page.$eval('market-filter', (el: HTMLMarketFilterElement) => {\n          el.__setAndEmitDatePickerValue({\n            startDate: '1/1/2023',\n            endDate: '1/30/2023',\n          });\n        });\n        await page.waitForChanges();\n      });\n\n      it('emitted the change event', () => {\n        expect(valueDidChangeEventSpy).toHaveReceivedEventDetail({\n          name: 'date',\n          prevValue: {\n            startDate: '1/16/2023',\n            endDate: '1/29/2023',\n          },\n          value: {\n            startDate: '1/1/2023',\n            endDate: '1/30/2023',\n          },\n        });\n      });\n\n      it('set the feedback value', async () => {\n        const feedbackEl = await element.find('pierce/[slot=\"feedback\"]');\n        expect(feedbackEl.innerText).toStrictEqual('1/1–1/30/23');\n      });\n\n      it('set the date-picker value', async () => {\n        const datePickerEl = await element.find('pierce/market-date-picker');\n        expect(datePickerEl).toEqualAttribute('selected-start-date', '1/1/2023');\n        expect(datePickerEl).toEqualAttribute('selected-end-date', '1/30/2023');\n      });\n    });\n  });\n});\n"]}