{"version":3,"file":"market-filter.templates.js","sourceRoot":"","sources":["../../../../../src/components/market-filter/storybook/market-filter.templates.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAkB,MAAM,KAAK,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,mCAAmC,CAAC;AAE9D,OAAO,EAAE,kBAAkB,EAA2B,MAAM,mDAAmD,CAAC;AAmBhH,MAAM,cAAc,GAAG,CAAC,EACtB,OAAO,EACP,QAAQ,EACR,gBAAgB,EAChB,mBAAmB,EACnB,SAAS,EACT,IAAI,EACJ,gBAAgB,EAChB,IAAI,GACgB,EAAE,EAAE,CAAC,IAAI,CAAA;;gBAEf,QAAQ;2BACG,SAAS,CAAC,mBAAmB,CAAC;WAC9C,SAAS,CAAC,IAAI,CAAC;wBACF,SAAS,CAAC,gBAAgB,CAAC;WACxC,SAAS,CAAC,IAAI,CAAC;;0BAEA,SAAS;MAC7B,gBAAgB,IAAI,IAAI,CAAA,8BAA8B,gBAAgB,SAAS,IAAI,OAAO;;CAE/F,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,EACjC,QAAQ,EACR,gBAAgB,EAChB,mBAAmB,EACnB,SAAS,EACT,eAAe,EACf,aAAa,EACb,SAAS,EACT,IAAI,EACJ,gBAAgB,EAChB,IAAI,GACgB,EAAE,EAAE,CACxB,cAAc,CAAC;IACb,OAAO,EAAE,kBAAkB,CAAC;QAC1B,WAAW,EAAE,IAAI;QACjB,WAAW,EAAE,eAAe;QAC5B,KAAK,EAAE,SAAS;QAChB,QAAQ,EAAE,YAAY;QACtB,SAAS,EAAE,aAAa;KACzB,CAAC;IACF,QAAQ;IACR,gBAAgB;IAChB,mBAAmB;IACnB,SAAS;IACT,IAAI;IACJ,gBAAgB;IAChB,IAAI;CACL,CAAC,CAAC;AAEL,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,EACjC,QAAQ,EACR,aAAa,EACb,WAAW,EACX,gBAAgB,EAChB,mBAAmB,EACnB,SAAS,EACT,IAAI,EACJ,gBAAgB,EAChB,eAAe,EACf,iBAAiB,EACjB,aAAa,EACb,IAAI,GACgB,EAAE,EAAE,CACxB,cAAc,CAAC;IACb,oCAAoC;IACpC,OAAO,EAAE,IAAI,CAAA;;0BAES,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,OAAO;wBACnF,WAAW;+BACJ,SAAS,CAAC,iBAAiB,CAAC;QACjD,CAAC,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,kBAAkB,EAAE;QAClD,CAAC,CAAC,OAAO;6BACU,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,OAAO;yBACzF,aAAa;;KAEjC;IACD,QAAQ;IACR,gBAAgB;IAChB,mBAAmB;IACnB,SAAS;IACT,IAAI;IACJ,gBAAgB;IAChB,IAAI;CACL,CAAC,CAAC","sourcesContent":["import { html, nothing, TemplateResult } from 'lit';\nimport { ifDefined } from 'lit-html/directives/if-defined.js';\n\nimport { MarketListTemplate, TMarketListTemplateArgs } from '../../market-list/storybook/market-list.templates';\n\ntype TDatePickerProps = Partial<\n  Pick<\n    HTMLMarketDatePickerElement,\n    'displayedDate' | 'displayMenu' | 'selectedStartDate' | 'selectedEndDate' | 'selectionType'\n  >\n>;\nexport type TFilterTemplateArgs = Partial<HTMLMarketFilterElement> &\n  TDatePickerProps & {\n    content?: TemplateResult;\n    displayValueText?: string;\n    filterType?: 'list' | 'date';\n    labelText?: string;\n    listRowArgMap?: TMarketListTemplateArgs['rowArgMap'];\n    listMultiselect?: boolean;\n    listValue?: string;\n  };\n\nconst FilterTemplate = ({\n  content,\n  disabled,\n  displayValueText,\n  dropdownInteraction,\n  labelText,\n  name,\n  popoverPlacement,\n  size,\n}: TFilterTemplateArgs) => html`\n  <market-filter\n    ?disabled=${disabled}\n    dropdown-interaction=${ifDefined(dropdownInteraction)}\n    name=${ifDefined(name)}\n    popover-placement=${ifDefined(popoverPlacement)}\n    size=${ifDefined(size)}\n  >\n    <label slot=\"label\">${labelText}</label>\n    ${displayValueText && html`<span slot=\"display-value\">${displayValueText}</span>`} ${content}\n  </market-filter>\n`;\n\nexport const FilterListTemplate = ({\n  disabled,\n  displayValueText,\n  dropdownInteraction,\n  labelText,\n  listMultiselect,\n  listRowArgMap,\n  listValue,\n  name,\n  popoverPlacement,\n  size,\n}: TFilterTemplateArgs) =>\n  FilterTemplate({\n    content: MarketListTemplate({\n      interactive: true,\n      multiselect: listMultiselect,\n      value: listValue,\n      itemType: 'market-row',\n      rowArgMap: listRowArgMap,\n    }),\n    disabled,\n    displayValueText,\n    dropdownInteraction,\n    labelText,\n    name,\n    popoverPlacement,\n    size,\n  });\n\nexport const FilterDateTemplate = ({\n  disabled,\n  displayedDate,\n  displayMenu,\n  displayValueText,\n  dropdownInteraction,\n  labelText,\n  name,\n  popoverPlacement,\n  selectedEndDate,\n  selectedStartDate,\n  selectionType,\n  size,\n}: TFilterTemplateArgs) =>\n  FilterTemplate({\n    /* TODO: use date picker template */\n    content: html`\n      <market-date-picker\n        displayed-date=\"${ifDefined(displayedDate) ? new Date(displayedDate).toLocaleDateString() : nothing}\"\n        ?display-menu=${displayMenu}\n        selected-start-date=\"${ifDefined(selectedStartDate)\n          ? new Date(selectedStartDate).toLocaleDateString()\n          : nothing}\"\n        selected-end-date=\"${ifDefined(selectedEndDate) ? new Date(selectedEndDate).toLocaleDateString() : nothing}\"\n        selection-type=${selectionType}\n      ></market-date-picker>\n    `,\n    disabled,\n    displayValueText,\n    dropdownInteraction,\n    labelText,\n    name,\n    popoverPlacement,\n    size,\n  });\n"]}