{"version":3,"file":"market-filter.stories.js","sourceRoot":"","sources":["../../../../../src/components/market-filter/storybook/market-filter.stories.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\n\nimport { FilterDateTemplate, FilterListTemplate, TFilterTemplateArgs } from './market-filter.templates';\nimport { waitForMarketHydration } from '../../../utils/wait-for-market-hydration';\nimport { TMarketListTemplateArgs } from '../../market-list/storybook/market-list.templates';\nimport { fixFilterZIndex } from './utils';\n\ntype Story = StoryObj<TFilterTemplateArgs>;\n\nconst DEFAULT_ITEMS: TMarketListTemplateArgs['rowArgMap'] = Object.freeze({\n  0: {\n    label: html`Classic blue &#129429;`,\n    value: 'classic-blue',\n    control: 'checkbox',\n  },\n  1: {\n    label: html`Illuminating &#127804;`,\n    value: 'illuminating',\n    control: 'checkbox',\n  },\n  2: {\n    label: html`Living coral &#127825;`,\n    value: 'living-coral',\n    control: 'checkbox',\n  },\n  3: {\n    label: html`Ultra violet &#128126;`,\n    value: 'ultra-violet',\n    control: 'checkbox',\n  },\n  4: {\n    label: html`Very Peri &#129412;`,\n    value: 'very-peri',\n    control: 'checkbox',\n  },\n});\n\nconst DEFAULT_ITEMS_WITH_NONE = Object.freeze({\n  0: { label: 'None' },\n  1: {\n    label: html`Classic blue &#129429;`,\n    value: 'classic-blue',\n  },\n  2: {\n    label: html`Illuminating &#127804;`,\n    value: 'illuminating',\n  },\n  3: {\n    label: html`Living coral &#127825;`,\n    value: 'living-coral',\n  },\n  4: {\n    label: html`Ultra violet &#128126;`,\n    value: 'ultra-violet',\n  },\n  5: {\n    label: html`Very Peri &#129412;`,\n    value: 'very-peri',\n  },\n});\n\nexport default {\n  title: 'Components/Filter (BETA)/API',\n  tags: ['autodocs', '!dev'],\n  component: 'market-filter',\n  argTypes: {\n    filterType: {\n      control: { type: 'select' },\n      options: ['list', 'date'],\n      description:\n        'Whether a `market-list` or `market-date-picker` is used by the filter displayed on the demo canvas.',\n      name: 'Filter type',\n      table: { category: 'Demo' },\n    },\n    labelText: {\n      control: { type: 'text' },\n      description: 'Passed to `<label slot=\"label\">`',\n      name: 'Label',\n      table: { category: 'Demo' },\n    },\n    displayValueText: {\n      control: { type: 'text' },\n      description: 'Passed to `<span slot=\"display-value\">`',\n      name: 'Display value',\n      table: { category: 'Demo' },\n    },\n    displayedDate: {\n      control: { type: 'date' },\n      description: 'Passed to `<market-date-picker displayed-date>`',\n      name: 'Displayed date',\n      table: { category: 'Demo' },\n    },\n    selectedStartDate: {\n      control: { type: 'date' },\n      description: 'Passed to `<market-date-picker selected-start-date>`',\n      name: 'Start date',\n      table: { category: 'Demo' },\n    },\n    selectedEndDate: {\n      control: { type: 'date' },\n      description: 'Passed to `<market-date-picker selected-end-date>`',\n      name: 'End date',\n      table: { category: 'Demo' },\n    },\n    selectionType: {\n      control: { type: 'select' },\n      options: ['single', 'range'],\n      description: 'Passed to `<market-date-picker selection-type>`',\n      name: 'Date selection type',\n      table: { category: 'Demo' },\n    },\n    listRowArgMap: {\n      content: { disable: true },\n      table: { disable: true },\n    },\n  },\n  args: {\n    filterType: 'list',\n    name: 'color',\n    labelText: 'Color',\n    listRowArgMap: DEFAULT_ITEMS_WITH_NONE,\n  },\n  parameters: {\n    docs: {\n      story: {\n        autoplay: true,\n      },\n    },\n  },\n} as Meta<TFilterTemplateArgs>;\n\nexport const API: Story = {\n  render: (args) => {\n    if (args.filterType === 'list') {\n      return FilterListTemplate(args);\n    } else if (args.filterType === 'date') {\n      return FilterDateTemplate(args);\n    }\n    return '';\n  },\n  play: async ({ canvasElement }) => {\n    await waitForMarketHydration(canvasElement);\n    fixFilterZIndex(canvasElement);\n  },\n};\n\nexport const Small: Story = {\n  ...API,\n  args: {\n    size: 'small',\n    listRowArgMap: (() => {\n      const items = { ...DEFAULT_ITEMS };\n      Object.keys(items).forEach((index) => {\n        items[index] = {\n          ...items[index],\n          size: 'small',\n        };\n      });\n      return items;\n    })(),\n  },\n};\n\nexport const Multiselect: Story = {\n  ...API,\n  args: {\n    listRowArgMap: DEFAULT_ITEMS,\n    listMultiselect: true,\n  },\n};\n\nexport const Date: Story = {\n  ...API,\n  args: {\n    filterType: 'date',\n    labelText: 'Date',\n    displayedDate: '2/1/2023',\n    selectedStartDate: '1/15/23',\n    selectedEndDate: '2/15/2023',\n    selectionType: 'range',\n  },\n};\n"]}