{"version":3,"file":"market-table-column.js","sourceRoot":"","sources":["../../../../src/components/market-table-column/market-table-column.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, Element, Prop, State, Event, EventEmitter, Watch, Method, h } from '@stencil/core';\n\n/**\n * @slot - Default slot for all content\n */\n@Component({\n  tag: 'market-table-column',\n  styleUrl: 'market-table-column.css',\n  shadow: true,\n})\nexport class MarketTableColumn {\n  @Element() el: HTMLMarketTableColumnElement;\n\n  // ----------- Consumer-defined props -------------\n\n  /**\n   * **REQUIRED:** A unique key for this column, used to map all related cells together\n   */\n  @Prop({ mutable: false, reflect: true }) readonly name: string;\n\n  /**\n   * Will set the `align` property on all related cells to this value\n   */\n  @Prop({ mutable: false, reflect: false }) readonly align: false | 'left' | 'right' = false;\n\n  /**\n   * Makes this column stick to an edge of the table\n   */\n  @Prop({ mutable: true, reflect: true }) stickTo: 'left' | 'right';\n\n  /**\n   * Whether or not this column is sortable\n   */\n  @Prop({ mutable: false, reflect: true }) readonly sortable: boolean = false;\n\n  /**\n   * What order the column is sorting in; ascending points up and descending points down\n   * If the column is sortable and this prop is not present, the sort icon points up but is grayed out.\n   */\n  @Prop({ reflect: true }) readonly sortOrder: 'ascending' | 'descending';\n\n  /**\n   * Hides the column and all related cells.\n   */\n  @Prop({ mutable: false, reflect: true }) readonly hidden: boolean = false;\n\n  // --------------- Internal props -----------------\n\n  /**\n   * **INTERNAL [do not use directly]**\n   * The order of this market-table-column in the DOM\n   */\n  @Prop({ mutable: false, reflect: false }) readonly index: number = 0;\n\n  /**\n   * **INTERNAL [do not use directly]**\n   * Set by the parent table element, based on it's grid-template-columns CSS value\n   */\n  @Prop({ mutable: false, reflect: false }) readonly width: string;\n\n  /**\n   * The original slot this column was placed in\n   */\n  @State() originalSlot: string;\n\n  /**\n   * Emitted when this column is stuck to a table edge.\n   * Can happen when the stick-to property is updated, .stick() method is called\n   * or when slotted content in the parent table changes\n   */\n  @Event() marketTableColumnStick: EventEmitter<{\n    position: 'left' | 'right';\n    index: number;\n  }>;\n\n  /**\n   * Emitted when a table column heading is clicked to sort\n   */\n  @Event() marketTableColumnUnstick: EventEmitter<{\n    position: 'left' | 'right';\n    index: number;\n  }>;\n\n  /**\n   * Emitted when a table column heading is clicked to sort\n   */\n  @Event() marketTableColumnSort: EventEmitter<{\n    column: string;\n    previousSortOrder: 'ascending' | 'descending';\n  }>;\n\n  /**\n   * Emitted when a table column's hidden property changes. Used by market-table\n   * to toggle visibility of related table cells.\n   */\n  @Event() marketTableColumnVisibilityChange: EventEmitter<{\n    columnName: string;\n    hidden: boolean;\n  }>;\n\n  @Watch('hidden')\n  emitVisibilityChangeEvent(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.marketTableColumnVisibilityChange.emit({\n        columnName: this.name,\n        hidden: newValue,\n      });\n    }\n  }\n\n  @Watch('stickTo')\n  async emitStickyEvents(newValue: 'left' | 'right', oldValue: 'left' | 'right') {\n    if (newValue && newValue !== oldValue) {\n      await this.stick(newValue);\n    } else {\n      this.unstick(newValue);\n    }\n  }\n\n  /**\n   * Fixes this column to the provided table edge (position)\n   */\n  @Method()\n  stick(position?: 'left' | 'right') {\n    /* If our position is different than out current stickTo value,\n    then we are probably calling stick() directly from javascript, rather\n    than having it be triggered from the stickTo watcher, so we want to\n    update that value, which will call this function again, the values will match\n    and then the event will be emitted */\n    if (position !== this.stickTo) {\n      this.stickTo = position;\n\n      /* Otherwise this function has been triggered from the stickTo watcher\n    by someone updating the bound property so we want to emit the event */\n    } else {\n      this.marketTableColumnStick.emit({\n        position,\n        index: this.index,\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Un-fixes this column from any table edge\n   */\n  @Method()\n  unstick(position?: 'left' | 'right') {\n    this.marketTableColumnUnstick.emit({\n      position,\n      index: this.index,\n    });\n    return Promise.resolve();\n  }\n\n  /**\n   * **INTERNAL [do not use directly]**\n   * Moves this column into a slot inside the market-table-area\n   * which is fixed to the provided edge (position), allowing\n   * for fixed columns\n   */\n  @Method()\n  _stickSelf(position: 'left' | 'right') {\n    if (position) {\n      this.el.slot = `sticky-${position}`;\n    }\n    this.stickTo = position;\n    return Promise.resolve();\n  }\n\n  /**\n   * **INTERNAL [do not use directly]**\n   * Moves this column back into it's original slot from a slot\n   * within a fixed market-table-area\n   */\n  @Method()\n  _unstickSelf() {\n    if (!this.originalSlot) {\n      this.el.removeAttribute('slot');\n    } else {\n      this.el.slot = this.originalSlot;\n    }\n    this.el.removeAttribute('stick-to');\n    return Promise.resolve();\n  }\n\n  clickHandler() {\n    if (this.sortable) {\n      this.marketTableColumnSort.emit({\n        column: this.name,\n        previousSortOrder: this.sortOrder,\n      });\n    }\n  }\n\n  componentWillLoad() {\n    this.originalSlot = this.el.getAttribute('slot');\n\n    if (!this.name) {\n      console.warn('Please set a name on <market-table-column>. Tables may not work correctly without this.'); // eslint-disable-line no-console\n    }\n  }\n\n  componentDidLoad() {\n    // stickTo watcher does not fire on first component load\n    if (this.stickTo) {\n      this.stick(this.stickTo);\n    }\n  }\n\n  render() {\n    return (\n      <Host\n        class=\"market-table-column\"\n        align={this.align === 'right' && this.align}\n        role=\"columnheader\"\n        aria-sort={this.sortOrder}\n        onClick={() => this.clickHandler()}\n      >\n        <slot name=\"leading-accessory\"></slot>\n        {this.sortable && (\n          // A11Y: This button allows screen readers to access and click on the column header.\n          <button>\n            <slot></slot>\n            <svg\n              width=\"16\"\n              height=\"15\"\n              viewBox=\"0 0 16 15\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"sorting-caret\"\n              aria-hidden=\"true\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M8.70709 14.7071C8.31657 15.0976 7.6834 15.0976 7.29288 14.7071L0.292879 7.7071L1.70709 6.29289L6.99999 11.5858L6.99999 -7.612e-07L8.99999 -5.86354e-07L8.99999 11.5858L14.2929 6.29289L15.7071 7.70711L8.70709 14.7071Z\"\n              />\n            </svg>\n          </button>\n        )}\n\n        {!this.sortable && <slot></slot>}\n        <slot name=\"trailing-accessory\"></slot>\n      </Host>\n    );\n  }\n}\n"]}