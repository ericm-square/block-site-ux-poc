{"version":3,"file":"market-header.js","sourceRoot":"","sources":["../../../../src/components/market-header/market-header.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, State, Prop, Element, Event, Watch, EventEmitter, h } from '@stencil/core';\nimport { HEADER_CLOSE_BUTTON_ICON_ASSET } from '@market/market-theme/js/cjs/index.js';\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { TMarketHeaderNavigateEventDetail } from './events';\n\n/**\n * @slot - The title. The position of the title varies based on the presence of other slots\n * @slot navigation - navigation buttons, ex close, back, forward, on the left side of the header\n * @slot wayfinding - the smaller \"eyebrow\" text displayed above the title, e.g. \"Step 1 of 2\"\n * @slot actions - for button(s) to perform actions, on the right side of the header\n * @slot subheading - Secondary text for the row\n * @part heading - the heading area where the default, wayfinding, and subheading slot is contained in\n */\n@Component({\n  tag: 'market-header',\n  styleUrl: 'market-header.css',\n  shadow: true,\n})\nexport class MarketHeader {\n  @Element() el: HTMLMarketHeaderElement;\n  customNavEl: any;\n\n  /**\n   * Whether or not the navigation slot is shown\n   */\n  @Prop({ mutable: true, reflect: true }) showNavigation: boolean | null = null;\n\n  /**\n   * String to use for the aria-label accessibility attribute of the default close \"x\" button.\n   */\n  @Prop({ reflect: true }) readonly closeButtonAriaLabel: string = 'Close';\n\n  /**\n   * Disables the default close \"x\" button.\n   */\n  @Prop() readonly disableCloseButton: boolean = false;\n\n  /**\n   * Whether or not the header is in compact mode\n   * when navigation is present.\n   */\n  @Prop({ reflect: true }) readonly compact: boolean = false;\n\n  @State() showActions: boolean = false;\n\n  /**\n   * Emitted when the close icon in the navigation slot is clicked.\n   */\n  @Event() marketHeaderNavigate: EventEmitter<TMarketHeaderNavigateEventDetail>;\n\n  @Watch('compact')\n  handleCompact() {\n    if (this.compact) {\n      const compact = this.el.shadowRoot.querySelector('.grid .compact');\n      const minHeight = Number.parseInt(getComputedStyle(compact).height, 10);\n      this.el.style.height = minHeight !== undefined ? `${minHeight}px` : '';\n    } else {\n      this.el.style.height = '';\n    }\n  }\n\n  handleSlottedNavigation() {\n    // If there is custom navigation passed in, we need to\n    // attach event handlers to the slotted elements manually\n    const customNavEl = this.el.querySelector('[slot=\"navigation\"]');\n    if (customNavEl) {\n      this.showNavigation = true;\n      customNavEl.addEventListener('click', this.handleSlottedNavClick.bind(this));\n    }\n  }\n\n  handleSlottedActions() {\n    const actions = this.el.querySelector('[slot=\"actions\"]');\n    this.showActions = actions ? true : false;\n  }\n\n  handleCloseButtonClick(event) {\n    this.marketHeaderNavigate.emit({\n      event,\n      action: 'close',\n    });\n  }\n\n  handleSlottedNavClick(event) {\n    this.marketHeaderNavigate.emit({\n      event,\n      action: 'custom',\n    });\n  }\n\n  componentWillLoad() {\n    this.checkForNavigation();\n    this.cloneDefaultHeadingToCompactHeading();\n\n    // watch for changes in slotted children content\n    const observer = new MutationObserver(this.handleMutation.bind(this));\n    observer.observe(this.el, { childList: true, characterData: true, subtree: true });\n  }\n\n  componentDidRender() {\n    // this function requires layout computation,\n    // so we need to wait until render to call.\n    this.handleCompact();\n  }\n\n  handleMutation(mutationList) {\n    // We don't want to re-clone the default slot content if\n    // the mutation was already the result of the cloning\n    // because then we would get into an infinite loop!\n    // So we have to look at the mutation data to check if a\n    // compact slotted element was added to prevent re-cloning.\n    let shouldClone = true;\n    mutationList.forEach((mutation) => {\n      if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {\n        mutation.addedNodes.forEach((node) => {\n          if (node.slot === 'compact') {\n            shouldClone = false;\n          }\n        });\n      }\n    });\n\n    if (shouldClone) {\n      this.cloneDefaultHeadingToCompactHeading();\n    }\n  }\n\n  checkForNavigation() {\n    // We want to force the header to be navigable when slotted in modals\n    const hasModalParent = this.el.closest(`\n      ${getNamespacedTagFor('market-modal-full')},\n      ${getNamespacedTagFor('market-modal-partial')}\n    `);\n\n    // The same if custom navigation is slotted in\n    const hasCustomNavigation = this.el.querySelector('[slot=\"navigation\"]');\n\n    // Only set this if the prop hasn't been passed in manually\n    if (this.showNavigation === null) {\n      this.showNavigation = hasModalParent || hasCustomNavigation ? true : false;\n    }\n  }\n\n  cloneDefaultHeadingToCompactHeading() {\n    // clear existing compact slotted content\n    const compactSlottedContent = this.el.querySelectorAll('[slot=\"compact\"]');\n    for (const node of compactSlottedContent) {\n      this.el.removeChild(node);\n    }\n\n    // clone the wayfinding or subheading slot into compact slot\n    const wayfindingEl = this.el.querySelector('[slot=\"wayfinding\"]');\n    const subheadingEl = this.el.querySelector('[slot=\"subheading\"]');\n\n    if (wayfindingEl) {\n      const clone = wayfindingEl.cloneNode(true) as HTMLElement;\n      clone.slot = 'compact';\n      clone.classList.add('wayfinding');\n      this.el.appendChild(clone);\n    }\n\n    // clone the rest of the default slot content into compact slot\n    const defaultSlotContent = [...this.el.children].filter((el) => !el.getAttribute('slot'));\n    for (const node of defaultSlotContent) {\n      const clone = node.cloneNode(true) as HTMLElement;\n      clone.slot = 'compact';\n      this.el.appendChild(clone);\n    }\n\n    if (!wayfindingEl && subheadingEl) {\n      const clone = subheadingEl.cloneNode(true) as HTMLElement;\n      clone.slot = 'compact';\n      clone.classList.add('subheading');\n      this.el.appendChild(clone);\n    }\n  }\n\n  renderDefaultNavigation() {\n    const MarketButtonTagName = getNamespacedTagFor('market-button');\n    const MarketIconTagName = getNamespacedTagFor('market-icon');\n\n    return (\n      <MarketButtonTagName\n        rank=\"secondary\"\n        slot=\"navigation\"\n        aria-label={this.closeButtonAriaLabel}\n        disabled={this.disableCloseButton}\n        onClick={(event) => this.handleCloseButtonClick(event)}\n      >\n        <MarketIconTagName slot=\"icon\" name={HEADER_CLOSE_BUTTON_ICON_ASSET}></MarketIconTagName>\n      </MarketButtonTagName>\n    );\n  }\n\n  render() {\n    return (\n      <Host class=\"market-header\" show-actions={this.showActions}>\n        <div class=\"grid\">\n          <div class=\"navigation\">\n            <nav>\n              <slot name=\"navigation\" onSlotchange={() => this.handleSlottedNavigation()}>\n                {this.renderDefaultNavigation()}\n              </slot>\n            </nav>\n          </div>\n          <div class=\"compact\">\n            <slot name=\"compact\"></slot>\n          </div>\n          <div class=\"actions\">\n            <menu>\n              <slot name=\"actions\" onSlotchange={() => this.handleSlottedActions()}></slot>\n            </menu>\n          </div>\n        </div>\n        <div class=\"heading\" part=\"heading\">\n          <slot name=\"wayfinding\"></slot>\n          <slot></slot>\n          <slot name=\"subheading\"></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}