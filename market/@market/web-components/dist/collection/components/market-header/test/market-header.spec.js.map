{"version":3,"file":"market-header.spec.js","sourceRoot":"","sources":["../../../../../src/components/market-header/test/market-header.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,gBAAgB,MAAM,mBAAmB,CAAC;AAEjD,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAEhD,0DAA0D;AAC1D,MAAM,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAE3C,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QAC/B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE,iCAAiC;SACxC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6B7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE;;OAEL;SACF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6B7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport MutationObserver from 'mutation-observer';\n\nimport { MarketHeader } from '../market-header';\n\n// Fix for ReferenceError: MutationObserver is not defined\nglobal.MutationObserver = MutationObserver;\n\ndescribe('market-header', () => {\n  it('default renders', async () => {\n    const page = await newSpecPage({\n      components: [MarketHeader],\n      html: '<market-header></market-header>',\n    });\n    expect(page.root).toEqualHtml(`\n      <market-header class=\"market-header\" close-button-aria-label=\"Close\">\n        <mock:shadow-root>\n          <div class=\"grid\">\n            <div class=\"navigation\">\n              <nav>\n                <slot name=\"navigation\">\n                  <market-button aria-label=\"Close\" rank=\"secondary\" slot=\"navigation\">\n                    <market-icon name=\"x\" slot=\"icon\"></market-icon>\n                  </market-button>\n                </slot>\n              </nav>\n            </div>\n            <div class=\"compact\">\n              <slot name=\"compact\"></slot>\n            </div>\n            <div class=\"actions\">\n              <menu>\n                <slot name=\"actions\"></slot>\n              </menu>\n            </div>\n          </div>\n          <div class=\"heading\" part=\"heading\">\n            <slot name=\"wayfinding\"></slot>\n            <slot></slot>\n            <slot name=\"subheading\"></slot>\n          </div>\n        </mock:shadow-root>\n      </market-header>\n    `);\n  });\n\n  it('renders with navigation', async () => {\n    const page = await newSpecPage({\n      components: [MarketHeader],\n      html: `\n        <market-header show-navigation></market-header>\n      `,\n    });\n    expect(page.root).toEqualHtml(`\n      <market-header class=\"market-header\" show-navigation close-button-aria-label=\"Close\">\n        <mock:shadow-root>\n          <div class=\"grid\">\n            <div class=\"navigation\">\n              <nav>\n                <slot name=\"navigation\">\n                  <market-button aria-label=\"Close\" rank=\"secondary\" slot=\"navigation\">\n                    <market-icon name=\"x\" slot=\"icon\"></market-icon>\n                  </market-button>\n                </slot>\n              </nav>\n            </div>\n            <div class=\"compact\">\n              <slot name=\"compact\"></slot>\n            </div>\n            <div class=\"actions\">\n              <menu>\n                <slot name=\"actions\"></slot>\n              </menu>\n            </div>\n          </div>\n          <div class=\"heading\" part=\"heading\">\n            <slot name=\"wayfinding\"></slot>\n            <slot></slot>\n            <slot name=\"subheading\"></slot>\n          </div>\n        </mock:shadow-root>\n      </market-header>\n    `);\n  });\n});\n"]}