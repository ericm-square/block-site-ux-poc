{"version":3,"file":"market-inline-status.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-inline-status/test/market-inline-status.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAEnD,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,wFAAwF,CAAC,CAAC;QAEhH,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAExD,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAE/B,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1D,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CACnB,0GAA0G,CAC3G,CAAC;QAEF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAExD,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAE/B,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7D,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CACnB,0GAA0G,CAC3G,CAAC;QAEF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAExD,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAE/B,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7D,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CACnB,2GAA2G,CAC5G,CAAC;QAEF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAExD,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAE/B,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9D,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('market-inline-status', () => {\n  it('renders', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-inline-status>This is a market inline status component.</market-inline-status>');\n\n    const element = await page.find('market-inline-status');\n\n    expect(element).not.toBeNull();\n\n    expect(await element.getProperty('variant')).toBe('info');\n    expect(element.textContent).toBe('This is a market inline status component.');\n  });\n\n  it('renders with a success variant', async () => {\n    const page = await newE2EPage();\n    await page.setContent(\n      '<market-inline-status variant=\"success\">This is a market inline status component.</market-inline-status>',\n    );\n\n    const element = await page.find('market-inline-status');\n\n    expect(element).not.toBeNull();\n\n    expect(await element.getProperty('variant')).toBe('success');\n    expect(element.textContent).toBe('This is a market inline status component.');\n  });\n\n  it('renders with a warning variant', async () => {\n    const page = await newE2EPage();\n    await page.setContent(\n      '<market-inline-status variant=\"warning\">This is a market inline status component.</market-inline-status>',\n    );\n\n    const element = await page.find('market-inline-status');\n\n    expect(element).not.toBeNull();\n\n    expect(await element.getProperty('variant')).toBe('warning');\n    expect(element.textContent).toBe('This is a market inline status component.');\n  });\n\n  it('renders with a critical variant', async () => {\n    const page = await newE2EPage();\n    await page.setContent(\n      '<market-inline-status variant=\"critical\">This is a market inline status component.</market-inline-status>',\n    );\n\n    const element = await page.find('market-inline-status');\n\n    expect(element).not.toBeNull();\n\n    expect(await element.getProperty('variant')).toBe('critical');\n    expect(element.textContent).toBe('This is a market inline status component.');\n  });\n});\n"]}