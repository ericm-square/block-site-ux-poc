{"version":3,"file":"market-table.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-table/test/market-table.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EElement } from '@stencil/core/testing';\n\ndescribe('market-table', () => {\n  let page;\n  let rows;\n  let columns;\n\n  describe('basic use case', () => {\n    // no sticky rows or columns, no custom grid\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table>\n          <market-table-row slot=\"header\">\n            <market-table-column name=\"left\">Left</market-table-column>\n            <market-table-column name=\"middle\">Middle</market-table-column>\n            <market-table-column name=\"right\">Right</market-table-column>\n          </market-table-row>\n          <market-table-row>\n            <market-table-cell>Cell 1</market-table-cell>\n            <market-table-cell>Cell 2</market-table-cell>\n            <market-table-cell>Cell 3</market-table-cell>\n          </market-table-row>\n        </market-table>\n      `);\n\n      rows = await page.findAll('market-table-row');\n      columns = await page.findAll('market-table-column');\n    });\n\n    it('a row can be stuck and unstuck', async () => {\n      await rows[1].callMethod('stick', 'top');\n      await page.waitForChanges();\n\n      let slot = await rows[1].getAttribute('slot');\n      expect(slot).toBe('sticky-header');\n\n      await rows[1].callMethod('stick', 'bottom');\n      await page.waitForChanges();\n\n      slot = await rows[1].getAttribute('slot');\n      expect(slot).toBe('sticky-footer');\n\n      await rows[1].callMethod('unstick');\n      await page.waitForChanges();\n\n      slot = await rows[1].getAttribute('slot');\n      expect(slot).toBe(null);\n    });\n\n    it('a column can be stuck and unstuck', async () => {\n      await columns[1].callMethod('stick', 'left');\n      await page.waitForChanges();\n\n      let slot = await columns[1].getAttribute('slot');\n      expect(slot).toBe('sticky-left');\n\n      await columns[1].callMethod('stick', 'right');\n      await page.waitForChanges();\n\n      slot = await columns[1].getAttribute('slot');\n      expect(slot).toBe('sticky-right');\n\n      await columns[1].callMethod('unstick');\n      await page.waitForChanges();\n\n      slot = await columns[1].getAttribute('slot');\n      expect(slot).toBe(null);\n    });\n  });\n\n  describe('when used with a sticky header/footer', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table>\n          <market-table-row slot=\"header\" sticky>\n            <market-table-column name=\"left\">Header 1</market-table-column>\n            <market-table-column name=\"middle\">Header 2</market-table-column>\n            <market-table-column name=\"right\">Header 3</market-table-column>\n          </market-table-row>\n          <market-table-row>\n            <market-table-cell>Cell 1</market-table-cell>\n            <market-table-cell>Cell 2</market-table-cell>\n            <market-table-cell>Cell 3</market-table-cell>\n          </market-table-row>\n          <market-table-row slot=\"footer\" sticky>\n          <market-table-cell>Footer 1</market-table-cell>\n          <market-table-cell>Cell 2</market-table-cell>\n          <market-table-cell>Cell 3</market-table-cell>\n          </market-table-row>\n        </market-table>\n      `);\n\n      rows = await page.findAll('market-table-row');\n      columns = await page.findAll('market-table-column');\n    });\n\n    it('header/footer rows with the sticky attribute get assigned to the correct slot', async () => {\n      const header = rows[0];\n      const footer = rows[2];\n\n      const headerSlot = await header.getAttribute('slot');\n      expect(headerSlot).toBe('sticky-header');\n\n      const footerSlot = await footer.getAttribute('slot');\n      expect(footerSlot).toBe('sticky-footer');\n    });\n\n    it('multiple rows can be stuck at a time', async () => {\n      let headerSlot = await rows[0].getAttribute('slot');\n      expect(headerSlot).toBe('sticky-header');\n\n      let rowSlot = await rows[1].getAttribute('slot');\n      expect(rowSlot).toBe(null);\n\n      await rows[1].callMethod('stick', 'top');\n      await page.waitForChanges();\n\n      headerSlot = await rows[0].getAttribute('slot');\n      expect(headerSlot).toBe('sticky-header');\n\n      rowSlot = await rows[1].getAttribute('slot');\n      expect(rowSlot).toBe('sticky-header');\n    });\n  });\n\n  describe('when used with grid-template-columns', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table style=\"grid-template-columns: 50px 75px 100px;\">\n          <market-table-row slot=\"header\">\n            <market-table-column name=\"left\">Left</market-table-column>\n            <market-table-column name=\"middle\">Middle</market-table-column>\n            <market-table-column name=\"right\">Right</market-table-column>\n          </market-table-row>\n          <market-table-row>\n            <market-table-cell>Cell 1</market-table-cell>\n            <market-table-cell>Cell 2</market-table-cell>\n            <market-table-cell>Cell 3</market-table-cell>\n          </market-table-row>\n        </market-table>\n      `);\n\n      rows = await page.findAll('market-table-row');\n      columns = await page.findAll('market-table-column');\n    });\n\n    it('market-table-rows inherit their gridTemplate value correctly', async () => {\n      const rowComputedStyles = await page.evaluate(() => {\n        const headerRow = document.querySelector('market-table-row');\n        return JSON.parse(JSON.stringify(getComputedStyle(headerRow)));\n      });\n      expect(rowComputedStyles.gridTemplateColumns).toEqual('50px 75px 100px');\n    });\n\n    it('market-table-columns inherit their width correctly', async () => {\n      const colWidths = await Promise.all(\n        columns.map(async (column) => {\n          const width = await column.getProperty('width');\n          return width;\n        }),\n      ).then((output) => {\n        return output;\n      });\n      expect(colWidths).toEqual(['50px', '75px', '100px']);\n    });\n\n    it('market-table-columns remain correct width after a column has been stuck', async () => {\n      await columns[1].callMethod('stick', 'left');\n      await page.waitForChanges();\n\n      const rowComputedStyles = await page.evaluate(() => {\n        const headerRow = document.querySelector('market-table-row');\n        return JSON.parse(JSON.stringify(getComputedStyle(headerRow)));\n      });\n      expect(rowComputedStyles.gridTemplateColumns).toEqual('75px 50px 100px');\n\n      const colWidth = await columns[1].getProperty('width');\n      expect(colWidth).toBe('75px');\n    });\n\n    it('when a column is unstuck, the market-table-area wrapping the empty sticky slot is deactivated', async () => {\n      // helper function for grabbing table properties\n      type TableAreaProps = {\n        stickTo: string;\n        active: boolean;\n      };\n      const getTableAreaProperties = (): Promise<Array<TableAreaProps>> => {\n        return page.evaluate(() => {\n          const row = document.querySelectorAll('market-table-row')[1];\n          const tableAreas = [...row.shadowRoot.querySelectorAll('market-table-area')];\n          return tableAreas.map((tableArea) => {\n            const stickTo = tableArea.getAttribute('stick-to');\n            const active = tableArea.hasAttribute('active');\n            return {\n              stickTo,\n              active,\n            };\n          });\n        });\n      };\n\n      // before sticking anything\n      let tableAreaProperties = await getTableAreaProperties();\n      expect(tableAreaProperties).toEqual([\n        { stickTo: 'left', active: false },\n        { stickTo: null, active: true }, // only default slot/area is active\n        { stickTo: 'right', active: false },\n      ]);\n\n      // sticking middle column to the right\n      await columns[1].callMethod('stick', 'right');\n      await page.waitForChanges();\n\n      tableAreaProperties = await getTableAreaProperties();\n      expect(tableAreaProperties).toEqual([\n        { stickTo: 'left', active: false },\n        { stickTo: null, active: true },\n        { stickTo: 'right', active: true }, // sticky-right area active\n      ]);\n\n      // unsticking previously stuck middle column\n      await columns[1].callMethod('unstick');\n      await page.waitForChanges();\n\n      tableAreaProperties = await getTableAreaProperties();\n      expect(tableAreaProperties).toEqual([\n        { stickTo: 'left', active: false },\n        { stickTo: null, active: true },\n        { stickTo: 'right', active: false }, // sticky-right area inactive\n      ]);\n    });\n  });\n\n  describe('nested rows', () => {\n    let page;\n    let row: E2EElement;\n    let nestedRow: E2EElement;\n\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table>\n          <market-table-row class=\"nonNestedRow\">\n            <market-table-cell>Apple</market-table-cell>\n          </market-table-row>\n          <market-table-row class=\"nestedRow\" leading-indentation=\"1\">\n            <market-table-cell>Fuji</market-table-cell>\n          </market-table-row>\n        </market-table>\n      `);\n\n      row = await page.find('market-table-row.nonNestedRow');\n      nestedRow = await page.find('market-table-row.nestedRow');\n    });\n\n    it('has correct indentation', async () => {\n      const rowFirstCell: E2EElement = await row.find('market-table-cell');\n      const rowFirstCellStyle = await rowFirstCell.getComputedStyle();\n      expect(rowFirstCellStyle.paddingLeft).toEqual('8px');\n\n      const nestedRowFirstCell: E2EElement = await nestedRow.find('market-table-cell');\n      const nestedRowFirstCellStyle = await nestedRowFirstCell.getComputedStyle();\n      expect(nestedRowFirstCellStyle.paddingLeft).toEqual('48px');\n    });\n  });\n\n  describe('nested rows with accordion items', () => {\n    let page;\n    let accordionButton;\n    let topLevelRow1;\n    let topLevelRow2;\n    let nestedRow;\n    let clickEvent;\n\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table>\n          <market-accordion-item>\n            <market-table-row interactive slot=\"custom-trigger\">\n              <market-table-cell>Apple</market-table-cell>\n            </market-table-row>\n            <market-table-row class=\"nestedRow\">\n              <market-table-cell>Fuji</market-table-cell>\n            </market-table-row>\n          </market-accordion-item>\n          <market-table-row interactive class=\"topLevelRow2\">\n            <market-table-cell>Orange</market-table-cell>\n          </market-table-row>\n        </market-table>\n      `);\n\n      topLevelRow1 = await page.find('market-table-row[slot=custom-trigger]');\n      accordionButton = await topLevelRow1.find('[slot=\"nested-row-indicator\"]');\n      topLevelRow2 = await page.find('market-table-row.topLevelRow2');\n      nestedRow = await page.find('market-table-row.nestedRow');\n      clickEvent = await page.spyOnEvent('marketTableRowClicked');\n    });\n\n    it('has indentation on nested row', async () => {\n      await accordionButton.click();\n      expect(clickEvent).toHaveReceivedEventTimes(0);\n\n      const topLevelRow1FirstCell: E2EElement = await topLevelRow1.find('market-table-cell');\n      const topLevel1CellStyle = await topLevelRow1FirstCell.getComputedStyle();\n      expect(topLevel1CellStyle.paddingLeft).toEqual('8px');\n\n      const nestedRowFirstCell: E2EElement = await nestedRow.find('market-table-cell');\n      const nestedCellStyle = await nestedRowFirstCell.getComputedStyle();\n      expect(nestedCellStyle.paddingLeft).toEqual('78px');\n\n      const topLevelRow2FirstCell: E2EElement = await topLevelRow2.find('market-table-cell');\n      const topLevel2CellStyle = await topLevelRow2FirstCell.getComputedStyle();\n      expect(topLevel2CellStyle.paddingLeft).toEqual('38px');\n    });\n  });\n});\n"]}