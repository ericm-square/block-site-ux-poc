{"version":3,"file":"market-tooltip.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-tooltip/test/market-tooltip.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('market-tooltip', () => {\n  it('renders', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-tooltip>\n        <span slot=\"content\">Lorem ipsum dolor sit amet <a href=\"#\">Link</a></span>\n      </market-tooltip>\n    `);\n\n    const element = await page.find('market-tooltip');\n    expect(element).toHaveAttribute('hydrated');\n  });\n\n  it(\"can't be opened when disabled\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-tooltip interaction=\"click\" disabled>\n        <span slot=\"trigger\">Trigger text</span>\n        <span slot=\"content\">Lorem ipsum dolor sit amet <a href=\"#\">Link</a></span>\n      </market-tooltip>\n    `);\n\n    const tooltip = await page.find('market-tooltip');\n    const trigger = await tooltip.find('[slot=\"trigger\"]');\n    const popover = await tooltip.find('pierce/market-dropdown [slot=\"popover\"]');\n\n    let tooltipVisibility = await popover.isVisible();\n    expect(tooltipVisibility).toBe(false);\n\n    await trigger.click();\n\n    tooltipVisibility = await popover.isVisible();\n    expect(tooltipVisibility).toBe(false);\n  });\n\n  it('mousing over a closed tooltip should open it & mousing out should close it', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-tooltip>\n        <span slot=\"trigger\">Trigger text</span>\n        <span slot=\"content\">Lorem ipsum dolor sit amet <a href=\"#\">Link</a></span>\n      </market-tooltip>\n      <div>Some other element</div>\n    `);\n\n    const tooltip = await page.find('market-tooltip');\n    const trigger = await tooltip.find('[slot=\"trigger\"]');\n    const popover = await tooltip.find('pierce/market-dropdown [slot=\"popover\"]');\n    const otherElement = await page.find('div');\n\n    let tooltipVisibility = await popover.isVisible();\n    expect(tooltipVisibility).toBe(false);\n\n    await trigger.hover(); // hovering on tooltip trigger\n\n    tooltipVisibility = await popover.isVisible();\n    expect(tooltipVisibility).toBe(true);\n\n    await otherElement.hover(); // hovering on some other element\n\n    tooltipVisibility = await popover.isVisible();\n    expect(tooltipVisibility).toBe(false);\n  });\n\n  it('should open and close via component methods', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-tooltip>\n        <span slot=\"trigger\">Trigger text</span>\n        <span slot=\"content\">Lorem ipsum dolor sit amet <a href=\"#\">Link</a></span>\n      </market-tooltip>\n      <div>Some other element</div>\n    `);\n\n    const tooltip = await page.find('market-tooltip');\n    const popover = await tooltip.find('pierce/market-dropdown [slot=\"popover\"]');\n\n    let tooltipVisibility = await popover.isVisible();\n    expect(tooltipVisibility).toBe(false);\n\n    tooltip.callMethod('openTooltip');\n\n    tooltipVisibility = await popover.isVisible();\n    expect(tooltipVisibility).toBe(true);\n\n    tooltip.callMethod('closeTooltip');\n\n    tooltipVisibility = await popover.isVisible();\n    expect(tooltipVisibility).toBe(false);\n  });\n});\n"]}