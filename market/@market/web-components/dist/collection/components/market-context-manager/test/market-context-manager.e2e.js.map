{"version":3,"file":"market-context-manager.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-context-manager/test/market-context-manager.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  CORE_ANIMATION_ENTER_TRANSITION_MODERATE_SPEED_DURATION,\n  CORE_ANIMATION_EXIT_TRANSITION_MODERATE_SPEED_DURATION,\n} from '@market/market-theme/js/cjs/index.js';\nimport { newE2EPage } from '@stencil/core/testing';\n\ndescribe('market-context-manager', () => {\n  describe('scroll blocking behavior', () => {\n    /**\n     * page scroll blocking implemented using global CSS: src/styles/modals.css\n     */\n    it('only blocks scrolling if there is a visible veil', async () => {\n      const page = await newE2EPage();\n      await page.setContent(`\n        <market-modal-partial id=\"modalPartial\">\n          Displays with veil, blocks scrolling\n        </market-modal-partial>\n        <market-blade id=\"blade\">\n          Does not display with veil, does not block scrolling\n        </market-blade>\n        <market-context-manager></market-context-manager>\n      `);\n\n      const contextManager = await page.find('market-context-manager');\n      const contextManagerElemHandle = await page.$('market-context-manager');\n      const modalPartialElemHandle = await page.$('#modalPartial');\n      const bladeElemHandle = await page.$('#blade');\n\n      const html = await page.find('html');\n      let htmlStyle = await html.getComputedStyle();\n      const originalOverflowStyle = htmlStyle.getPropertyValue('overflow');\n\n      // open market-modal-partial: scroll blocking\n      await page.evaluate(\n        (contextManager, modalPartial: HTMLMarketModalPartialElement) => {\n          contextManager.open(modalPartial, true);\n        },\n        contextManagerElemHandle,\n        modalPartialElemHandle,\n      );\n      await page.waitForChanges();\n      expect(contextManager).toHaveAttribute('active');\n\n      const context = await page.find('market-context');\n      const animationEnterDuration = await context.getProperty('animationEnterDuration');\n      const animationExitDuration = await context.getProperty('animationExitDuration');\n\n      await page.waitForTimeout(animationEnterDuration);\n      htmlStyle = await html.getComputedStyle();\n      expect(htmlStyle.getPropertyValue('overflow')).toBe('hidden');\n\n      // close market-modal-partial: no scroll blocking\n      await page.evaluate(\n        (contextManager, modalPartial: HTMLMarketModalPartialElement) => {\n          contextManager.close(modalPartial.dialogID);\n        },\n        contextManagerElemHandle,\n        modalPartialElemHandle,\n      );\n      await page.waitForChanges();\n      await page.waitForTimeout(animationExitDuration * 2);\n      htmlStyle = await html.getComputedStyle();\n      expect(htmlStyle.getPropertyValue('overflow')).toBe(originalOverflowStyle);\n\n      // open market-blade: no scroll blocking\n      await page.evaluate(\n        (contextManager, blade: HTMLMarketBladeElement) => {\n          contextManager.open(blade, true);\n        },\n        contextManagerElemHandle,\n        bladeElemHandle,\n      );\n      await page.waitForChanges();\n      await page.waitForTimeout(animationEnterDuration);\n      htmlStyle = await html.getComputedStyle();\n      expect(htmlStyle.getPropertyValue('overflow')).toBe(originalOverflowStyle);\n\n      // open market-modal-partial on top of market-blade: scroll blocking\n      await page.evaluate(\n        (contextManager, modalPartial: HTMLMarketModalPartialElement) => {\n          contextManager.open(modalPartial, true);\n        },\n        contextManagerElemHandle,\n        modalPartialElemHandle,\n      );\n      await page.waitForChanges();\n      await page.waitForTimeout(animationEnterDuration);\n      htmlStyle = await html.getComputedStyle();\n      expect(htmlStyle.getPropertyValue('overflow')).toBe('hidden');\n\n      // close market-modal-partial: no scroll blocking\n      await page.evaluate(\n        (contextManager, modalPartial: HTMLMarketModalPartialElement) => {\n          contextManager.close(modalPartial.dialogID);\n        },\n        contextManagerElemHandle,\n        modalPartialElemHandle,\n      );\n      await page.waitForChanges();\n      await page.waitForTimeout(animationExitDuration * 2);\n      htmlStyle = await html.getComputedStyle();\n      expect(htmlStyle.getPropertyValue('overflow')).toBe(originalOverflowStyle);\n\n      // close blade: no scroll blocking\n      await page.evaluate(\n        (contextManager, blade: HTMLMarketBladeElement) => {\n          contextManager.close(blade.dialogID);\n        },\n        contextManagerElemHandle,\n        bladeElemHandle,\n      );\n      await page.waitForChanges();\n      await page.waitForTimeout(animationExitDuration * 2);\n      htmlStyle = await html.getComputedStyle();\n      expect(htmlStyle.getPropertyValue('overflow')).toBe(originalOverflowStyle);\n    });\n\n    /**\n     * This test recreates the conditions of a bug described in this Slack thread:\n     * https://square.slack.com/archives/CTU91JFU0/p1671557416571969\n     */\n    it('resets page scroll on deactivation', async () => {\n      const page = await newE2EPage();\n      await page.setContent(`\n        <market-dialog id=\"dialogOne\">\n          Hello world!\n          <market-button>Close</market-button>\n        </market-dialog>\n        <market-dialog id=\"dialogTwo\">\n          Hello world!\n          <market-button>Close</market-button>\n        </market-dialog>\n        <market-context-manager></market-context-manager>\n      `);\n\n      const contextManager = await page.find('market-context-manager');\n      const contextManagerElemHandle = await page.$('market-context-manager');\n      const dialogOneElemHandle = await page.$('#dialogOne');\n      const dialogTwoElemHandle = await page.$('#dialogTwo');\n\n      const html = await page.find('html');\n      let htmlStyle = await html.getComputedStyle();\n      const originalOverflowStyle = htmlStyle.getPropertyValue('overflow');\n      await page.evaluate(\n        (contextManager, dialog: HTMLMarketDialogElement) => {\n          contextManager.open(dialog, true);\n        },\n        contextManagerElemHandle,\n        dialogOneElemHandle,\n      );\n      await page.waitForChanges();\n      expect(contextManager).toHaveAttribute('active');\n\n      const context = await page.find('market-context');\n      const animationEnterDuration = await context.getProperty('animationEnterDuration');\n      const animationExitDuration = await context.getProperty('animationExitDuration');\n\n      await page.waitForTimeout(animationEnterDuration);\n      htmlStyle = await html.getComputedStyle();\n      expect(htmlStyle.getPropertyValue('overflow')).toBe('hidden');\n\n      await page.evaluate(\n        (contextManager, dialog: HTMLMarketDialogElement) => {\n          contextManager.close(dialog.dialogID);\n        },\n        contextManagerElemHandle,\n        dialogOneElemHandle,\n      );\n\n      await page.evaluate(\n        (contextManager, dialog: HTMLMarketDialogElement) => {\n          contextManager.open(dialog, true);\n        },\n        contextManagerElemHandle,\n        dialogTwoElemHandle,\n      );\n      await page.waitForChanges();\n      await page.waitForTimeout(animationEnterDuration);\n\n      htmlStyle = await html.getComputedStyle();\n      expect(htmlStyle.getPropertyValue('overflow')).toBe('hidden');\n\n      await page.evaluate(\n        (contextManager, dialog: HTMLMarketDialogElement) => {\n          contextManager.close(dialog.dialogID);\n        },\n        contextManagerElemHandle,\n        dialogTwoElemHandle,\n      );\n      await page.waitForChanges();\n      await page.waitForTimeout(animationExitDuration * 2);\n\n      htmlStyle = await html.getComputedStyle();\n      expect(htmlStyle.getPropertyValue('overflow')).toBe(originalOverflowStyle);\n    });\n  });\n\n  // TODO: figure out why this test doesn't pass and reenable it\n  it.skip('dismisses the current modal when the esc key is pressed', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-dialog>\n        Hello world!\n        <market-button>Close</market-button>\n      </market-dialog>\n      <market-context-manager></market-context-manager>\n    `);\n\n    const contextManager = await page.find('market-context-manager');\n    expect(contextManager).not.toHaveAttribute('active');\n\n    // We use `page.$` instead of `page.find` because we need an\n    // ElementHandle object not an E2EEelement for `page.evaluate`\n    const contextManagerElemHandle = await page.$('market-context-manager');\n    const dialogElemHandle = await page.$('market-dialog');\n\n    // open dialog in context manager\n    await page.evaluate(\n      (contextManager, dialog) => {\n        contextManager.open(dialog);\n      },\n      contextManagerElemHandle,\n      dialogElemHandle,\n    );\n    await page.waitForChanges();\n    expect(contextManager).toHaveAttribute('active');\n\n    // press esc key\n    await page.keyboard.press('Escape');\n    await page.waitForChanges();\n    expect(contextManager).not.toHaveAttribute('active'); // not sure why this fails...\n  });\n\n  // TODO: figure out why this test doesn't pass and reenable it\n  it.skip('dismisses the current modal when the veil is clicked', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-dialog>\n        Hello world!\n        <market-button>Close</market-button>\n      </market-dialog>\n      <span>other element</span>\n      <market-context-manager></market-context-manager>\n    `);\n\n    const contextManager = await page.find('market-context-manager');\n    expect(contextManager).not.toHaveAttribute('active');\n\n    // We use `page.$` instead of `page.find` because we need an\n    // ElementHandle object not an E2EEelement for `page.evaluate`\n    const contextManagerElemHandle = await page.$('market-context-manager');\n    const dialogElemHandle = await page.$('market-dialog');\n\n    // open dialog in context manager\n    await page.evaluate(\n      (contextManager, dialog) => {\n        contextManager.open(dialog);\n      },\n      contextManagerElemHandle,\n      dialogElemHandle,\n    );\n    await page.waitForChanges();\n    expect(contextManager).toHaveAttribute('active');\n\n    // clicking on \"veil\" (aka visible market-context)\n    const context = await page.find('market-context');\n    await context.click();\n    await page.waitForChanges();\n    expect(contextManager).not.toHaveAttribute('active'); // not sure why this fails...\n  });\n\n  // TODO: Make this test not flaky, then reenable it\n  it.skip('opens and closes correctly when navigating between modals', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-modal-partial class=\"modal1\">\n        <market-header>\n          <h2>First Modal</h2>\n          <market-button rank=\"primary\" slot=\"actions\">\n            Go to the other modal\n          </market-button>\n        </market-header>\n        <section class=\"main\">\n          <p>Here's a modal!</p>\n        </section>\n      </market-modal-partial>\n      <market-modal-partial class=\"modal2\">\n        <market-header>\n          <h2>Second Modal</h2>\n        </market-header>\n        <section class=\"main\">\n          <p>Here's a modal!</p>\n        </section>\n      </market-modal-partial>\n      <market-context-manager></market-context-manager>\n    </div>\n    `);\n\n    const contextManager = await page.find('market-context-manager');\n    expect(contextManager).not.toHaveAttribute('active');\n\n    // We use `page.$` instead of `page.find` because we need an\n    // ElementHandle object not an E2EEelement for `page.evaluate`\n    const contextManagerElemHandle = await page.$('market-context-manager');\n    const modal1ElemHandle = await page.$('.modal1');\n\n    // Open first modal in context manager\n    await page.evaluate(\n      (contextManager, modal1: HTMLMarketModalPartialElement) => {\n        contextManager.open(modal1);\n      },\n      contextManagerElemHandle,\n      modal1ElemHandle,\n    );\n\n    const modal1Button = await page.$('.modal1 market-button');\n    const modal2ElemHandle = await page.$('.modal2');\n\n    // Attach event listener to button in first modal\n    await page.evaluate(\n      (modal1Button, contextManager, modal1: HTMLMarketModalPartialElement, modal2: HTMLMarketModalPartialElement) => {\n        modal1Button.addEventListener('click', async () => {\n          // open second modal\n          // NOTE: We're opening before closing here to test that the right\n          // modal ends up open at the end, regardless of open/close order\n          contextManager.open(modal2);\n          // close first modal\n          await modal1.dismiss();\n        });\n      },\n      modal1Button,\n      contextManagerElemHandle,\n      modal1ElemHandle,\n      modal2ElemHandle,\n    );\n\n    await page.waitForChanges();\n\n    const enterAnimationDurationWithDelay = CORE_ANIMATION_ENTER_TRANSITION_MODERATE_SPEED_DURATION * 1.25;\n    await page.waitForTimeout(enterAnimationDurationWithDelay);\n\n    // Test that context manager is active, there is only one modal context\n    // and it contains the first modal\n    expect(contextManager).toHaveAttribute('active');\n    let currentContexts = await contextManager.findAll('market-context');\n    expect(currentContexts).toHaveLength(1);\n    let currentContext = currentContexts[0];\n    let currentModals = await currentContext.findAll('market-modal');\n    expect(currentModals).toHaveLength(1);\n    let currentModal = currentModals[0];\n    expect(currentModal).toEqualAttribute('class', 'modal1');\n\n    const contentsChangedSpy = await page.spyOnEvent('marketContextContentsChanged');\n    await modal1Button.click();\n    await page.waitForChanges();\n\n    const exitAnimationDurationWithDelay = CORE_ANIMATION_EXIT_TRANSITION_MODERATE_SPEED_DURATION * 1.25;\n    await page.waitForTimeout(exitAnimationDurationWithDelay);\n\n    // Test that context manager is still active, there is only one modal context\n    // and it contains the second modal\n    expect(contentsChangedSpy).toHaveReceivedEventTimes(2);\n    expect(contextManager).toHaveAttribute('active');\n    currentContexts = await contextManager.findAll('market-context');\n    expect(currentContexts).toHaveLength(1);\n    currentContext = currentContexts[0];\n    currentModals = await currentContext.findAll('market-modal');\n    expect(currentModals).toHaveLength(1);\n    currentModal = currentModals[0];\n    expect(currentModal).toEqualAttribute('class', 'modal2');\n  });\n});\n"]}