{"version":3,"file":"market-list.reorderable.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-list/test/market-list.reorderable.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\nimport { drag } from '../../../utils/e2e/drag';\n\ndescribe('market-list: reorderable functionality', () => {\n  let page: E2EPage;\n\n  let list1: E2EElement;\n  let list1Rows: E2EElement[];\n  let list1ReorderedSpy: EventSpy;\n\n  let list2: E2EElement;\n  let list2Rows: E2EElement[];\n  let list2ReorderedSpy: EventSpy;\n\n  let draggedRowNode: HTMLMarketRowElement;\n\n  // magic numbers to assist with mouse manipulation\n  const ROW_H = 55;\n  const X_LIST_1 = 15;\n  const X_LIST_2 = 215;\n  const Y_ROW_2 = 85;\n  const Y_ROW_3 = 140;\n  const Y_ROW_4 = 195;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n\n    // absolutely position elements to simplify mouse manipulation\n    await page.setContent(`\n      <market-list id=\"list-1\" style=\"position: absolute; width: 200px; top: 0; left: 0;\">\n        <market-row drag-handle-position=\"leading\">Row 1.1</market-row>\n        <market-row drag-handle-position=\"leading\">Row 1.2</market-row>\n        <market-row drag-handle-position=\"leading\">Row 1.3</market-row>\n        <market-row drag-handle-position=\"leading\">Row 1.4</market-row>\n        <market-row drag-handle-position=\"leading\">Row 1.5</market-row>\n      </market-list>\n      <market-list id=\"list-2\" style=\"position: absolute; width: 200px; top: 0; left: 200px;\">\n        <market-row drag-handle-position=\"leading\">Row 2.1</market-row>\n        <market-row drag-handle-position=\"leading\">Row 2.2</market-row>\n        <market-row drag-handle-position=\"leading\">Row 2.3</market-row>\n        <market-row drag-handle-position=\"leading\">Row 2.4</market-row>\n        <market-row drag-handle-position=\"leading\">Row 2.5</market-row>\n      </market-list>\n    `);\n\n    list1 = await page.find('#list-1');\n    list1Rows = await page.findAll('#list-1 > market-row');\n    list1ReorderedSpy = await list1.spyOnEvent('marketListItemsReordered');\n\n    list2 = await page.find('#list-2');\n    list2Rows = await page.findAll('#list-2 > market-row');\n    list2ReorderedSpy = await list2.spyOnEvent('marketListItemsReordered');\n\n    draggedRowNode = (await page.$eval('#list-1 > market-row:nth-child(3)', (el) => el)) as HTMLMarketRowElement;\n  });\n\n  describe('when both lists are NOT reorderable (off)', () => {\n    it('does NOT set the list rows to be drag enabled', () => {\n      list1Rows.forEach(async (row) => {\n        expect(await row.getProperty('dragEnabled')).toEqual(false);\n      });\n      list2Rows.forEach(async (row) => {\n        expect(await row.getProperty('dragEnabled')).toEqual(false);\n      });\n    });\n  });\n\n  describe('when both lists are internally reorderable', () => {\n    beforeEach(async () => {\n      list1.setProperty('reorderable', 'internal');\n      list2.setProperty('reorderable', 'internal');\n      await page.waitForChanges();\n    });\n\n    it('sets the list rows to be drag enabled', () => {\n      list1Rows.forEach(async (row) => {\n        expect(await row.getProperty('dragEnabled')).toEqual(true);\n      });\n      list2Rows.forEach(async (row) => {\n        expect(await row.getProperty('dragEnabled')).toEqual(true);\n      });\n    });\n\n    describe('when a row is dragged upwards', () => {\n      beforeEach(async () => {\n        // drag 3rd row between 1st and 2nd rows\n        const from = { x: X_LIST_1, y: Y_ROW_3 };\n        const to = { x: X_LIST_1, y: Y_ROW_2 - ROW_H / 2 };\n        await drag(page, from, to);\n        list1Rows = await page.findAll('#list-1 > market-row');\n      });\n\n      it('fires the reordered event', () => {\n        expect(list1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(list1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: 1,\n        });\n      });\n\n      it('moves the row to proper position', () => {\n        expect(list1Rows.map((row) => row.innerText)).toEqual(['Row 1.1', 'Row 1.3', 'Row 1.2', 'Row 1.4', 'Row 1.5']);\n      });\n    });\n\n    describe('when a row is dragged downwards', () => {\n      beforeEach(async () => {\n        // drag 3rd row between 4th and 5th rows\n        const from = { x: X_LIST_1, y: Y_ROW_3 };\n        const to = { x: X_LIST_1, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        list1Rows = await page.findAll('#list-1 > market-row');\n      });\n\n      it('fires the reordered event', () => {\n        expect(list1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(list1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: 3,\n        });\n      });\n\n      it('moves the row to the proper position', () => {\n        expect(list1Rows.map((row) => row.innerText)).toEqual(['Row 1.1', 'Row 1.2', 'Row 1.4', 'Row 1.3', 'Row 1.5']);\n      });\n    });\n\n    describe('when preventDefault is called on the reordered event', () => {\n      beforeEach(async () => {\n        await page.$eval('#list-1', (el: HTMLMarketListElement) => {\n          el.addEventListener('marketListItemsReordered', (e: CustomEvent) => {\n            e.preventDefault();\n          });\n        });\n        // drag 3rd row between 1st and 2nd rows\n        const from = { x: X_LIST_1, y: Y_ROW_3 };\n        const to = { x: X_LIST_1, y: Y_ROW_2 - ROW_H / 2 };\n        await drag(page, from, to);\n        list1Rows = await page.findAll('#list-1 > market-row');\n      });\n\n      it('fires the reordered event', () => {\n        expect(list1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(list1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: 1,\n        });\n      });\n\n      it('does NOT move the row', () => {\n        expect(list1Rows.map((row) => row.innerText)).toEqual(['Row 1.1', 'Row 1.2', 'Row 1.3', 'Row 1.4', 'Row 1.5']);\n      });\n    });\n\n    describe('when a row is dragged from one list to the other', () => {\n      beforeEach(async () => {\n        // drag 3rd row in list 1 between 4th and 5th rows in list 2\n        const from = { x: X_LIST_1, y: Y_ROW_3 };\n        const to = { x: X_LIST_2, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        list1Rows = await page.findAll('#list-1 > market-row');\n        list2Rows = await page.findAll('#list-2 > market-row');\n      });\n\n      it('does NOT fire the reordered event on either list', () => {\n        expect(list1ReorderedSpy).not.toHaveReceivedEvent();\n        expect(list2ReorderedSpy).not.toHaveReceivedEvent();\n      });\n\n      it('does NOT move the row', () => {\n        expect(list1Rows.map((row) => row.innerText)).toEqual(['Row 1.1', 'Row 1.2', 'Row 1.3', 'Row 1.4', 'Row 1.5']);\n        expect(list2Rows.map((row) => row.innerText)).toEqual(['Row 2.1', 'Row 2.2', 'Row 2.3', 'Row 2.4', 'Row 2.5']);\n      });\n    });\n  });\n\n  describe('when one list is internally reorderable and the other is externally reorderable', () => {\n    beforeEach(async () => {\n      list1.setProperty('reorderable', 'internal');\n      list2.setProperty('reorderable', 'external');\n      await page.waitForChanges();\n    });\n\n    describe('when a row is dragged from the internal list to the external list', () => {\n      beforeEach(async () => {\n        // drag 3rd row in list 1 between 4th and 5th rows in list 2\n        const from = { x: X_LIST_1, y: Y_ROW_3 };\n        const to = { x: X_LIST_2, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        list1Rows = await page.findAll('#list-1 > market-row');\n        list2Rows = await page.findAll('#list-2 > market-row');\n      });\n\n      it('does NOT fire the reordered event on either list', () => {\n        expect(list1ReorderedSpy).not.toHaveReceivedEvent();\n        expect(list2ReorderedSpy).not.toHaveReceivedEvent();\n      });\n\n      it('does NOT remove the row from the internal list', () => {\n        expect(list1Rows.map((row) => row.innerText)).toEqual(['Row 1.1', 'Row 1.2', 'Row 1.3', 'Row 1.4', 'Row 1.5']);\n      });\n\n      it('does NOT add the row to the external list', () => {\n        expect(list2Rows.map((row) => row.innerText)).toEqual(['Row 2.1', 'Row 2.2', 'Row 2.3', 'Row 2.4', 'Row 2.5']);\n      });\n    });\n\n    describe('when a row is dragged from the external list to the internal list', () => {\n      beforeEach(async () => {\n        // drag 3rd row in list 2 between 4th and 5th rows in list 1\n        const from = { x: X_LIST_2, y: Y_ROW_3 };\n        const to = { x: X_LIST_1, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        list1Rows = await page.findAll('#list-1 > market-row');\n        list2Rows = await page.findAll('#list-2 > market-row');\n      });\n\n      it('does NOT fire the reordered event on either list', () => {\n        expect(list1ReorderedSpy).not.toHaveReceivedEvent();\n        expect(list2ReorderedSpy).not.toHaveReceivedEvent();\n      });\n\n      it('does NOT add the row to the internal list', () => {\n        expect(list1Rows.map((row) => row.innerText)).toEqual(['Row 1.1', 'Row 1.2', 'Row 1.3', 'Row 1.4', 'Row 1.5']);\n      });\n\n      it('does NOT remove the row from the external list', () => {\n        expect(list2Rows.map((row) => row.innerText)).toEqual(['Row 2.1', 'Row 2.2', 'Row 2.3', 'Row 2.4', 'Row 2.5']);\n      });\n    });\n  });\n\n  describe('when both lists are externally reorderable', () => {\n    beforeEach(async () => {\n      list1.setProperty('reorderable', 'external');\n      list2.setProperty('reorderable', 'external');\n      await page.waitForChanges();\n    });\n\n    it('sets the list rows to be drag enabled', () => {\n      list1Rows.forEach(async (row) => {\n        expect(await row.getProperty('dragEnabled')).toEqual(true);\n      });\n      list2Rows.forEach(async (row) => {\n        expect(await row.getProperty('dragEnabled')).toEqual(true);\n      });\n    });\n\n    describe('when a row is dragged from the first list to the second', () => {\n      beforeEach(async () => {\n        // drag 3rd row in list 1 between 4th and 5th rows in list 2\n        const from = { x: X_LIST_1, y: Y_ROW_3 };\n        const to = { x: X_LIST_2, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        list1Rows = await page.findAll('#list-1 > market-row');\n        list2Rows = await page.findAll('#list-2 > market-row');\n      });\n\n      it('fires the reordered event on the list the row exited', () => {\n        expect(list1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(list1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: -1,\n        });\n      });\n\n      it('fires the reordered event on the list the row entered', () => {\n        expect(list2ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(list2ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: -1,\n          newIndex: 4,\n        });\n      });\n\n      it('removes the row from the first list', () => {\n        expect(list1Rows.map((row) => row.innerText)).toEqual(['Row 1.1', 'Row 1.2', 'Row 1.4', 'Row 1.5']);\n      });\n\n      it('adds the row to the second list in the proper position', () => {\n        expect(list2Rows.map((row) => row.innerText)).toEqual([\n          'Row 2.1',\n          'Row 2.2',\n          'Row 2.3',\n          'Row 2.4',\n          'Row 1.3',\n          'Row 2.5',\n        ]);\n      });\n    });\n\n    describe('when a row is dragged from the second list to the first', () => {\n      beforeEach(async () => {\n        // drag 3rd row in list 2 between 4th and 5th rows in list 1\n        const from = { x: X_LIST_2, y: Y_ROW_3 };\n        const to = { x: X_LIST_1, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        list1Rows = await page.findAll('#list-1 > market-row');\n        list2Rows = await page.findAll('#list-2 > market-row');\n      });\n\n      it('fires the reordered event on the list the row exited', () => {\n        expect(list2ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(list2ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: -1,\n        });\n      });\n\n      it('fires the reordered event on the list the row entered', () => {\n        expect(list1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(list1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: -1,\n          newIndex: 4,\n        });\n      });\n\n      it('removes the row from the second list', () => {\n        expect(list2Rows.map((row) => row.innerText)).toEqual(['Row 2.1', 'Row 2.2', 'Row 2.4', 'Row 2.5']);\n      });\n\n      it('adds the row to the first list in the proper position', () => {\n        expect(list1Rows.map((row) => row.innerText)).toEqual([\n          'Row 1.1',\n          'Row 1.2',\n          'Row 1.3',\n          'Row 1.4',\n          'Row 2.3',\n          'Row 1.5',\n        ]);\n      });\n    });\n\n    describe('when preventDefault is called on the first list reordered event', () => {\n      beforeEach(async () => {\n        await page.$eval('#list-1', (el: HTMLMarketListElement) => {\n          el.addEventListener('marketListItemsReordered', (e: CustomEvent) => {\n            e.preventDefault();\n          });\n        });\n        // drag 3rd row in list 1 between 4th and 5th rows in list 2\n        const from = { x: X_LIST_1, y: Y_ROW_3 };\n        const to = { x: X_LIST_2, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        list1Rows = await page.findAll('#list-1 > market-row');\n        list2Rows = await page.findAll('#list-2 > market-row');\n      });\n\n      it('fires the reordered event on the list the row exited', () => {\n        expect(list1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(list1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: -1,\n        });\n      });\n\n      it('does NOT fire the reordered event on the list the row entered', () => {\n        expect(list2ReorderedSpy).not.toHaveReceivedEvent();\n      });\n\n      it('does NOT remove the row from the first list', () => {\n        expect(list1Rows.map((row) => row.innerText)).toEqual(['Row 1.1', 'Row 1.2', 'Row 1.3', 'Row 1.4', 'Row 1.5']);\n      });\n\n      it('does NOT add the row to the second list', () => {\n        expect(list2Rows.map((row) => row.innerText)).toEqual(['Row 2.1', 'Row 2.2', 'Row 2.3', 'Row 2.4', 'Row 2.5']);\n      });\n    });\n\n    describe('when preventDefault is called on the second list reordered event', () => {\n      beforeEach(async () => {\n        await page.$eval('#list-2', (el: HTMLMarketListElement) => {\n          el.addEventListener('marketListItemsReordered', (e: CustomEvent) => {\n            e.preventDefault();\n          });\n        });\n        // drag 3rd row in list 1 between 4th and 5th rows in list 2\n        const from = { x: X_LIST_1, y: Y_ROW_3 };\n        const to = { x: X_LIST_2, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        list1Rows = await page.findAll('#list-1 > market-row');\n        list2Rows = await page.findAll('#list-2 > market-row');\n      });\n\n      it('fires the reordered event on the list the row exited', () => {\n        expect(list1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(list1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: -1,\n        });\n      });\n\n      it('fires the reordered event on the list the row entered', () => {\n        expect(list2ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(list2ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: -1,\n          newIndex: 4,\n        });\n      });\n\n      it('does NOT remove the row from the first list', () => {\n        expect(list1Rows.map((row) => row.innerText)).toEqual(['Row 1.1', 'Row 1.2', 'Row 1.3', 'Row 1.4', 'Row 1.5']);\n      });\n\n      it('does NOT add the row to the second list', () => {\n        expect(list2Rows.map((row) => row.innerText)).toEqual(['Row 2.1', 'Row 2.2', 'Row 2.3', 'Row 2.4', 'Row 2.5']);\n      });\n    });\n  });\n\n  describe('when the list is reorderable in framework mode', () => {\n    let rowLabels: E2EElement[];\n\n    beforeEach(async () => {\n      page = await newE2EPage();\n\n      // absolutely position elements to simplify mouse manipulation\n      await page.setContent(`\n        <market-list\n          id=\"list-1\"\n          reorderable=\"internal\"\n          reorder-mode=\"framework\"\n          style=\"position: absolute; width: 200px; top: 0; left: 0;\"\n        >\n          <market-row drag-handle-position=\"leading\">\n            <label slot=\"label\">Row 1</label>\n          </market-row>\n          <market-row drag-handle-position=\"leading\">\n            <label slot=\"label\">Row 2</label>\n          </market-row>\n          <market-row drag-handle-position=\"leading\" class=\"drag-me\">\n            <label slot=\"label\">Row 3</label>\n          </market-row>\n          <market-row drag-handle-position=\"leading\">\n            <label slot=\"label\">Row 4</label>\n          </market-row>\n          <market-row drag-handle-position=\"leading\">\n            <label slot=\"label\">Row 5</label>\n          </market-row>\n        </market-list>\n      `);\n\n      list1 = await page.find('#list-1');\n      list1ReorderedSpy = await list1.spyOnEvent('marketListItemsReordered');\n      draggedRowNode = (await page.$eval('#list-1 market-row:nth-child(3)', (el) => el)) as HTMLMarketRowElement;\n    });\n\n    describe('when a row is dragged upwards', () => {\n      beforeEach(async () => {\n        // drag 3rd row between 1st and 2nd rows\n        const from = { x: X_LIST_1, y: Y_ROW_3 };\n        const to = { x: X_LIST_1, y: Y_ROW_2 - ROW_H / 2 };\n        await drag(page, from, to);\n        rowLabels = await page.findAll('#list-1 > market-row > label');\n      });\n\n      it('fires the reordered event', () => {\n        expect(list1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(list1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: 1,\n        });\n      });\n\n      it('returns the row to its original position (for the framework to take over)', () => {\n        expect(rowLabels.map((row) => row.innerText)).toEqual(['Row 1', 'Row 2', 'Row 3', 'Row 4', 'Row 5']);\n      });\n    });\n\n    describe('when a row is dragged downwards', () => {\n      beforeEach(async () => {\n        // drag 3rd row between 4th and 5th rows\n        const from = { x: X_LIST_1, y: Y_ROW_3 };\n        const to = { x: X_LIST_1, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        rowLabels = await page.findAll('#list-1 > market-row > label');\n      });\n\n      it('fires the reordered event', () => {\n        expect(list1ReorderedSpy).toHaveReceivedEventTimes(1);\n        expect(list1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: 3,\n        });\n      });\n\n      it('returns the row to its original position (for the framework to take over)', () => {\n        expect(rowLabels.map((row) => row.innerText)).toEqual(['Row 1', 'Row 2', 'Row 3', 'Row 4', 'Row 5']);\n      });\n    });\n  });\n\n  describe('when the list rows have nested rows', () => {\n    let rowLabels: E2EElement[];\n\n    beforeEach(async () => {\n      page = await newE2EPage();\n\n      // absolutely position elements to simplify mouse manipulation\n      await page.setContent(`\n        <market-list reorderable=\"internal\" id=\"list-1\" style=\"position: absolute; width: 200px; top: 0; left: 0;\">\n          <market-row drag-handle-position=\"leading\">\n            <label slot=\"label\">Row 1</label>\n            <market-dropdown slot=\"trailing-accessory\">\n              <span slot=\"trigger\">More</span>\n              <market-popover slot=\"popover\">\n                <market-list>\n                  <market-row>Nested Row 1</market-row>\n                  <market-row>Nested Row 2</market-row>\n                  <market-row>Nested Row 3</market-row>\n                </market-list>\n              </market-popover>\n            </market-dropdown>\n          </market-row>\n          <market-row drag-handle-position=\"leading\">\n            <label slot=\"label\">Row 2</label>\n            <market-dropdown slot=\"trailing-accessory\">\n              <span slot=\"trigger\">More</span>\n              <market-popover slot=\"popover\">\n                <market-list>\n                  <market-row>Nested Row 1</market-row>\n                  <market-row>Nested Row 2</market-row>\n                  <market-row>Nested Row 3</market-row>\n                </market-list>\n              </market-popover>\n            </market-dropdown>\n          </market-row>\n          <market-row drag-handle-position=\"leading\" class=\"drag-me\">\n            <label slot=\"label\">Row 3</label>\n            <market-dropdown slot=\"trailing-accessory\">\n              <span slot=\"trigger\">More</span>\n              <market-popover slot=\"popover\">\n                <market-list>\n                  <market-row>Nested Row 1</market-row>\n                  <market-row>Nested Row 2</market-row>\n                  <market-row>Nested Row 3</market-row>\n                </market-list>\n              </market-popover>\n            </market-dropdown>\n          </market-row>\n          <market-row drag-handle-position=\"leading\">\n            <label slot=\"label\">Row 4</label>\n            <market-dropdown slot=\"trailing-accessory\">\n              <span slot=\"trigger\">More</span>\n              <market-popover slot=\"popover\">\n                <market-list>\n                  <market-row>Nested Row 1</market-row>\n                  <market-row>Nested Row 2</market-row>\n                  <market-row>Nested Row 3</market-row>\n                </market-list>\n              </market-popover>\n            </market-dropdown>\n          </market-row>\n          <market-row drag-handle-position=\"leading\">\n            <label slot=\"label\">Row 5</label>\n            <market-dropdown slot=\"trailing-accessory\">\n              <span slot=\"trigger\">More</span>\n              <market-popover slot=\"popover\">\n                <market-list>\n                  <market-row>Nested Row 1</market-row>\n                  <market-row>Nested Row 2</market-row>\n                  <market-row>Nested Row 3</market-row>\n                </market-list>\n              </market-popover>\n            </market-dropdown>\n          </market-row>\n        </market-list>\n      `);\n\n      list1 = await page.find('#list-1');\n      list1ReorderedSpy = await list1.spyOnEvent('marketListItemsReordered');\n      draggedRowNode = (await page.$eval('#list-1 market-row:nth-child(3)', (el) => el)) as HTMLMarketRowElement;\n    });\n\n    describe('when a row is dragged upwards', () => {\n      beforeEach(async () => {\n        // drag 3rd row between 1st and 2nd rows\n        const from = { x: X_LIST_1, y: Y_ROW_3 };\n        const to = { x: X_LIST_1, y: Y_ROW_2 - ROW_H / 2 };\n        await drag(page, from, to);\n        rowLabels = await page.findAll('#list-1 > market-row > label');\n      });\n\n      it('fires the reordered event', () => {\n        expect(list1ReorderedSpy).toHaveReceivedEventTimes(1);\n        // expect event detail to ignore nested row indices\n        expect(list1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: 1,\n        });\n      });\n\n      it('moves the row to proper position', () => {\n        expect(rowLabels.map((row) => row.innerText)).toEqual(['Row 1', 'Row 3', 'Row 2', 'Row 4', 'Row 5']);\n      });\n    });\n\n    describe('when a row is dragged downwards', () => {\n      beforeEach(async () => {\n        // drag 3rd row between 4th and 5th rows\n        const from = { x: X_LIST_1, y: Y_ROW_3 };\n        const to = { x: X_LIST_1, y: Y_ROW_4 + ROW_H / 2 };\n        await drag(page, from, to);\n        rowLabels = await page.findAll('#list-1 > market-row > label');\n      });\n\n      it('fires the reordered event', () => {\n        expect(list1ReorderedSpy).toHaveReceivedEventTimes(1);\n        // expect event detail to ignore nested row indices\n        expect(list1ReorderedSpy).toHaveReceivedEventDetail({\n          item: draggedRowNode,\n          oldIndex: 2,\n          newIndex: 3,\n        });\n      });\n\n      it('moves the row to the proper position', () => {\n        expect(rowLabels.map((row) => row.innerText)).toEqual(['Row 1', 'Row 2', 'Row 4', 'Row 3', 'Row 5']);\n      });\n    });\n  });\n});\n"]}