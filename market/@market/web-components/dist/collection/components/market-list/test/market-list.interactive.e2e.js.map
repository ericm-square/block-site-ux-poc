{"version":3,"file":"market-list.interactive.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-list/test/market-list.interactive.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement } from '@stencil/core/testing';\n\ndescribe('market-list: interactive', () => {\n  let page: E2EPage;\n  let rows: E2EElement[];\n\n  describe('single select', () => {\n    describe('with market-radio control', () => {\n      let controls: E2EElement[];\n\n      beforeEach(async () => {\n        page = await newE2EPage();\n        await page.setContent(`\n          <div class=\"container\">\n            <market-list interactive>\n              <market-row>\n                <label slot=\"label\">Apple</label>\n                <market-radio slot=\"control\"></market-radio>\n              </market-row>\n              <market-row>\n                <label slot=\"label\">Orange</label>\n                <market-radio slot=\"control\"></market-radio>\n              </market-row>\n              <market-row>\n                <label slot=\"label\">Pear</label>\n                <market-radio slot=\"control\"></market-radio>\n              </market-row>\n            </market-list>\n          </div>\n        `);\n        rows = await page.findAll('market-row');\n        controls = await Promise.all(rows.map((row) => row.find('market-radio')));\n      });\n\n      it('renders controls', async () => {\n        expect(controls.length).toStrictEqual(3);\n        expect(await controls[0].isVisible()).toStrictEqual(true);\n        expect(await controls[1].isVisible()).toStrictEqual(true);\n        expect(await controls[2].isVisible()).toStrictEqual(true);\n      });\n\n      it('clicking on row selects that row exclusively', async () => {\n        await rows[0].click();\n        expect(await rows[0].getProperty('selected')).toStrictEqual(true);\n        expect(await rows[1].getProperty('selected')).toStrictEqual(false);\n        expect(await rows[2].getProperty('selected')).toStrictEqual(false);\n\n        await rows[1].click();\n        expect(await rows[0].getProperty('selected')).toStrictEqual(false);\n        expect(await rows[1].getProperty('selected')).toStrictEqual(true);\n        expect(await rows[2].getProperty('selected')).toStrictEqual(false);\n\n        await rows[2].click();\n        expect(await rows[0].getProperty('selected')).toStrictEqual(false);\n        expect(await rows[1].getProperty('selected')).toStrictEqual(false);\n        expect(await rows[2].getProperty('selected')).toStrictEqual(true);\n      });\n\n      it('clicking on a rowâ€™s control selects that row', async () => {\n        await controls[0].click();\n        expect(await rows[0].getProperty('selected')).toStrictEqual(true);\n        expect(await rows[1].getProperty('selected')).toStrictEqual(false);\n        expect(await rows[2].getProperty('selected')).toStrictEqual(false);\n\n        await controls[1].click();\n        expect(await rows[0].getProperty('selected')).toStrictEqual(false);\n        expect(await rows[1].getProperty('selected')).toStrictEqual(true);\n        expect(await rows[2].getProperty('selected')).toStrictEqual(false);\n\n        await controls[2].click();\n        expect(await rows[0].getProperty('selected')).toStrictEqual(false);\n        expect(await rows[1].getProperty('selected')).toStrictEqual(false);\n        expect(await rows[2].getProperty('selected')).toStrictEqual(true);\n      });\n\n      it('selecting a row also selects the control', async () => {\n        await rows[0].click();\n        expect(await controls[0].getProperty('selected')).toStrictEqual(true);\n        expect(await controls[1].getProperty('selected')).toStrictEqual(false);\n        expect(await controls[2].getProperty('selected')).toStrictEqual(false);\n\n        await rows[1].click();\n        expect(await controls[0].getProperty('selected')).toStrictEqual(false);\n        expect(await controls[1].getProperty('selected')).toStrictEqual(true);\n        expect(await controls[2].getProperty('selected')).toStrictEqual(false);\n\n        await rows[2].click();\n        expect(await controls[0].getProperty('selected')).toStrictEqual(false);\n        expect(await controls[1].getProperty('selected')).toStrictEqual(false);\n        expect(await controls[2].getProperty('selected')).toStrictEqual(true);\n      });\n    });\n  });\n});\n"]}