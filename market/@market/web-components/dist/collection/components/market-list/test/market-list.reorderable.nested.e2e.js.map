{"version":3,"file":"market-list.reorderable.nested.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-list/test/market-list.reorderable.nested.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAiC,MAAM,uBAAuB,CAAC;AAClF,OAAO,EAAE,IAAI,EAAE,MAAM,yBAAyB,CAAC;AAE/C,QAAQ,CAAC,+CAA+C,EAAE,GAAG,EAAE;IAC7D,IAAI,IAAa,CAAC;IAElB,IAAI,SAAqB,CAAC;IAC1B,IAAI,kBAAgC,CAAC;IACrC,IAAI,qBAA+B,CAAC;IAEpC,IAAI,SAAqB,CAAC;IAC1B,IAAI,kBAAgC,CAAC;IACrC,IAAI,qBAA+B,CAAC;IAEpC,IAAI,cAAoC,CAAC;IAEzC,kDAAkD;IAClD,MAAM,KAAK,GAAG,EAAE,CAAC;IAEjB,MAAM,YAAY,GAAG,EAAE,CAAC;IACxB,MAAM,YAAY,GAAG,EAAE,CAAC;IAExB,MAAM,OAAO,GAAG,GAAG,CAAC;IACpB,MAAM,SAAS,GAAG,EAAE,CAAC;IACrB,MAAM,SAAS,GAAG,GAAG,CAAC;IACtB,MAAM,OAAO,GAAG,GAAG,CAAC;IACpB,MAAM,OAAO,GAAG,GAAG,CAAC;IAEpB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAE1B,8DAA8D;QAC9D,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;;;;;;;;;;;;;;;;KAoBrB,CAAC,CAAC;QAEH,SAAS,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3C,kBAAkB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC5E,qBAAqB,GAAG,MAAM,SAAS,CAAC,UAAU,CAAC,0BAA0B,CAAC,CAAC;QAE/E,SAAS,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3C,kBAAkB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC5E,qBAAqB,GAAG,MAAM,SAAS,CAAC,UAAU,CAAC,0BAA0B,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAChD,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,wCAAwC;YACxC,cAAc,GAAG,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,uCAAuC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAyB,CAAC;YACjH,MAAM,IAAI,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC;YAC/C,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC;YACzD,MAAM,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YAC3B,kBAAkB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;YACjC,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;QACxG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,CAAC,qBAAqB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,qBAAqB,CAAC,CAAC,yBAAyB,CAAC;gBACtD,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,CAAC;gBACX,QAAQ,EAAE,CAAC;aACZ,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;YAC5D,MAAM,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAChD,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,qCAAqC;YACrC,cAAc,GAAG,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,uCAAuC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAyB,CAAC;YACjH,MAAM,IAAI,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC;YAC7C,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,OAAO,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC;YACvD,MAAM,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YAC3B,kBAAkB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;YACjC,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;QAC3G,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,CAAC,qBAAqB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,qBAAqB,CAAC,CAAC,yBAAyB,CAAC;gBACtD,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,CAAC;gBACX,QAAQ,EAAE,CAAC;aACZ,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;YAC5D,MAAM,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qDAAqD,EAAE,GAAG,EAAE;QACnE,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,oCAAoC;YACpC,cAAc,GAAG,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,uCAAuC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAyB,CAAC;YACjH,MAAM,IAAI,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC;YAC/C,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,OAAO,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC;YACvD,MAAM,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YAC3B,kBAAkB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;YAC5E,kBAAkB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;YAC9C,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;QAC7F,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;YACzC,0EAA0E;YAC1E,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;gBACjE,OAAO;gBACP,OAAO;gBACP,SAAS;gBACT,OAAO;gBACP,OAAO;aACR,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,CAAC,qBAAqB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,qBAAqB,CAAC,CAAC,yBAAyB,CAAC;gBACtD,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,CAAC;gBACX,QAAQ,EAAE,CAAC,CAAC;aACb,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,CAAC,qBAAqB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,qBAAqB,CAAC,CAAC,yBAAyB,CAAC;gBACtD,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,CAAC,CAAC;gBACZ,QAAQ,EAAE,CAAC;aACZ,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qDAAqD,EAAE,GAAG,EAAE;QACnE,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,sCAAsC;YACtC,cAAc,GAAG,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,uCAAuC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAyB,CAAC;YACjH,MAAM,IAAI,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC;YAC7C,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC;YACzD,MAAM,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YAC3B,kBAAkB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;YAC5E,kBAAkB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;YAC9C,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;QAClG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;YACzC,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;QACjH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,CAAC,qBAAqB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,qBAAqB,CAAC,CAAC,yBAAyB,CAAC;gBACtD,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,CAAC;gBACX,QAAQ,EAAE,CAAC,CAAC;aACb,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,CAAC,qBAAqB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,qBAAqB,CAAC,CAAC,yBAAyB,CAAC;gBACtD,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,CAAC,CAAC;gBACZ,QAAQ,EAAE,CAAC;aACZ,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,4DAA4D,EAAE,GAAG,EAAE;QAC1E,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,qCAAqC;YACrC,cAAc,GAAG,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,uCAAuC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAyB,CAAC;YACjH,MAAM,IAAI,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC;YAC7C,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,OAAO,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC;YACvD,MAAM,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YAC3B,kBAAkB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;YACjC,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;QAC3G,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,CAAC,qBAAqB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,qBAAqB,CAAC,CAAC,yBAAyB,CAAC;gBACtD,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,CAAC;gBACX,QAAQ,EAAE,CAAC;aACZ,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;YAC5D,MAAM,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\nimport { drag } from '../../../utils/e2e/drag';\n\ndescribe('market-list: nested reorderable functionality', () => {\n  let page: E2EPage;\n\n  let listOuter: E2EElement;\n  let listOuterRowLabels: E2EElement[];\n  let listOuterReorderedSpy: EventSpy;\n\n  let listInner: E2EElement;\n  let listInnerRowLabels: E2EElement[];\n  let listInnerReorderedSpy: EventSpy;\n\n  let draggedRowNode: HTMLMarketRowElement;\n\n  // magic numbers to assist with mouse manipulation\n  const ROW_H = 55;\n\n  const X_LIST_INNER = 55;\n  const X_LIST_OUTER = 15;\n\n  const Y_ROW_1 = 115;\n  const Y_ROW_1_1 = 70;\n  const Y_ROW_1_2 = 125;\n  const Y_ROW_2 = 260;\n  const Y_ROW_3 = 310;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n\n    // absolutely position elements to simplify mouse manipulation\n    await page.setContent(`\n      <market-list id=\"list-outer\" reorderable=\"internal\" style=\"position: absolute; width: 200px; top: 0; left: 0;\">\n        <market-row drag-handle-position=\"leading\">\n          <label slot=\"label\">Row 1</label>\n            <market-list id=\"list-inner\" reorderable=\"internal\">\n              <market-row drag-handle-position=\"leading\"><label slot=\"label\">Row 1.1</label></market-row>\n              <market-row drag-handle-position=\"leading\"><label slot=\"label\">Row 1.2</label></market-row>\n              <market-row drag-handle-position=\"leading\"><label slot=\"label\">Row 1.3</label></market-row>\n            </market-list>\n        </market-row>\n        <market-row drag-handle-position=\"leading\">\n          <label slot=\"label\">Row 2</label>\n        </market-row>\n        <market-row drag-handle-position=\"leading\">\n          <label slot=\"label\">Row 3</label>\n        </market-row>\n        <market-row drag-handle-position=\"leading\">\n          <label slot=\"label\">Row 4</label>\n        </market-row>\n      </market-list>\n    `);\n\n    listOuter = await page.find('#list-outer');\n    listOuterRowLabels = await page.findAll('#list-outer > market-row > label');\n    listOuterReorderedSpy = await listOuter.spyOnEvent('marketListItemsReordered');\n\n    listInner = await page.find('#list-inner');\n    listInnerRowLabels = await page.findAll('#list-inner > market-row > label');\n    listInnerReorderedSpy = await listInner.spyOnEvent('marketListItemsReordered');\n  });\n\n  describe('when the inner list is reordered', () => {\n    beforeEach(async () => {\n      // drag row 1.1 between rows 1.2 and 1.3\n      draggedRowNode = (await page.$eval('#list-inner > market-row:nth-child(1)', (el) => el)) as HTMLMarketRowElement;\n      const from = { x: X_LIST_INNER, y: Y_ROW_1_1 };\n      const to = { x: X_LIST_INNER, y: Y_ROW_1_2 + ROW_H / 2 };\n      await drag(page, from, to);\n      listInnerRowLabels = await page.findAll('#list-inner > market-row > label');\n    });\n\n    it('reorders the inner list', () => {\n      expect(listInnerRowLabels.map((label) => label.innerText)).toEqual(['Row 1.2', 'Row 1.1', 'Row 1.3']);\n    });\n\n    it('fires the reordered event on the inner row', () => {\n      expect(listInnerReorderedSpy).toHaveReceivedEventTimes(1);\n      expect(listInnerReorderedSpy).toHaveReceivedEventDetail({\n        item: draggedRowNode,\n        oldIndex: 0,\n        newIndex: 1,\n      });\n    });\n\n    it('does NOT fire the reordered event on the outer row', () => {\n      expect(listOuterReorderedSpy).not.toHaveReceivedEvent();\n    });\n  });\n\n  describe('when the outer list is reordered', () => {\n    beforeEach(async () => {\n      // drag row 2 between row 3 and row 4\n      draggedRowNode = (await page.$eval('#list-outer > market-row:nth-child(2)', (el) => el)) as HTMLMarketRowElement;\n      const from = { x: X_LIST_OUTER, y: Y_ROW_2 };\n      const to = { x: X_LIST_OUTER, y: Y_ROW_3 + ROW_H / 2 };\n      await drag(page, from, to);\n      listOuterRowLabels = await page.findAll('#list-outer > market-row > label');\n    });\n\n    it('reorders the outer list', () => {\n      expect(listOuterRowLabels.map((label) => label.innerText)).toEqual(['Row 1', 'Row 3', 'Row 2', 'Row 4']);\n    });\n\n    it('fires the reordered event on the outer row', () => {\n      expect(listOuterReorderedSpy).toHaveReceivedEventTimes(1);\n      expect(listOuterReorderedSpy).toHaveReceivedEventDetail({\n        item: draggedRowNode,\n        oldIndex: 1,\n        newIndex: 2,\n      });\n    });\n\n    it('does NOT fire the reordered event on the inner row', () => {\n      expect(listInnerReorderedSpy).not.toHaveReceivedEvent();\n    });\n  });\n\n  describe('when an inner list row is dragged to the outer list', () => {\n    beforeEach(async () => {\n      // drag row 1.2 between rows 2 and 3\n      draggedRowNode = (await page.$eval('#list-inner > market-row:nth-child(2)', (el) => el)) as HTMLMarketRowElement;\n      const from = { x: X_LIST_INNER, y: Y_ROW_1_2 };\n      const to = { x: X_LIST_OUTER, y: Y_ROW_2 + ROW_H / 2 };\n      await drag(page, from, to);\n      listOuterRowLabels = await page.findAll('#list-outer > market-row > label');\n      listInnerRowLabels = await page.findAll('#list-inner > market-row > label');\n    });\n\n    it('remmoves the row from the inner list', () => {\n      expect(listInnerRowLabels.map((label) => label.innerText)).toEqual(['Row 1.1', 'Row 1.3']);\n    });\n\n    it('moves the row to the outer list', () => {\n      // expect(listOuterRowLabels.map((label) => label.innerText)).toEqual([]);\n      expect(listOuterRowLabels.map((label) => label.innerText)).toEqual([\n        'Row 1',\n        'Row 2',\n        'Row 1.2',\n        'Row 3',\n        'Row 4',\n      ]);\n    });\n\n    it('fires the reordered event on the inner row', () => {\n      expect(listInnerReorderedSpy).toHaveReceivedEventTimes(1);\n      expect(listInnerReorderedSpy).toHaveReceivedEventDetail({\n        item: draggedRowNode,\n        oldIndex: 1,\n        newIndex: -1,\n      });\n    });\n\n    it('fires the reordered event on the outer row', () => {\n      expect(listOuterReorderedSpy).toHaveReceivedEventTimes(1);\n      expect(listOuterReorderedSpy).toHaveReceivedEventDetail({\n        item: draggedRowNode,\n        oldIndex: -1,\n        newIndex: 2,\n      });\n    });\n  });\n\n  describe('when an outer list row is dragged to the inner list', () => {\n    beforeEach(async () => {\n      // drag row 2 between rows 1.2 and 1.3\n      draggedRowNode = (await page.$eval('#list-outer > market-row:nth-child(2)', (el) => el)) as HTMLMarketRowElement;\n      const from = { x: X_LIST_OUTER, y: Y_ROW_2 };\n      const to = { x: X_LIST_INNER, y: Y_ROW_1_2 + ROW_H / 2 };\n      await drag(page, from, to);\n      listOuterRowLabels = await page.findAll('#list-outer > market-row > label');\n      listInnerRowLabels = await page.findAll('#list-inner > market-row > label');\n    });\n\n    it('remmoves the row from the outer list', () => {\n      expect(listOuterRowLabels.map((label) => label.innerText)).toEqual(['Row 1', 'Row 3', 'Row 4']);\n    });\n\n    it('moves the row to the inner list', () => {\n      expect(listInnerRowLabels.map((label) => label.innerText)).toEqual(['Row 1.1', 'Row 1.2', 'Row 2', 'Row 1.3']);\n    });\n\n    it('fires the reordered event on the outer row', () => {\n      expect(listOuterReorderedSpy).toHaveReceivedEventTimes(1);\n      expect(listOuterReorderedSpy).toHaveReceivedEventDetail({\n        item: draggedRowNode,\n        oldIndex: 1,\n        newIndex: -1,\n      });\n    });\n\n    it('fires the reordered event on the inner row', () => {\n      expect(listInnerReorderedSpy).toHaveReceivedEventTimes(1);\n      expect(listInnerReorderedSpy).toHaveReceivedEventDetail({\n        item: draggedRowNode,\n        oldIndex: -1,\n        newIndex: 2,\n      });\n    });\n  });\n\n  describe('when the outer row with the nested inner list is reordered', () => {\n    beforeEach(async () => {\n      // drag row 1 between row 3 and row 4\n      draggedRowNode = (await page.$eval('#list-outer > market-row:nth-child(2)', (el) => el)) as HTMLMarketRowElement;\n      const from = { x: X_LIST_OUTER, y: Y_ROW_1 };\n      const to = { x: X_LIST_OUTER, y: Y_ROW_3 + ROW_H / 2 };\n      await drag(page, from, to);\n      listOuterRowLabels = await page.findAll('#list-outer > market-row > label');\n    });\n\n    it('reorders the outer list', () => {\n      expect(listOuterRowLabels.map((label) => label.innerText)).toEqual(['Row 2', 'Row 3', 'Row 1', 'Row 4']);\n    });\n\n    it('fires the reordered event on the outer row', () => {\n      expect(listOuterReorderedSpy).toHaveReceivedEventTimes(1);\n      expect(listOuterReorderedSpy).toHaveReceivedEventDetail({\n        item: draggedRowNode,\n        oldIndex: 0,\n        newIndex: 2,\n      });\n    });\n\n    it('does NOT fire the reordered event on the inner row', () => {\n      expect(listInnerReorderedSpy).not.toHaveReceivedEvent();\n    });\n  });\n});\n"]}