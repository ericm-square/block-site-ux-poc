{"version":3,"file":"market-pill.js","sourceRoot":"","sources":["../../../../src/components/market-pill/market-pill.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAEzD,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAQ5D,MAAM,OAAO,UAAU;;uBAI0C,QAAQ;oBAKV,QAAQ;yBAKd,KAAK;2BAKH,KAAK;;IAE9D,eAAe;QACb,MAAM,kBAAkB,GAAG,mBAAmB,CAAC,kBAAkB,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAC9B,EAAC,kBAAkB;YACjB,WAAK,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,WAAW,EAAC,KAAK,EAAC,4BAA4B;gBAChF,cAAQ,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,GAAG,CAC1B,CACa,CACtB,CAAC,CAAC,CAAC,CACF,EAAC,kBAAkB;YACjB,WAAK,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,WAAW,EAAC,KAAK,EAAC,4BAA4B;gBAChF,cAAQ,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,GAAG,CAC1B,CACa,CACtB,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAC,aAAa;YACvB,6DAAM,IAAI,EAAC,MAAM,IAAE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,eAAe,EAAE,CAAQ;YACnE,8DAAa,CACR,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, Prop, h } from '@stencil/core';\n\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { MarketPillVariant } from '../../utils/pill-variant';\n\n@Component({\n  tag: 'market-pill',\n  styleUrl: 'market-pill.css',\n  shadow: true,\n})\nexport class MarketPill {\n  /**\n   * Sets the visual variant style for the pill.\n   */\n  @Prop({ reflect: true }) readonly variant: MarketPillVariant = 'normal';\n\n  /**\n   * String for setting pill size\n   */\n  @Prop({ reflect: true }) readonly size: 'medium' | 'small' = 'medium';\n\n  /**\n   * Controls whether the pill should display an indicator icon.\n   */\n  @Prop({ reflect: true }) readonly indicator: boolean = false;\n\n  /**\n   * Controls whether the pill should react to hovers/clicks. It is recommended to only set this to true if you have also slotted an icon into the pill.\n   */\n  @Prop({ reflect: true }) readonly interactive: boolean = false;\n\n  renderIndicator() {\n    const MarketAccessoryTag = getNamespacedTagFor('market-accessory');\n    return this.size === 'medium' ? (\n      <MarketAccessoryTag>\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"8\" cy=\"8\" r=\"5\" />\n        </svg>\n      </MarketAccessoryTag>\n    ) : (\n      <MarketAccessoryTag>\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"8\" cy=\"8\" r=\"4\" />\n        </svg>\n      </MarketAccessoryTag>\n    );\n  }\n\n  render() {\n    return (\n      <Host class=\"market-pill\">\n        <slot name=\"icon\">{this.indicator && this.renderIndicator()}</slot>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n"]}