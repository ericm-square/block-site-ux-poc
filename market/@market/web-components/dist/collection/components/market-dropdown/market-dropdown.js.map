{"version":3,"file":"market-dropdown.js","sourceRoot":"","sources":["../../../../src/components/market-dropdown/market-dropdown.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAgB,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACrH,OAAO,EAAE,EAAE,IAAI,IAAI,EAAE,MAAM,MAAM,CAAC;AAElC,OAAO,EAAE,2BAA2B,EAAE,qBAAqB,EAAkB,MAAM,kBAAkB,CAAC;AACtG,OAAO,EAAE,yBAAyB,EAAE,MAAM,sBAAsB,CAAC;AAEjE,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAE5D;;;;;;;;;;GAUG;AAMH,MAAM,OAAO,cAAc;;QAyEzB;;WAEG;QACK,mBAAc,GAAoB,IAAI,CAAC;QA2N/C,uBAAkB,GAAG,CAAC,cAA8B,EAAE,EAAE;YACtD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACvC,CAAC,CAAC;2BAvRwE,OAAO;wBAM3B,KAAK;wBAKC,KAAK;gCAOlB,QAAQ;+BAQC,UAAU;;+BAevB,CAAC;;;IAmB5C;;;OAGG;IAEH,WAAW,CAAC,CAAa;QACvB,2FAA2F;QAC3F,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;YACzD,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IAED;;OAEG;IAEH,gBAAgB,CAAC,QAAiB,EAAE,QAAiB;QACnD,IAAI,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC1B,OAAO;QACT,CAAC;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IAGD,iBAAiB;QACf,wFAAwF;QACxF,MAAM,sBAAsB,GAAG,IAAI,CAAC,EAAE,CAAC,gBAAgB,CACrD,yBAAyB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,mBAAmB,CAAC,MAAqC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CACzE,CAAC;QACzC,sBAAsB,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACzC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IAEH,cAAc;QACZ,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;QAC9B,CAAC;aAAM,CAAC;YACN,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;QAC7B,CAAC;IACH,CAAC;IAED;;OAEG;IAEH,YAAY;QACV,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC;QACD,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;QAC9D,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC;QACD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IAEH,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC;QACD,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;QAC9D,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;QACD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED;;;OAGG;IAEH,KAAK,CAAC,sBAAsB;;QAC1B,MAAM,CAAA,MAAA,IAAI,CAAC,cAAc,0CAAE,MAAM,EAAE,CAAA,CAAC;QACpC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,CAAQ;QAC9B,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,KAAK,MAAM,EAAE,CAAC;YACjD,OAAO;QACT,CAAC;QAED,uEAAuE;QACvE,2EAA2E;QAC3E,IAAI,IAAI,CAAC,WAAW,KAAK,OAAO,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;YACvD,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;QAED,yEAAyE;QACzE,+DAA+D;QAC/D,IAAI,IAAI,CAAC,WAAW,KAAK,OAAO,IAAI,CAAC,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;YAC3D,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;QACD,IAAI,IAAI,CAAC,WAAW,KAAK,OAAO,IAAI,CAAC,CAAC,IAAI,KAAK,UAAU,EAAE,CAAC;YAC1D,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QAED,IAAI,CAAC,YAAY,aAAa,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE,CAAC;YACpD,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;QAED,mEAAmE;QACnE,iDAAiD;QACjD,MAAM,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;QAC1D,IAAI,IAAI,CAAC,WAAW,KAAK,YAAY,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO,IAAI,CAAC,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;YAClG,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;QAED,oEAAoE;QACpE,2EAA2E;QAC3E,qBAAqB;QACrB,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;QACrC,CAAC;IACH,CAAC;IAED,gBAAgB;QACd,MAAM,EACJ,EAAE,EACF,cAAc,EACd,gBAAgB,EAAE,SAAS,EAC3B,eAAe,EAAE,QAAQ,EACzB,eAAe,EAAE,QAAQ,EACzB,eAAe,EAAE,QAAQ,GAC1B,GAAG,IAAI,CAAC;QAET,IAAI,cAAc,EAAE,CAAC;YACnB,cAAc,CAAC,OAAO,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC;QAED,MAAM,OAAO,GAAG,EAAiB,CAAC;QAClC,MAAM,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC,kBAAkB,CAAgB,CAAC;QAEpE,IAAI,OAAO,KAAK,IAAI,EAAE,CAAC;YACrB,OAAO;QACT,CAAC;QAED,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE;YACnD,sDAAsD;YACtD,SAAS;YACT,QAAQ;YACR,SAAS,EAAE;gBACT;oBACE,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE;wBACP,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;qBAC7B;iBACF;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAID,mBAAmB;QACjB,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QACtF,cAAc,CAAC,UAAU,CAAC;YACxB,SAAS,EAAE;gBACT;oBACE,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE;wBACP,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;qBAC7B;iBACF;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,0FAA0F;QAC1F,kHAAkH;QAClH,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;YACzB,OAAO;QACT,CAAC;QAED,kHAAkH;QAClH,+GAA+G;QAC/G,qCAAqC;QACrC,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,oBAAoB;QAClB,+FAA+F;QAC/F,kHAAkH;QAClH,IAAI,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;YACxB,OAAO;QACT,CAAC;QAED,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,wDAAwD;YACxD,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC;IACH,CAAC;IAKD,eAAe;QACb,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACnF,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAMD,iBAAiB;QACf,IAAI,CAAC,gBAAgB,GAAG,qBAAqB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAClF,CAAC;IAED,mBAAmB;QACjB,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,kBAAkB,CAAgB,CAAC;YACzE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC;gBAChB,OAAO,CAAC,EAAE,GAAG,WAAW,IAAI,EAAE,EAAE,CAAC;YACnC,CAAC;YACD,2BAA2B,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBACjD,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;gBAClC,SAAS,EAAE,OAAO,CAAC,EAAE;aACtB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDACH,KAAK,EAAC,iBAAiB,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,CAAC,CAAa,EAAE,EAAE;gBACzB,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,EACD,WAAW,EAAE,CAAC,CAAa,EAAE,EAAE;gBAC7B,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,EACD,UAAU,EAAE,CAAC,CAAa,EAAE,EAAE;gBAC5B,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,EACD,SAAS,EAAE,CAAC,CAAgB,EAAE,EAAE;gBAC9B,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC;YAED,6DAAM,IAAI,EAAC,SAAS,EAAC,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,GAAS;YACxE,6DAAM,IAAI,EAAC,SAAS,EAAC,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAS,CACpE,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { createPopper } from '@popperjs/core';\nimport type { Instance, Placement, PositioningStrategy } from '@popperjs/core';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Method, Prop, State, h, Watch } from '@stencil/core';\nimport { v4 as uuid } from 'uuid';\n\nimport { applyExpandableAriaControls, observeAriaAttributes, AriaAttributes } from '../../utils/aria';\nimport { supportedDropdownTriggers } from '../../utils/dropdown';\nimport type { TDropdownTriggerElement } from '../../utils/dropdown';\nimport { getNamespacedTagFor } from '../../utils/namespace';\n\n/**\n * @slot trigger - Content slotted here will serve as the \"trigger\" for user\n * interaction that opens the element in the \"content\" slot. If it is a\n * `<market-button>`, `<market-filter-button>`, or `<market-link>`,\n * the dropdown will manage their disabled state.\n * @slot popover - Content slotted here will become visible when the slotted\n * trigger content is interacted with. Only tested with `<market-popover>`.\n *\n * To tweak popover position relative to the trigger, you can use the props\n * `popoverPlacement`, popoverSkidding`, and `popoverDistance`.\n */\n@Component({\n  tag: 'market-dropdown',\n  styleUrl: 'market-dropdown.css',\n  shadow: true,\n})\nexport class MarketDropdown {\n  @Element() el: HTMLMarketDropdownElement;\n\n  /**\n   * Defining how the popover should be triggered to open/close. Note that\n   * clicks outside the dropdown will always close it.\n   *\n   * `click`: popover toggles open/closed on clicks to the trigger or popover\n   *\n   * `hover`: popover opens on trigger mouseover, closes on trigger or popover\n   *  mouseout\n   *\n   * `persistent`: popover toggles open/closed on clicks to the trigger, popover\n   * stays open if users click on it or its content\n   *\n   * `none`: popover does not toggle open/closed on any user interaction; it is\n   * expected to be controlled by the parent component\n   */\n  @Prop() readonly interaction: 'click' | 'hover' | 'persistent' | 'none' = 'click';\n\n  /**\n   * Functionally disables the component, as well as relevant Market components\n   * in the \"trigger\" slot (`<market-button>`, `<market-link>`).\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Determines whether the dropdown is expanded or collapsed\n   */\n  @Prop({ mutable: true, reflect: true }) expanded: boolean = false;\n\n  /**\n   * Configuration option for Popper.js (used to position `<market-popover>`).\n   * Describes the preferred placement of the popper.\n   * https://popper.js.org/docs/v2/constructors//#placement\n   */\n  @Prop() readonly popoverPlacement: Placement = 'bottom';\n\n  /**\n   * Configuration option for Popper.js (used to position `<market-popover>`).\n   * Describes the positioning strategy to use. By default, it is absolute. If\n   * your reference element is in a fixed container, use the fixed strategy.\n   * https://popper.js.org/docs/v2/constructors//#strategy\n   */\n  @Prop() readonly popoverStrategy: PositioningStrategy = 'absolute';\n\n  /**\n   * Configuration option for Popper.js (used to position `<market-popover>`).\n   * Displaces the popover along the reference element.\n   * https://popper.js.org/docs/v2/modifiers/offset/#skidding-1\n   */\n  @Prop() readonly popoverSkidding: number;\n\n  /**\n   * Configuration option for Popper.js (used to position `<market-popover>`).\n   * Displaces the popper away from, or toward, the reference element in the\n   * direction of its placement.\n   * https://popper.js.org/docs/v2/modifiers/offset/#distance-1\n   */\n  @Prop() readonly popoverDistance: number = 8;\n\n  /**\n   * Fired whenever the dropdown is opened.\n   */\n  @Event({ bubbles: true, composed: true }) marketDropdownOpened: EventEmitter;\n\n  /**\n   * Fired whenever the dropdown is closed.\n   */\n  @Event({ bubbles: true, composed: true }) marketDropdownClosed: EventEmitter;\n\n  @State() ariaAttributes: AriaAttributes;\n\n  /**\n   * Popper instance\n   */\n  private popperInstance: Instance | null = null;\n\n  /**\n   * Clicks outside of the dropdown component will close the popover. This means\n   * that only one dropdown can be open on screen at a time.\n   */\n  @Listen('click', { target: 'window' })\n  windowClick(e: MouseEvent) {\n    // https://lamplightdev.com/blog/2021/04/10/how-to-detect-clicks-outside-of-a-web-component\n    if (this.expanded && !e.composedPath().includes(this.el)) {\n      this.closeDropdown();\n    }\n  }\n\n  /**\n   * Toggles the dropdown\n   */\n  @Watch('expanded')\n  onExpandedChange(newValue: boolean, oldValue: boolean) {\n    if (newValue === oldValue) {\n      return;\n    }\n    if (this.expanded) {\n      this.openDropdown();\n    } else {\n      this.closeDropdown();\n    }\n  }\n\n  @Watch('disabled')\n  syncDisabledState() {\n    // this only covers elements slotted directly into market-dropdown, aka in the light DOM\n    const slottedTriggerElements = this.el.querySelectorAll(\n      supportedDropdownTriggers.map((elName) => getNamespacedTagFor(elName as keyof HTMLElementTagNameMap)).join(','),\n    ) as NodeListOf<TDropdownTriggerElement>;\n    slottedTriggerElements.forEach((element) => {\n      element.disabled = this.disabled;\n    });\n  }\n\n  /**\n   * Toggles the dropdown opened or closed\n   */\n  @Method()\n  toggleDropdown(): Promise<void> {\n    if (this.expanded) {\n      return this.closeDropdown();\n    } else {\n      return this.openDropdown();\n    }\n  }\n\n  /**\n   * Opens the dropdown\n   */\n  @Method()\n  openDropdown(): Promise<void> {\n    if (this.expanded) {\n      return Promise.resolve();\n    }\n    const { defaultPrevented } = this.marketDropdownOpened.emit();\n    if (!defaultPrevented && !this.expanded) {\n      this.expanded = true;\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Closes the dropdown\n   */\n  @Method()\n  closeDropdown(): Promise<void> {\n    if (!this.expanded) {\n      return Promise.resolve();\n    }\n    const { defaultPrevented } = this.marketDropdownClosed.emit();\n    if (!defaultPrevented && this.expanded) {\n      this.expanded = false;\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Updates the popper's tooltip location\n   * https://popper.js.org/docs/v2/lifecycle/#manual-update\n   */\n  @Method()\n  async updateDropdownPosition(): Promise<void> {\n    await this.popperInstance?.update();\n    return Promise.resolve();\n  }\n\n  async handleInteraction(e: Event) {\n    if (this.disabled || this.interaction === 'none') {\n      return;\n    }\n\n    // default behavior (interaction = 'click') is that the popover toggles\n    // open/closed when any part of the element is clicked (trigger or popover)\n    if (this.interaction === 'click' && e.type === 'click') {\n      this.toggleDropdown();\n    }\n\n    // when interaction = 'hover', mousing over the trigger opens the popover\n    // and mousing out of the trigger OR popover closes the popover\n    if (this.interaction === 'hover' && e.type === 'mouseover') {\n      this.openDropdown();\n    }\n    if (this.interaction === 'hover' && e.type === 'mouseout') {\n      this.closeDropdown();\n    }\n\n    if (e instanceof KeyboardEvent && e.key === 'Enter') {\n      this.toggleDropdown();\n    }\n\n    // when interaction = 'persistent', the popover can only be toggled\n    // open/closed with clicks to the trigger element\n    const trigger = this.el.querySelector('[slot=\"trigger\"]');\n    if (this.interaction === 'persistent' && e.type === 'click' && e.composedPath().includes(trigger)) {\n      this.toggleDropdown();\n    }\n\n    // since slotted content is not visible until this.expanded is true,\n    // we need to tell popper.js to more accurately calculate its position once\n    // it becomes visible\n    if (this.popperInstance) {\n      await this.popperInstance.update();\n    }\n  }\n\n  initializePopper() {\n    const {\n      el,\n      popperInstance,\n      popoverPlacement: placement,\n      popoverStrategy: strategy,\n      popoverSkidding: skidding,\n      popoverDistance: distance,\n    } = this;\n\n    if (popperInstance) {\n      popperInstance.destroy();\n      this.popperInstance = null;\n    }\n\n    const trigger = el as HTMLElement;\n    const popover = el.querySelector('[slot=\"popover\"]') as HTMLElement;\n\n    if (popover === null) {\n      return;\n    }\n\n    this.popperInstance = createPopper(trigger, popover, {\n      // https://popper.js.org/docs/v2/constructors/#options\n      placement,\n      strategy,\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: [skidding, distance],\n          },\n        },\n      ],\n    });\n  }\n\n  @Watch('popoverSkidding')\n  @Watch('popoverDistance')\n  updatePopoverConfig() {\n    const { popperInstance, popoverSkidding: skidding, popoverDistance: distance } = this;\n    popperInstance.setOptions({\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: [skidding, distance],\n          },\n        },\n      ],\n    });\n  }\n\n  connectedCallback() {\n    // It's possible for connectedCallback to fire when the element is not connected ¯\\_(ツ)_/¯\n    // https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks\n    if (!this.el.isConnected) {\n      return;\n    }\n\n    // If this is the initial connection, the popover slot may not exist yet. In that case we'll initialize Popper via\n    // the slotchange event handler. If this is a reconnect, we need to reinitialize Popper since it will have been\n    // destroyed by disconnectedCallback.\n    this.initializePopper();\n  }\n\n  disconnectedCallback() {\n    // It's possible for disconnectedCallback to fire when the element is still connected ¯\\_(ツ)_/¯\n    // https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks\n    if (this.el.isConnected) {\n      return;\n    }\n\n    if (this.popperInstance) {\n      // Destroying Popper on disconnect prevents memory leaks\n      this.popperInstance.destroy();\n      this.popperInstance = null;\n    }\n  }\n\n  slottedTriggerEl: TDropdownTriggerElement;\n  mutationObserver: MutationObserver;\n\n  registerTrigger() {\n    this.slottedTriggerEl = this.el.querySelector(supportedDropdownTriggers.join(','));\n    this.syncDisabledState();\n  }\n\n  onMutationObserved = (ariaAttributes: AriaAttributes) => {\n    this.ariaAttributes = ariaAttributes;\n  };\n\n  componentWillLoad() {\n    this.mutationObserver = observeAriaAttributes(this.el, this.onMutationObserved);\n  }\n\n  componentWillRender() {\n    if (this.slottedTriggerEl) {\n      const popover = this.el.querySelector('[slot=\"popover\"]') as HTMLElement;\n      if (!popover.id) {\n        popover.id = `popover-${uuid()}`;\n      }\n      applyExpandableAriaControls(this.slottedTriggerEl, {\n        expanded: this.expanded.toString(),\n        popoverId: popover.id,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Host\n        class=\"market-dropdown\"\n        expanded={this.expanded}\n        onClick={(e: MouseEvent) => {\n          this.handleInteraction(e);\n        }}\n        onmouseover={(e: MouseEvent) => {\n          this.handleInteraction(e);\n        }}\n        onmouseout={(e: MouseEvent) => {\n          this.handleInteraction(e);\n        }}\n        onKeyDown={(e: KeyboardEvent) => {\n          this.handleInteraction(e);\n        }}\n      >\n        <slot name=\"trigger\" onSlotchange={() => this.registerTrigger()}></slot>\n        <slot name=\"popover\" onSlotchange={() => this.initializePopper()}></slot>\n      </Host>\n    );\n  }\n}\n"]}