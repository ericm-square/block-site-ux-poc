{"version":3,"file":"market-dropdown.spec.js","sourceRoot":"","sources":["../../../../../src/components/market-dropdown/test/market-dropdown.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAEpD,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AAEpD,OAAO,gBAAgB,MAAM,mBAAmB,CAAC;AAEjD,0DAA0D;AAC1D,MAAM,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAE3C,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,cAAc,CAAC;YAC5B,IAAI,EAAE;;;;;OAKL;SACF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;KAS7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,cAAc,CAAC;YAC5B,IAAI,EAAE;;;;;OAKL;SACF,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;QAEnC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAE/C,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;QACrB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\n\nimport { MarketDropdown } from '../market-dropdown';\n\nimport MutationObserver from 'mutation-observer';\n\n// Fix for ReferenceError: MutationObserver is not defined\nglobal.MutationObserver = MutationObserver;\n\ndescribe('market-dropdown', () => {\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [MarketDropdown],\n      html: `\n        <market-dropdown>\n          <div slot=\"trigger\">trigger</div>\n          <div slot=\"popover\">popover</div>\n        </market-dropdown>\n      `,\n    });\n    expect(page.root).toEqualHtml(`\n      <market-dropdown class=\"market-dropdown\">\n        <mock:shadow-root>\n          <slot name=\"trigger\"></slot>\n          <slot name=\"popover\"></slot>\n        </mock:shadow-root>\n        <div slot=\"trigger\">trigger</div>\n        <div slot=\"popover\" style=\"position: absolute; left: 0; top: 0; margin: 0;\">popover</div>\n      </market-dropdown>\n    `);\n  });\n\n  it('destroys popper instance when disconnected', async () => {\n    const page = await newSpecPage({\n      components: [MarketDropdown],\n      html: `\n        <market-dropdown>\n          <div slot=\"trigger\">trigger</div>\n          <div slot=\"popover\">popover</div>\n        </market-dropdown>\n      `,\n    });\n\n    const dropdown = page.rootInstance;\n\n    expect(dropdown.popperInstance).not.toBeNull();\n\n    dropdown.el.remove();\n    await page.waitForChanges();\n\n    expect(dropdown.popperInstance).toBeNull();\n  });\n});\n"]}