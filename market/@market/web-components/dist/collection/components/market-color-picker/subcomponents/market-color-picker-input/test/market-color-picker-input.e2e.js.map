{"version":3,"file":"market-color-picker-input.e2e.js","sourceRoot":"","sources":["../../../../../../../src/components/market-color-picker/subcomponents/market-color-picker-input/test/market-color-picker-input.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EElement, newE2EPage, E2EPage, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-color-picker-input', () => {\n  let page: E2EPage;\n  let element: E2EElement;\n  let inputChangeEvent: EventSpy;\n\n  let innerInput;\n  let defaultIcon;\n  let swatchIcon;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n  });\n\n  it('renders and shows default state', async () => {\n    await page.setContent('<market-color-picker-input></market-color-picker-input>');\n\n    element = await page.find('market-color-picker-input');\n    expect(element).not.toBeNull();\n\n    defaultIcon = await element.find('pierce/.color-picker-input-icon');\n    expect(defaultIcon).not.toBeNull();\n  });\n\n  it('shows a swatch of corresponding color when value is provided', async () => {\n    await page.setContent('<market-color-picker-input value=\"#FFFFFF\"></market-color-picker-input>');\n    element = await page.find('market-color-picker-input');\n\n    defaultIcon = await element.find('pierce/.color-picker-input-icon');\n    expect(defaultIcon).toBeNull();\n\n    swatchIcon = await element.find('pierce/market-color-swatch');\n    expect(swatchIcon).not.toBeNull();\n    expect(await swatchIcon.getProperty('value')).toEqual('#FFFFFF');\n  });\n\n  it('shows default icon when invalid value is provided', async () => {\n    await page.setContent('<market-color-picker-input value=\"invalid\"></market-color-picker-input>');\n    element = await page.find('market-color-picker-input');\n\n    defaultIcon = await element.find('pierce/.color-picker-input-icon');\n    expect(defaultIcon).not.toBeNull();\n\n    swatchIcon = await element.find('pierce/market-color-swatch');\n    expect(swatchIcon).toBeNull();\n  });\n\n  it('calls input text event when input value is changed and icon changes', async () => {\n    await page.setContent('<market-color-picker-input></market-color-picker-input>');\n    inputChangeEvent = await page.spyOnEvent('marketColorPickerInputValueChange');\n    element = await page.find('market-color-picker-input');\n\n    defaultIcon = await element.find('pierce/.color-picker-input-icon');\n    expect(defaultIcon).not.toBeNull();\n\n    swatchIcon = await element.find('pierce/market-color-swatch');\n    expect(swatchIcon).toBeNull();\n\n    expect(inputChangeEvent).not.toHaveReceivedEvent();\n\n    const input = await element.find('pierce/market-input-text');\n    innerInput = await input.find('pierce/input');\n    expect(innerInput).not.toBeNull();\n\n    await innerInput.type('#aff');\n    await page.waitForChanges();\n\n    expect(inputChangeEvent).toHaveReceivedEvent();\n    expect(inputChangeEvent.lastEvent.detail.value).toEqual('#aff');\n\n    const updatedDefaultIcon = await element.find('pierce/.color-picker-input-icon');\n    expect(updatedDefaultIcon).toBeNull();\n\n    const updatedSwatchIcon = await element.find('pierce/market-color-swatch');\n    expect(updatedSwatchIcon).not.toBeNull();\n  });\n});\n"]}