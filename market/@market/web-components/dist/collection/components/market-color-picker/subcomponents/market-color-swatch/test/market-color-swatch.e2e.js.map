{"version":3,"file":"market-color-swatch.e2e.js","sourceRoot":"","sources":["../../../../../../../src/components/market-color-picker/subcomponents/market-color-swatch/test/market-color-swatch.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAiC,MAAM,uBAAuB,CAAC;AAElF,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,IAAI,IAAa,CAAC;IAClB,IAAI,OAAmB,CAAC;IACxB,IAAI,iBAA2B,CAAC;IAEhC,MAAM,YAAY,GAAG,KAAK,CAAC;IAE3B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAC1B,MAAM,IAAI,CAAC,UAAU,CAAC;mCACS,YAAY;;KAE1C,CAAC,CAAC;QAEH,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACjD,iBAAiB,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,iCAAiC,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;QACjB,MAAM,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;QAC7D,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAEjE,MAAM,aAAa,GAAG,MAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC;QACvD,wCAAwC;QACxC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;QACpE,MAAM,OAAO,CAAC,KAAK,EAAE,CAAC;QACtB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,iBAAiB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACtD,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACvE,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAElE,MAAM,OAAO,CAAC,KAAK,EAAE,CAAC;QACtB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,iBAAiB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACtD,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACvE,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAC1B,MAAM,IAAI,CAAC,UAAU,CAAC;mCACS,YAAY;;KAE1C,CAAC,CAAC;QAEH,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACjD,iBAAiB,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,iCAAiC,CAAC,CAAC;QAE7E,MAAM,OAAO,CAAC,KAAK,EAAE,CAAC;QACtB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-color-swatch', () => {\n  let page: E2EPage;\n  let element: E2EElement;\n  let swatchChangeEvent: EventSpy;\n\n  const SWATCH_COLOR = 'red';\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-color-swatch value=${SWATCH_COLOR}>\n      </market-color-swatch>\n    `);\n\n    element = await page.find('market-color-swatch');\n    swatchChangeEvent = await page.spyOnEvent('marketColorSwatchSelectedChange');\n  });\n\n  it('renders', () => {\n    expect(element).toHaveAttribute('hydrated');\n  });\n\n  it('contains the right color style when passed in', async () => {\n    expect(await element.getProperty('value')).toEqual(SWATCH_COLOR);\n\n    const elementStyles = await element.getComputedStyle();\n    // SWATCH_COLOR = \"red\"'s computed value\n    expect(elementStyles.backgroundColor).toEqual('rgb(255, 0, 0)');\n  });\n\n  it('fires marketColorSwatchSelectedChange event on click', async () => {\n    await element.click();\n    await page.waitForChanges();\n\n    expect(swatchChangeEvent).toHaveReceivedEventTimes(1);\n    expect(swatchChangeEvent.lastEvent.detail.value).toEqual(SWATCH_COLOR);\n    expect(swatchChangeEvent.lastEvent.detail.selected).toEqual(true);\n\n    await element.click();\n    await page.waitForChanges();\n\n    expect(swatchChangeEvent).toHaveReceivedEventTimes(2);\n    expect(swatchChangeEvent.lastEvent.detail.value).toEqual(SWATCH_COLOR);\n    expect(swatchChangeEvent.lastEvent.detail.selected).toEqual(false);\n  });\n\n  it('does not fire click event on a disabled swatch', async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-color-swatch value=${SWATCH_COLOR} disabled>\n      </market-color-swatch>\n    `);\n\n    element = await page.find('market-color-swatch');\n    swatchChangeEvent = await page.spyOnEvent('marketColorSwatchSelectedChange');\n\n    await element.click();\n    await page.waitForChanges();\n\n    expect(swatchChangeEvent).not.toHaveReceivedEventTimes(1);\n  });\n});\n"]}