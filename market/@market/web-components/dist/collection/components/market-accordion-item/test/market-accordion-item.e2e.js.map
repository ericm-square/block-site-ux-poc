{"version":3,"file":"market-accordion-item.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-accordion-item/test/market-accordion-item.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAiC,MAAM,uBAAuB,CAAC;AAElF,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,IAAI,IAAa,CAAC;IAClB,IAAI,OAAmB,CAAC;IACxB,IAAI,MAAkB,CAAC;IACvB,IAAI,mBAA6B,CAAC;IAElC,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAC1B,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;KAKrB,CAAC,CAAC;QACH,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACnD,MAAM,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC7C,mBAAmB,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,mCAAmC,CAAC,CAAC;IACnF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC5C,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC;QACjE,MAAM,CAAC,MAAM,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;QACrB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,mBAAmB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACxD,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAExD,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;QACrB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,mBAAmB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACxD,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACrE,MAAM,CAAC,MAAM,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,8CAA8C,EAAE,GAAG,EAAE;QAC5D,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC,EAAE,EAAE,EAAE;gBAC/C,EAAE,CAAC,gBAAgB,CAAC,mCAAmC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC;YACH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;YAC9D,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-accordion-item', () => {\n  let page: E2EPage;\n  let element: E2EElement;\n  let button: E2EElement;\n  let expandedChangeEvent: EventSpy;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-accordion-item name=\"mock-accordion\">\n        <span slot=\"label\">Accordion Label</span>\n        <p id=\"content\">mockContent</p>\n      </market-accordion-item>\n    `);\n    element = await page.find('market-accordion-item');\n    button = await element.find('pierce/button');\n    expandedChangeEvent = await page.spyOnEvent('marketAccordionItemExpandedChange');\n  });\n\n  it('renders', async () => {\n    expect(element).toHaveAttribute('hydrated');\n    expect(button.innerHTML).toContain('<slot name=\"label\"></slot>');\n    expect(await element.find('pierce/div')).toBeNull();\n  });\n\n  it('opens and closes when the label button is clicked', async () => {\n    await button.click();\n    await page.waitForChanges();\n    expect(expandedChangeEvent).toHaveReceivedEventTimes(1);\n    expect(expandedChangeEvent.lastEvent.detail.expanded).toEqual(true);\n    expect(await element.find('pierce/div')).not.toBeNull();\n\n    await button.click();\n    await page.waitForChanges();\n    expect(expandedChangeEvent).toHaveReceivedEventTimes(2);\n    expect(expandedChangeEvent.lastEvent.detail.expanded).toEqual(false);\n    expect(await element.find('pierce/div')).toBeNull();\n  });\n\n  describe('when preventDefault() is called on the event', () => {\n    beforeEach(async () => {\n      await page.$eval('market-accordion-item', (el) => {\n        el.addEventListener('marketAccordionItemExpandedChange', (e) => e.preventDefault());\n      });\n      await page.waitForChanges();\n    });\n\n    it('does NOT open when the label button is clicked', async () => {\n      await button.click();\n      await page.waitForChanges();\n      expect(await element.find('pierce/div')).toBeNull();\n    });\n  });\n});\n"]}