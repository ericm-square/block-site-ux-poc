{"version":3,"file":"market-accordion-item.spec.js","sourceRoot":"","sources":["../../../../../src/components/market-accordion-item/test/market-accordion-item.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAEpD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAE/D,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,mBAAmB,CAAC;YACjC,IAAI,EAAE,oHAAoH;SAC3H,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;KAa7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,mBAAmB,CAAC;YACjC,IAAI,EAAE;;;;;OAKL;SACF,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;KAgB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,mBAAmB,CAAC;YACjC,IAAI,EAAE;;;;;OAKL;SACF,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;KAa7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;QACnD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,mBAAmB,CAAC;YACjC,IAAI,EAAE,6HAA6H;SACpI,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;KAa7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\n\nimport { MarketAccordionItem } from '../market-accordion-item';\n\ndescribe('market-accordion-item', () => {\n  it('renders a market accordion', async () => {\n    const page = await newSpecPage({\n      components: [MarketAccordionItem],\n      html: '<market-accordion-item name=\"mockId\"><span slot=\"label\">mockLabel</span><p>mockContent</p></market-accordion-item>',\n    });\n\n    expect(page.root).toEqualHtml(`\n      <market-accordion-item class=\"market-accordion-item\" name=\"mockId\" size=\"medium\">\n        <mock:shadow-root>\n          <h3>\n           <button aria-controls=\"mockId__content\" id=\"mockId__button\" type=\"button\">\n             <slot name=\"label\"></slot>\n             <market-icon name=\"chevron-down\"></market-icon>\n           </button>\n         </h3>\n        </mock:shadow-root>\n        <span slot=\"label\">mockLabel</span>\n        <p>mockContent</p>\n      </market-accordion-item>\n    `);\n  });\n\n  it('renders an expanded market accordion', async () => {\n    const page = await newSpecPage({\n      components: [MarketAccordionItem],\n      html: `\n        <market-accordion-item name=\"mockId\" expanded>\n            <span slot=\"label\">mockLabel</span>\n            <p>mockContent</p>\n        </market-accordion-item>\n      `,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <market-accordion-item class=\"market-accordion-item\" name=\"mockId\" expanded size=\"medium\">\n        <mock:shadow-root>\n          <h3>\n           <button aria-controls=\"mockId__content\" id=\"mockId__button\" aria-expanded=\"\" type=\"button\">\n             <slot name=\"label\"></slot>\n             <market-icon name=\"chevron-down\"></market-icon>\n           </button>\n          </h3>\n          <div aria-labelledby=\"mockId__button\" class=\"accordion-content\" id=\"mockId__content\" role=\"region\">\n           <slot></slot>\n          </div>\n        </mock:shadow-root>\n        <span slot=\"label\">mockLabel</span>\n        <p>mockContent</p>\n      </market-accordion-item>\n    `);\n  });\n\n  it('renders a small market accordion', async () => {\n    const page = await newSpecPage({\n      components: [MarketAccordionItem],\n      html: `\n        <market-accordion-item name=\"mockId\" size=\"small\">\n          <span slot=\"label\">mockLabel</span>\n          <p>mockContent</p>\n        </market-accordion-item>\n      `,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <market-accordion-item class=\"market-accordion-item\" name=\"mockId\" size=\"small\">\n        <mock:shadow-root>\n          <h4>\n           <button aria-controls=\"mockId__content\" id=\"mockId__button\" type=\"button\">\n             <slot name=\"label\"></slot>\n             <market-icon name=\"chevron-down\"></market-icon>\n           </button>\n         </h4>\n        </mock:shadow-root>\n        <span slot=\"label\">mockLabel</span>\n        <p>mockContent</p>\n      </market-accordion-item>\n    `);\n  });\n\n  it('renders a disabled market accordion', async () => {\n    const page = await newSpecPage({\n      components: [MarketAccordionItem],\n      html: '<market-accordion-item name=\"mockId\" disabled><span slot=\"label\">mockLabel</span><p>mockContent</p></market-accordion-item>',\n    });\n\n    expect(page.root).toEqualHtml(`\n      <market-accordion-item class=\"market-accordion-item\" name=\"mockId\" size=\"medium\" disabled=\"\">\n        <mock:shadow-root>\n          <h3>\n           <button aria-controls=\"mockId__content\" id=\"mockId__button\" aria-disabled=\"\" disabled=\"\" type=\"button\">\n             <slot name=\"label\"></slot>\n             <market-icon name=\"chevron-down\"></market-icon>\n           </button>\n         </h3>\n        </mock:shadow-root>\n        <span slot=\"label\">mockLabel</span>\n        <p>mockContent</p>\n      </market-accordion-item>\n    `);\n  });\n});\n"]}