{"version":3,"file":"market-progress-tracker.interactive.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-progress-tracker/test/market-progress-tracker.interactive.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EElement, E2EPage, EventSpy, newE2EPage } from '@stencil/core/testing';\n\ndescribe('market-progress-tracker: interactive', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let stepEls: E2EElement[];\n  let marketProgressTrackerStepClickSpy: EventSpy;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n  });\n\n  async function setContent(html: string) {\n    await page.setContent(html);\n    await page.waitForChanges();\n    el = await page.find('market-progress-tracker');\n    stepEls = await el.findAll('market-progress-tracker-step');\n    marketProgressTrackerStepClickSpy = await page.spyOnEvent('marketProgressTrackerStepClick');\n  }\n\n  it('renders with default attributes and props; steps are also interactive', async () => {\n    await setContent(`\n      <market-progress-tracker\n        interactive\n        orientation=\"horizontal\"\n      >\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 1</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 2</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 3</label>\n        </market-progress-tracker-step>\n      </market-progress-tracker>\n    `);\n\n    expect(el).toHaveAttribute('interactive');\n    expect(await el.getProperty('interactive')).toStrictEqual(true);\n\n    expect(el).toEqualAttribute('orientation', 'horizontal');\n    expect(await el.getProperty('orientation')).toStrictEqual('horizontal');\n\n    expect(stepEls[0]).toHaveAttribute('interactive');\n    expect(await stepEls[0].getProperty('interactive')).toStrictEqual(true);\n\n    expect(stepEls[1]).toHaveAttribute('interactive');\n    expect(await stepEls[1].getProperty('interactive')).toStrictEqual(true);\n\n    expect(stepEls[2]).toHaveAttribute('interactive');\n    expect(await stepEls[2].getProperty('interactive')).toStrictEqual(true);\n  });\n\n  describe('clicking on a step', () => {\n    describe('when current-step-index is defined', () => {\n      it('updates current-step-index when a step is clicked', async () => {\n        await setContent(`\n          <market-progress-tracker\n            current-step-index=\"-1\"\n            interactive\n            orientation=\"horizontal\"\n          >\n            <market-progress-tracker-step>\n              <label slot=\"label\">Step 1</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step>\n              <label slot=\"label\">Step 2</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step>\n              <label slot=\"label\">Step 3</label>\n            </market-progress-tracker-step>\n          </market-progress-tracker>\n        `);\n\n        await stepEls[0].click();\n        expect(el).toEqualAttribute('current-step-index', '0');\n\n        await stepEls[1].click();\n        expect(el).toEqualAttribute('current-step-index', '1');\n\n        await stepEls[2].click();\n        expect(el).toEqualAttribute('current-step-index', '2');\n\n        // can return to a previous step\n        await stepEls[1].click();\n        expect(el).toEqualAttribute('current-step-index', '1');\n\n        await stepEls[0].click();\n        expect(el).toEqualAttribute('current-step-index', '0');\n      });\n\n      it('emits marketProgressTrackerStepClick when a step is clicked', async () => {\n        await setContent(`\n          <market-progress-tracker\n            current-step-index=\"-1\"\n            interactive\n            orientation=\"horizontal\"\n          >\n            <market-progress-tracker-step name=\"step-1\">\n              <label slot=\"label\">Step 1</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step name=\"step-2\">\n              <label slot=\"label\">Step 2</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step name=\"step-3\">\n              <label slot=\"label\">Step 3</label>\n            </market-progress-tracker-step>\n          </market-progress-tracker>\n        `);\n\n        await stepEls[0].click();\n        expect(marketProgressTrackerStepClickSpy.length).toStrictEqual(1);\n        expect(marketProgressTrackerStepClickSpy).toHaveReceivedEventDetail({\n          index: 0,\n          name: 'step-1',\n        });\n\n        await stepEls[1].click();\n        expect(marketProgressTrackerStepClickSpy.length).toStrictEqual(2);\n        expect(marketProgressTrackerStepClickSpy).toHaveReceivedEventDetail({\n          index: 1,\n          name: 'step-2',\n        });\n\n        await stepEls[2].click();\n        expect(marketProgressTrackerStepClickSpy.length).toStrictEqual(3);\n        expect(marketProgressTrackerStepClickSpy).toHaveReceivedEventDetail({\n          index: 2,\n          name: 'step-3',\n        });\n      });\n\n      it('emits with the correct event detail when the steps are reversed', async () => {\n        await setContent(`\n          <market-progress-tracker\n            current-step-index=\"-1\"\n            interactive\n            orientation=\"horizontal\"\n            reversed\n          >\n            <market-progress-tracker-step name=\"step-3\">\n              <label slot=\"label\">Step 3</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step name=\"step-2\">\n              <label slot=\"label\">Step 2</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step name=\"step-1\">\n              <label slot=\"label\">Step 1</label>\n            </market-progress-tracker-step>\n          </market-progress-tracker>\n        `);\n\n        await stepEls[2].click();\n        expect(marketProgressTrackerStepClickSpy.length).toStrictEqual(1);\n        expect(marketProgressTrackerStepClickSpy).toHaveReceivedEventDetail({\n          index: 0,\n          name: 'step-1',\n        });\n\n        await stepEls[1].click();\n        expect(marketProgressTrackerStepClickSpy.length).toStrictEqual(2);\n        expect(marketProgressTrackerStepClickSpy).toHaveReceivedEventDetail({\n          index: 1,\n          name: 'step-2',\n        });\n\n        await stepEls[0].click();\n        expect(marketProgressTrackerStepClickSpy.length).toStrictEqual(3);\n        expect(marketProgressTrackerStepClickSpy).toHaveReceivedEventDetail({\n          index: 2,\n          name: 'step-3',\n        });\n      });\n\n      it('does not update when marketProgressTrackerStepClick is cancelled', async () => {\n        await setContent(`\n          <market-progress-tracker\n            current-step-index=\"-1\"\n            interactive\n            orientation=\"horizontal\"\n          >\n            <market-progress-tracker-step name=\"step-1\">\n              <label slot=\"label\">Step 1</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step name=\"step-2\">\n              <label slot=\"label\">Step 2</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step name=\"step-3\">\n              <label slot=\"label\">Step 3</label>\n            </market-progress-tracker-step>\n          </market-progress-tracker>\n        `);\n\n        // apply to all steps\n        await page.$$eval('market-progress-tracker-step', (progressTrackerStepEls) => {\n          progressTrackerStepEls?.forEach((progressTrackerStepEl) => {\n            progressTrackerStepEl.addEventListener('marketProgressTrackerStepClick', (event) => {\n              event.preventDefault();\n            });\n          });\n        });\n\n        await stepEls[0].click();\n        expect(el).toEqualAttribute('current-step-index', '-1');\n\n        await stepEls[1].click();\n        expect(el).toEqualAttribute('current-step-index', '-1');\n\n        await stepEls[2].click();\n        expect(el).toEqualAttribute('current-step-index', '-1');\n      });\n    });\n\n    describe('when current-step-index is not defined', () => {\n      it('does not update current-step-index when a step is clicked', async () => {\n        await setContent(`\n          <market-progress-tracker\n            interactive\n            orientation=\"horizontal\"\n          >\n            <market-progress-tracker-step>\n              <label slot=\"label\">Step 1</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step>\n              <label slot=\"label\">Step 2</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step>\n              <label slot=\"label\">Step 3</label>\n            </market-progress-tracker-step>\n          </market-progress-tracker>\n        `);\n\n        await stepEls[0].click();\n        expect(el).not.toHaveAttribute('current-step-index');\n\n        await stepEls[1].click();\n        expect(el).not.toHaveAttribute('current-step-index');\n\n        await stepEls[2].click();\n        expect(el).not.toHaveAttribute('current-step-index');\n      });\n\n      it('will not override steps’ active and completed props', async () => {\n        await setContent(`\n          <market-progress-tracker\n            interactive\n            orientation=\"horizontal\"\n          >\n            <market-progress-tracker-step completed>\n              <label slot=\"label\">Step 1</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step active>\n              <label slot=\"label\">Step 2</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step>\n              <label slot=\"label\">Step 3</label>\n            </market-progress-tracker-step>\n          </market-progress-tracker>\n        `);\n\n        expect(await stepEls[0].getProperty('completed')).toStrictEqual(true);\n        expect(await stepEls[1].getProperty('active')).toStrictEqual(true);\n      });\n\n      it('does not update the steps’ active and completed props when a step is clicked', async () => {\n        await setContent(`\n          <market-progress-tracker\n            interactive\n            orientation=\"horizontal\"\n          >\n            <market-progress-tracker-step>\n              <label slot=\"label\">Step 1</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step>\n              <label slot=\"label\">Step 2</label>\n            </market-progress-tracker-step>\n            <market-progress-tracker-step>\n              <label slot=\"label\">Step 3</label>\n            </market-progress-tracker-step>\n          </market-progress-tracker>\n        `);\n\n        await stepEls[0].click();\n        expect(await stepEls[0].getProperty('active')).toStrictEqual(false);\n\n        await stepEls[1].click();\n        expect(el).not.toHaveAttribute('current-step-index');\n        expect(await stepEls[0].getProperty('completed')).toStrictEqual(false);\n        expect(await stepEls[1].getProperty('active')).toStrictEqual(false);\n\n        await stepEls[2].click();\n        expect(el).not.toHaveAttribute('current-step-index');\n        expect(await stepEls[0].getProperty('completed')).toStrictEqual(false);\n        expect(await stepEls[1].getProperty('completed')).toStrictEqual(false);\n        expect(await stepEls[2].getProperty('active')).toStrictEqual(false);\n      });\n    });\n  });\n});\n"]}