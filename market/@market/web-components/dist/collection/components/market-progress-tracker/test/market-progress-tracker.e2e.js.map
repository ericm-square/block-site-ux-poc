{"version":3,"file":"market-progress-tracker.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-progress-tracker/test/market-progress-tracker.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EElement, E2EPage, newE2EPage } from '@stencil/core/testing';\n\ndescribe('market-progress-tracker', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let stepEls: E2EElement[];\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n  });\n\n  async function setContent(html: string) {\n    await page.setContent(html);\n    await page.waitForChanges();\n    el = await page.find('market-progress-tracker');\n    stepEls = await el.findAll('market-progress-tracker-step');\n  }\n\n  it('renders with default attributes and props', async () => {\n    await setContent(`\n      <market-progress-tracker>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 1</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 2</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 3</label>\n        </market-progress-tracker-step>\n      </market-progress-tracker>\n    `);\n\n    expect(await el.isVisible()).toStrictEqual(true);\n    expect(stepEls).toHaveLength(3);\n    expect(await stepEls[0].isVisible()).toStrictEqual(true);\n    expect(await stepEls[1].isVisible()).toStrictEqual(true);\n    expect(await stepEls[2].isVisible()).toStrictEqual(true);\n\n    expect(el).not.toHaveAttribute('connectorless');\n    expect(await el.getProperty('connectorless')).toStrictEqual(false);\n\n    expect(el).not.toHaveAttribute('compact');\n    expect(await el.getProperty('compact')).toStrictEqual(false);\n\n    expect(el).not.toHaveAttribute('currentStepIndex');\n    expect(await el.getProperty('currentStepIndex')).toBeUndefined();\n\n    expect(el).not.toHaveAttribute('indicator');\n    expect(await el.getProperty('indicator')).toBeUndefined();\n\n    expect(el).not.toHaveAttribute('interactive');\n    expect(await el.getProperty('interactive')).toStrictEqual(false);\n\n    expect(el).not.toHaveAttribute('orientation');\n    expect(await el.getProperty('orientation')).toStrictEqual('vertical');\n\n    expect(el).not.toHaveAttribute('reversed');\n    expect(await el.getProperty('reversed')).toStrictEqual(false);\n\n    expect(el).toEqualAttribute('size', 'medium');\n    expect(await el.getProperty('size')).toStrictEqual('medium');\n  });\n\n  it('propagates compact, indicator, interactive, orientation, and size props to child step components', async () => {\n    await setContent(`\n      <market-progress-tracker\n        compact\n        indicator=\"check\"\n        interactive\n        orientation=\"horizontal\"\n        size=\"small\"\n      >\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 1</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 2</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 3</label>\n        </market-progress-tracker-step>\n      </market-progress-tracker>\n    `);\n\n    for (let i = 0; i < 3; ++i) {\n      expect(await stepEls[i].getProperty('compact')).toStrictEqual(true);\n      expect(await stepEls[i].getProperty('indicator')).toStrictEqual('check');\n      expect(await stepEls[i].getProperty('interactive')).toStrictEqual(true);\n      expect(await stepEls[i].getProperty('orientation')).toStrictEqual('horizontal');\n      expect(await stepEls[i].getProperty('size')).toStrictEqual('small');\n    }\n  });\n\n  describe('dynamically adding a new step', () => {\n    beforeEach(async () => {\n      await setContent(`\n        <market-progress-tracker\n          compact\n          current-step-index=\"1\"\n          indicator=\"check\"\n          interactive\n          orientation=\"horizontal\"\n          size=\"small\"\n        >\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 1</label>\n          </market-progress-tracker-step>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 2</label>\n          </market-progress-tracker-step>\n        </market-progress-tracker>\n      `);\n\n      // add a step between \"Step 1\" and \"Step 2\"\n      await page.$eval('market-progress-tracker', (progressTrackerEl) => {\n        const newStepEl = document.createElement('market-progress-tracker-step');\n        newStepEl.textContent = 'Step 1.5';\n        const stepEls = progressTrackerEl.querySelector('market-progress-tracker-step');\n        progressTrackerEl.insertBefore(newStepEl, stepEls[1]);\n      });\n      await page.waitForChanges();\n      stepEls = await el.findAll('market-progress-tracker-step');\n    });\n\n    it('propagates props to the new step', async () => {\n      expect(await stepEls[1].getProperty('compact')).toStrictEqual(true);\n      expect(await stepEls[1].getProperty('indicator')).toStrictEqual('check');\n      expect(await stepEls[1].getProperty('interactive')).toStrictEqual(true);\n      expect(await stepEls[1].getProperty('orientation')).toStrictEqual('horizontal');\n      expect(await stepEls[1].getProperty('size')).toStrictEqual('small');\n    });\n\n    it('updates data-step-index on all steps', () => {\n      expect(stepEls[0]).toEqualAttribute('data-step-index', '0');\n      expect(stepEls[1]).toEqualAttribute('data-step-index', '1');\n      expect(stepEls[2]).toEqualAttribute('data-step-index', '2');\n    });\n\n    it('updates the active and completes props', async () => {\n      expect(await stepEls[0].getProperty('active')).toStrictEqual(false);\n      expect(await stepEls[1].getProperty('active')).toStrictEqual(true);\n      expect(await stepEls[2].getProperty('active')).toStrictEqual(false);\n\n      expect(await stepEls[0].getProperty('completed')).toStrictEqual(true);\n      expect(await stepEls[1].getProperty('completed')).toStrictEqual(false);\n      expect(await stepEls[2].getProperty('completed')).toStrictEqual(false);\n    });\n  });\n});\n"]}