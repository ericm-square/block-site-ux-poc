{"version":3,"file":"market-progress-tracker.current-step-index.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-progress-tracker/test/market-progress-tracker.current-step-index.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAuB,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAExE,QAAQ,CAAC,6CAA6C,EAAE,GAAG,EAAE;IAC3D,IAAI,IAAa,CAAC;IAClB,IAAI,EAAc,CAAC;IACnB,IAAI,OAAqB,CAAC;IAE1B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,KAAK,UAAU,UAAU,CAAC,IAAY;QACpC,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAChD,OAAO,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;IAC7D,CAAC;IAED,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;QAC5B,MAAM,UAAU,CAAC;;;;;;;;;;;;KAYhB,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAEpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACvE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACvE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;QACrB,MAAM,UAAU,CAAC;;;;;;;;;;;;KAYhB,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAEpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACvE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACvE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;QACpB,MAAM,UAAU,CAAC;;;;;;;;;;;;KAYhB,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACnE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAEpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACvE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACvE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;QACpB,MAAM,UAAU,CAAC;;;;;;;;;;;;KAYhB,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACnE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAEpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACvE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;QACpB,MAAM,UAAU,CAAC;;;;;;;;;;;;KAYhB,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEnE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;QACpB,MAAM,UAAU,CAAC;;;;;;;;;;;;KAYhB,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAEpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QACxB,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;YACpB,MAAM,UAAU,CAAC;;;;;;;;;;;;OAYhB,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAEnE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACvE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACvE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;YACpB,MAAM,UAAU,CAAC;;;;;;;;;;;;OAYhB,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACnE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAEpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACvE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACvE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;YACpB,MAAM,UAAU,CAAC;;;;;;;;;;;;OAYhB,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACnE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAEpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACvE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACtE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;YACpB,MAAM,UAAU,CAAC;;;;;;;;;;;;OAYhB,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAEpE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACtE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACtE,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { E2EElement, E2EPage, newE2EPage } from '@stencil/core/testing';\n\ndescribe('market-progress-tracker: current-step-index', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let stepEls: E2EElement[];\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n  });\n\n  async function setContent(html: string) {\n    await page.setContent(html);\n    await page.waitForChanges();\n    el = await page.find('market-progress-tracker');\n    stepEls = await el.findAll('market-progress-tracker-step');\n  }\n\n  it('is undefined', async () => {\n    await setContent(`\n      <market-progress-tracker>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 1</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 2</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 3</label>\n        </market-progress-tracker-step>\n      </market-progress-tracker>\n    `);\n\n    expect(await stepEls[0].getProperty('active')).toStrictEqual(false);\n    expect(await stepEls[1].getProperty('active')).toStrictEqual(false);\n    expect(await stepEls[2].getProperty('active')).toStrictEqual(false);\n\n    expect(await stepEls[0].getProperty('completed')).toStrictEqual(false);\n    expect(await stepEls[1].getProperty('completed')).toStrictEqual(false);\n    expect(await stepEls[2].getProperty('completed')).toStrictEqual(false);\n  });\n\n  it('is -1', async () => {\n    await setContent(`\n      <market-progress-tracker current-step-index=\"-1\">\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 1</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 2</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 3</label>\n        </market-progress-tracker-step>\n      </market-progress-tracker>\n    `);\n\n    expect(await stepEls[0].getProperty('active')).toStrictEqual(false);\n    expect(await stepEls[1].getProperty('active')).toStrictEqual(false);\n    expect(await stepEls[2].getProperty('active')).toStrictEqual(false);\n\n    expect(await stepEls[0].getProperty('completed')).toStrictEqual(false);\n    expect(await stepEls[1].getProperty('completed')).toStrictEqual(false);\n    expect(await stepEls[2].getProperty('completed')).toStrictEqual(false);\n  });\n\n  it('is 0', async () => {\n    await setContent(`\n      <market-progress-tracker current-step-index=\"0\">\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 1</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 2</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 3</label>\n        </market-progress-tracker-step>\n      </market-progress-tracker>\n    `);\n\n    expect(await stepEls[0].getProperty('active')).toStrictEqual(true);\n    expect(await stepEls[1].getProperty('active')).toStrictEqual(false);\n    expect(await stepEls[2].getProperty('active')).toStrictEqual(false);\n\n    expect(await stepEls[0].getProperty('completed')).toStrictEqual(false);\n    expect(await stepEls[1].getProperty('completed')).toStrictEqual(false);\n    expect(await stepEls[2].getProperty('completed')).toStrictEqual(false);\n  });\n\n  it('is 1', async () => {\n    await setContent(`\n      <market-progress-tracker current-step-index=\"1\">\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 1</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 2</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 3</label>\n        </market-progress-tracker-step>\n      </market-progress-tracker>\n    `);\n\n    expect(await stepEls[0].getProperty('active')).toStrictEqual(false);\n    expect(await stepEls[1].getProperty('active')).toStrictEqual(true);\n    expect(await stepEls[2].getProperty('active')).toStrictEqual(false);\n\n    expect(await stepEls[0].getProperty('completed')).toStrictEqual(true);\n    expect(await stepEls[1].getProperty('completed')).toStrictEqual(false);\n    expect(await stepEls[2].getProperty('completed')).toStrictEqual(false);\n  });\n\n  it('is 2', async () => {\n    await setContent(`\n      <market-progress-tracker current-step-index=\"2\">\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 1</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 2</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 3</label>\n        </market-progress-tracker-step>\n      </market-progress-tracker>\n    `);\n\n    expect(await stepEls[0].getProperty('active')).toStrictEqual(false);\n    expect(await stepEls[1].getProperty('active')).toStrictEqual(false);\n    expect(await stepEls[2].getProperty('active')).toStrictEqual(true);\n\n    expect(await stepEls[0].getProperty('completed')).toStrictEqual(true);\n    expect(await stepEls[1].getProperty('completed')).toStrictEqual(true);\n    expect(await stepEls[2].getProperty('completed')).toStrictEqual(false);\n  });\n\n  it('is 3', async () => {\n    await setContent(`\n      <market-progress-tracker current-step-index=\"3\">\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 1</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 2</label>\n        </market-progress-tracker-step>\n        <market-progress-tracker-step>\n          <label slot=\"label\">Step 3</label>\n        </market-progress-tracker-step>\n      </market-progress-tracker>\n    `);\n\n    expect(await stepEls[0].getProperty('active')).toStrictEqual(false);\n    expect(await stepEls[1].getProperty('active')).toStrictEqual(false);\n    expect(await stepEls[2].getProperty('active')).toStrictEqual(false);\n\n    expect(await stepEls[0].getProperty('completed')).toStrictEqual(true);\n    expect(await stepEls[1].getProperty('completed')).toStrictEqual(true);\n    expect(await stepEls[2].getProperty('completed')).toStrictEqual(true);\n  });\n\n  describe('reversed', () => {\n    it('is 0', async () => {\n      await setContent(`\n        <market-progress-tracker current-step-index=\"0\" reversed>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 3</label>\n          </market-progress-tracker-step>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 2</label>\n          </market-progress-tracker-step>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 1</label>\n          </market-progress-tracker-step>\n        </market-progress-tracker>\n      `);\n\n      expect(await stepEls[0].getProperty('active')).toStrictEqual(false);\n      expect(await stepEls[1].getProperty('active')).toStrictEqual(false);\n      expect(await stepEls[2].getProperty('active')).toStrictEqual(true);\n\n      expect(await stepEls[0].getProperty('completed')).toStrictEqual(false);\n      expect(await stepEls[1].getProperty('completed')).toStrictEqual(false);\n      expect(await stepEls[2].getProperty('completed')).toStrictEqual(false);\n    });\n\n    it('is 1', async () => {\n      await setContent(`\n        <market-progress-tracker current-step-index=\"1\" reversed>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 3</label>\n          </market-progress-tracker-step>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 2</label>\n          </market-progress-tracker-step>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 1</label>\n          </market-progress-tracker-step>\n        </market-progress-tracker>\n      `);\n\n      expect(await stepEls[0].getProperty('active')).toStrictEqual(false);\n      expect(await stepEls[1].getProperty('active')).toStrictEqual(true);\n      expect(await stepEls[2].getProperty('active')).toStrictEqual(false);\n\n      expect(await stepEls[0].getProperty('completed')).toStrictEqual(false);\n      expect(await stepEls[1].getProperty('completed')).toStrictEqual(false);\n      expect(await stepEls[2].getProperty('completed')).toStrictEqual(true);\n    });\n\n    it('is 2', async () => {\n      await setContent(`\n        <market-progress-tracker current-step-index=\"2\" reversed>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 3</label>\n          </market-progress-tracker-step>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 2</label>\n          </market-progress-tracker-step>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 1</label>\n          </market-progress-tracker-step>\n        </market-progress-tracker>\n      `);\n\n      expect(await stepEls[0].getProperty('active')).toStrictEqual(true);\n      expect(await stepEls[1].getProperty('active')).toStrictEqual(false);\n      expect(await stepEls[2].getProperty('active')).toStrictEqual(false);\n\n      expect(await stepEls[0].getProperty('completed')).toStrictEqual(false);\n      expect(await stepEls[1].getProperty('completed')).toStrictEqual(true);\n      expect(await stepEls[2].getProperty('completed')).toStrictEqual(true);\n    });\n\n    it('is 3', async () => {\n      await setContent(`\n        <market-progress-tracker current-step-index=\"3\" reversed>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 3</label>\n          </market-progress-tracker-step>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 2</label>\n          </market-progress-tracker-step>\n          <market-progress-tracker-step>\n            <label slot=\"label\">Step 1</label>\n          </market-progress-tracker-step>\n        </market-progress-tracker>\n      `);\n\n      expect(await stepEls[0].getProperty('active')).toStrictEqual(false);\n      expect(await stepEls[1].getProperty('active')).toStrictEqual(false);\n      expect(await stepEls[2].getProperty('active')).toStrictEqual(false);\n\n      expect(await stepEls[0].getProperty('completed')).toStrictEqual(true);\n      expect(await stepEls[1].getProperty('completed')).toStrictEqual(true);\n      expect(await stepEls[2].getProperty('completed')).toStrictEqual(true);\n    });\n  });\n});\n"]}