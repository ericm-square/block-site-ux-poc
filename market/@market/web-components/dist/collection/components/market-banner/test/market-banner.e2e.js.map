{"version":3,"file":"market-banner.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-banner/test/market-banner.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EElement, E2EPage, EventSpy, newE2EPage } from '@stencil/core/testing';\n\ndescribe('market-banner', () => {\n  it('renders with defaults', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-banner>Good news, everyone!</market-banner>');\n\n    const el = await page.find('market-banner');\n\n    expect(el).not.toBeNull();\n\n    expect(await el.getProperty('variant')).toBe('info');\n    expect(el.textContent).toBe('Good news, everyone!');\n  });\n\n  it('renders with a title', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-banner>\n        <span slot=\"title\">Title</span>\n        Good news, everyone!\n      </market-banner>\n    `);\n\n    const el = await page.find('market-banner');\n    const headerEl = await el.find('pierce/header');\n\n    const defaultSlotText = await page.$eval('market-banner', (bannerEl) => {\n      const defaultSlot: HTMLSlotElement = bannerEl.shadowRoot.querySelector('section > slot');\n      return defaultSlot\n        .assignedNodes()\n        .reduce((result, node) => result + node.textContent, '')\n        .trim();\n    });\n    expect(defaultSlotText).toStrictEqual('Good news, everyone!');\n\n    const titleSlotText = await page.$eval('market-banner', (bannerEl) => {\n      const titleSlot: HTMLSlotElement = bannerEl.shadowRoot.querySelector('slot[name=\"title\"]');\n      return titleSlot.assignedNodes()[0].textContent.trim();\n    });\n    expect(titleSlotText).toStrictEqual('Title');\n    expect(await headerEl.isVisible()).toStrictEqual(true);\n  });\n\n  describe('dismissable banners', () => {\n    let page: E2EPage;\n    let banner: E2EElement;\n    let button: E2EElement;\n\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent('<market-banner dismissable>Good news, everyone!</market-banner>');\n      banner = await page.find('market-banner');\n      button = await banner.find('pierce/.dismiss-container button');\n    });\n\n    describe('when the dismissable X is clicked', () => {\n      let eventSpy: EventSpy;\n\n      beforeEach(async () => {\n        eventSpy = await banner.spyOnEvent('marketBannerDismissed');\n        await button.click();\n        await page.waitForChanges();\n      });\n\n      it('removes itself from the page', async () => {\n        const bannerAfter = await page.find('market-banner');\n        expect(bannerAfter).toBeNull();\n      });\n\n      it('emits a dismiss event', () => {\n        expect(eventSpy).toHaveReceivedEventTimes(1);\n      });\n    });\n\n    describe('when preventDefault() is called on the dismiss event', () => {\n      beforeEach(async () => {\n        await page.$eval('market-banner', (el) => {\n          el.addEventListener('marketBannerDismissed', (e) => e.preventDefault());\n        });\n        await page.waitForChanges();\n      });\n\n      it('does NOT remove itself from the page when the dismissable X is clicked', async () => {\n        await button.click();\n        await page.waitForChanges();\n\n        const bannerAfter = await page.find('market-banner');\n        expect(bannerAfter).not.toBeNull();\n      });\n    });\n  });\n});\n"]}