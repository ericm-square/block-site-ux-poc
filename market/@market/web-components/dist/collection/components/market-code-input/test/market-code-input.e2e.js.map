{"version":3,"file":"market-code-input.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-code-input/test/market-code-input.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EPage, newE2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\nimport { expectValueToBe, expectInputHasFocus } from './utils';\n\ndescribe('market-code-input', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let marketCodeInputValueChange: EventSpy;\n\n  it('renders with defaults', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input></market-code-input>');\n\n    el = await page.find('market-code-input');\n    expect(el).not.toBeNull();\n\n    const inputs = el.shadowRoot.querySelectorAll('input');\n    expect(inputs.length).toBe(4);\n\n    const input = inputs[0];\n\n    expect(input).not.toBeNull();\n\n    expect(input).toEqualAttribute('autocomplete', 'one-time-code');\n    expect(input).toEqualAttribute('type', 'text');\n    expect(input).toEqualAttribute('inputmode', 'numeric');\n    expect(input).toEqualAttribute('name', null);\n    expect(input).toEqualAttribute('value', null);\n    expect(input).toEqualAttribute('placeholder', '●');\n  });\n\n  it('can have a passed in value', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input value=\"5476\"></market-code-input>');\n    el = await page.find('market-code-input');\n\n    await expectValueToBe(el, '5476');\n  });\n\n  it('sanitizes the passed in value', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input value=\"1 a 2 b 3 c 4 d 5 e\"></market-code-input>');\n    el = await page.find('market-code-input');\n\n    await expectValueToBe(el, '1234');\n  });\n\n  it('can specify the length of the code', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input length=\"6\"></market-code-input>');\n\n    el = await page.find('market-code-input');\n    const inputs = el.shadowRoot.querySelectorAll('input');\n    expect(inputs.length).toBe(6);\n  });\n\n  it('can have a trailing accessory', async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-code-input>\n        <svg slot=\"trailing-accessory\"/>\n      </market-code-input>\n    `);\n\n    const accessory = await page.find('market-code-input svg');\n    expect(accessory).not.toBeNull();\n    expect(accessory.getAttribute('slot')).toEqual('trailing-accessory');\n  });\n\n  it('can change value programmatically', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input value=\"1234\"></market-code-input>');\n\n    el = await page.find('market-code-input');\n    marketCodeInputValueChange = await el.spyOnEvent('marketCodeInputValueChange');\n\n    await page.$eval('market-code-input', (el: HTMLMarketCodeInputElement) => {\n      el.value = '4321';\n    });\n    await page.waitForChanges();\n\n    // does change the value\n    await expectValueToBe(el, '4321');\n\n    // does not emit an event\n    expect(marketCodeInputValueChange).not.toHaveReceivedEvent();\n  });\n\n  it('only allows numeric input by default', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input></market-code-input>');\n\n    el = await page.find('market-code-input');\n    marketCodeInputValueChange = await el.spyOnEvent('marketCodeInputValueChange');\n\n    await el.click();\n\n    // input 1st digit\n    await expectInputHasFocus(el, 0);\n    await page.keyboard.press('1');\n    await page.waitForChanges();\n    await expectValueToBe(el, '1');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(1);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1');\n\n    // try to input non-digit; prevents input & change event\n    await expectInputHasFocus(el, 1);\n    await page.keyboard.press('A');\n    await page.waitForChanges();\n    await expectValueToBe(el, '1');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(1);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1');\n\n    // input 2nd digit\n    await expectInputHasFocus(el, 1);\n    await page.keyboard.press('2');\n    await page.waitForChanges();\n    await expectValueToBe(el, '12');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(2);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('12');\n  });\n\n  it('allows non-numeric input if type is set to text', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input type=\"text\"></market-code-input>');\n\n    el = await page.find('market-code-input');\n    marketCodeInputValueChange = await el.spyOnEvent('marketCodeInputValueChange');\n\n    await el.click();\n\n    // input 1st digit\n    await expectInputHasFocus(el, 0);\n    await page.keyboard.press('1');\n    await page.waitForChanges();\n    await expectValueToBe(el, '1');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(1);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1');\n\n    // input non-numeric char\n    await expectInputHasFocus(el, 1);\n    await page.keyboard.press('A');\n    await page.waitForChanges();\n    await expectValueToBe(el, '1A');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(2);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1A');\n  });\n\n  it('allows non-numeric input if type is set to password', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input type=\"password\"></market-code-input>');\n\n    el = await page.find('market-code-input');\n    marketCodeInputValueChange = await el.spyOnEvent('marketCodeInputValueChange');\n\n    await el.click();\n\n    // input 1st digit\n    await expectInputHasFocus(el, 0);\n    await page.keyboard.press('1');\n    await page.waitForChanges();\n    await expectValueToBe(el, '1');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(1);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1');\n\n    // input non-numeric char\n    await expectInputHasFocus(el, 1);\n    await page.keyboard.press('A');\n    await page.waitForChanges();\n    await expectValueToBe(el, '1A');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(2);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1A');\n  });\n\n  it('does NOT allow whitespace', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input type=\"text\"></market-code-input>');\n\n    el = await page.find('market-code-input');\n    marketCodeInputValueChange = await el.spyOnEvent('marketCodeInputValueChange');\n\n    await el.click();\n\n    // input 1st digit\n    await expectInputHasFocus(el, 0);\n    await page.keyboard.press('1');\n    await page.waitForChanges();\n    await expectValueToBe(el, '1');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(1);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1');\n\n    // try to whitespace; prevents input & change event\n    await expectInputHasFocus(el, 1);\n    await page.keyboard.press(' ');\n    await page.waitForChanges();\n    await expectValueToBe(el, '1');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(1);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1');\n\n    // input 2nd digit\n    await expectInputHasFocus(el, 1);\n    await page.keyboard.press('2');\n    await page.waitForChanges();\n    await expectValueToBe(el, '12');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(2);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('12');\n  });\n\n  it('focuses the first empty input on click', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input value=\"12\"></market-code-input>');\n\n    el = await page.find('market-code-input');\n    const lastInput = await el.find('pierce/input:last-of-type');\n    await lastInput.click();\n\n    await expectInputHasFocus(el, 2);\n  });\n\n  it('focuses the first empty input on inner input click', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input value=\"1\"></market-code-input>');\n\n    el = await page.find('market-code-input');\n    const shadowInputs = await el.findAll('pierce/input');\n\n    await shadowInputs[2].click();\n\n    await expectInputHasFocus(el, 1);\n  });\n\n  it('ensures only single characters are in each input field', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input value=\"1234\"></market-code-input>');\n\n    el = await page.find('market-code-input');\n\n    const firstInput = await el.find('pierce/input:first-of-type');\n    await firstInput.click(); // select 1 in first input\n    await page.keyboard.press('ArrowUp'); // remove selection and move cursor to the left of 1\n    await page.keyboard.press('5'); // insert 5 before 1 in first input\n    await page.waitForChanges();\n\n    // replaces 1 with 5 in first input\n    await expectValueToBe(el, '5234');\n  });\n\n  it('can prevent default on marketCodeInputValueChange', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-code-input></market-code-input>');\n\n    await page.$eval('market-code-input', (el: HTMLMarketCodeInputElement) => {\n      el.addEventListener('marketCodeInputValueChange', (e: Event) => {\n        e.preventDefault();\n      });\n    });\n\n    el = await page.find('market-code-input');\n\n    // on keyboard input, value doesn't change\n    await el.click();\n    await expectInputHasFocus(el, 0);\n    await page.keyboard.press('1');\n    await page.waitForChanges();\n    await expectValueToBe(el, '');\n\n    // value can still be changed programmatically\n    await page.$eval('market-code-input', (el: HTMLMarketCodeInputElement) => {\n      el.value = '4321';\n    });\n    await page.waitForChanges();\n    await expectValueToBe(el, '4321');\n  });\n\n  // can't get this to work :(((\n  describe.skip('when the clipboard has text', () => {\n    let clipboardContents = '';\n\n    beforeEach(() => {\n      Object.assign(navigator, {\n        clipboard: {\n          writeText: jest.fn((text) => {\n            clipboardContents = text;\n          }),\n          readText: jest.fn(() => clipboardContents),\n        },\n      });\n    });\n\n    it('allows pasting a value', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <input id=\"copy-me\" value=\"1234\" />\n        <market-code-input></market-code-input>\n      `);\n\n      el = await page.find('market-code-input');\n\n      // copy\n      expect(await page.find('*:focus')).toBeNull();\n      await page.keyboard.press('Tab');\n      expect(await page.find('#copy-me:focus')).not.toBeNull();\n      await page.keyboard.down('Meta');\n      await page.keyboard.press('C');\n      await page.keyboard.up('Meta');\n\n      // paste\n      await el.click();\n      await page.keyboard.down('Meta');\n      await page.keyboard.press('V');\n      await page.keyboard.up('Meta');\n      await page.waitForChanges();\n\n      // None of these pass\n      expect(await el.getProperty('value')).toBe('1234');\n      expect(window.navigator.clipboard.writeText).toHaveBeenCalled();\n      expect(window.navigator.clipboard.readText).toHaveBeenCalled();\n    });\n  });\n});\n"]}