{"version":3,"file":"market-code-input.keyboard.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-code-input/test/market-code-input.keyboard.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\nimport { expectValueToBe, expectInputHasFocus } from './utils';\n\ndescribe('market-code-input: keyboard interactivity', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let marketCodeInputValueChange: EventSpy;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-code-input></market-code-input>\n    `);\n\n    el = await page.find('market-code-input');\n    marketCodeInputValueChange = await el.spyOnEvent('marketCodeInputValueChange');\n  });\n\n  it('can be tabbed in & out of', async () => {\n    expect(el).not.toHaveAttribute('focused');\n    await page.keyboard.press('Tab');\n    await page.waitForChanges();\n    expect(el).toHaveAttribute('focused');\n    await page.keyboard.press('Tab');\n    await page.waitForChanges();\n    expect(el).not.toHaveAttribute('focused');\n  });\n\n  it('cannot be tabbed into while disabled', async () => {\n    el.setProperty('disabled', true);\n    await page.waitForChanges();\n    await page.keyboard.press('Tab');\n    await page.waitForChanges();\n    expect(el).not.toHaveAttribute('focused');\n  });\n\n  it('accepts input sequentially and properly emits events', async () => {\n    // focus first input\n    await page.keyboard.press('Tab');\n    await page.waitForChanges();\n\n    // input 1st digit\n    await expectInputHasFocus(el, 0);\n    await page.keyboard.press('1');\n    await page.waitForChanges();\n    await expectValueToBe(el, '1');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(1);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1');\n\n    // input 2nd digit\n    await expectInputHasFocus(el, 1);\n    await page.keyboard.press('2');\n    await page.waitForChanges();\n    await expectValueToBe(el, '12');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(2);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('12');\n\n    // input 3rd digit\n    await expectInputHasFocus(el, 2);\n    await page.keyboard.press('3');\n    await page.waitForChanges();\n    await expectValueToBe(el, '123');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(3);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('123');\n\n    // input 4th digit\n    await expectInputHasFocus(el, 3);\n    await page.keyboard.press('4');\n    await page.waitForChanges();\n    await expectValueToBe(el, '1234');\n    expect(marketCodeInputValueChange).toHaveReceivedEventTimes(4);\n    expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1234');\n  });\n\n  describe('when the component has a value', () => {\n    beforeEach(async () => {\n      el.setProperty('value', '1234');\n      await page.keyboard.press('Tab');\n      await page.waitForChanges();\n    });\n\n    it('navigates between inputs with arrow keys', async () => {\n      // first input has focus\n      await expectInputHasFocus(el, 0);\n\n      // navigate to the last input\n      await page.keyboard.press('ArrowRight');\n      await page.keyboard.press('ArrowRight');\n      await page.keyboard.press('ArrowRight');\n      await expectInputHasFocus(el, 3);\n\n      // change last value, focus remains on last input\n      await page.keyboard.press('5');\n      await page.waitForChanges();\n      await expectInputHasFocus(el, 3);\n      await expectValueToBe(el, '1235');\n      expect(marketCodeInputValueChange).toHaveReceivedEventTimes(1);\n      expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1235');\n\n      // navigate back to the first input\n      await page.keyboard.press('ArrowLeft');\n      await page.keyboard.press('ArrowLeft');\n      await page.keyboard.press('ArrowLeft');\n      await expectInputHasFocus(el, 0);\n\n      // change first value, focus moves to 2nd input\n      await page.keyboard.press('6');\n      await page.waitForChanges();\n      await expectInputHasFocus(el, 1);\n      await expectValueToBe(el, '6235');\n      expect(marketCodeInputValueChange).toHaveReceivedEventTimes(2);\n      expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('6235');\n    });\n\n    it('navigates between inputs with tab key', async () => {\n      // first input has focus\n      await expectInputHasFocus(el, 0);\n\n      // navigate to the last input\n      await page.keyboard.press('Tab');\n      await page.keyboard.press('Tab');\n      await page.keyboard.press('Tab');\n      await expectInputHasFocus(el, 3);\n\n      // change last value, focus remains on last input\n      await page.keyboard.press('5');\n      await page.waitForChanges();\n      await expectInputHasFocus(el, 3);\n      await expectValueToBe(el, '1235');\n      expect(marketCodeInputValueChange).toHaveReceivedEventTimes(1);\n      expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1235');\n\n      // navigate back to the first input\n      await page.keyboard.down('Shift');\n      await page.keyboard.press('Tab');\n      await page.keyboard.press('Tab');\n      await page.keyboard.press('Tab');\n      await page.keyboard.up('Shift');\n      await expectInputHasFocus(el, 0);\n\n      // change first value, focus moves to 2nd input\n      await page.keyboard.press('6');\n      await page.waitForChanges();\n      await expectInputHasFocus(el, 1);\n      await expectValueToBe(el, '6235');\n      expect(marketCodeInputValueChange).toHaveReceivedEventTimes(2);\n      expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('6235');\n    });\n\n    it('deletes input values with backspace key', async () => {\n      // first input has focus\n      await expectInputHasFocus(el, 0);\n\n      // navigate to the last input\n      await page.keyboard.press('Tab');\n      await page.keyboard.press('Tab');\n      await page.keyboard.press('Tab');\n      await expectInputHasFocus(el, 3);\n\n      // delete last value, focus remains on last input\n      await page.keyboard.press('Backspace');\n      await page.waitForChanges();\n      await expectInputHasFocus(el, 3);\n      await expectValueToBe(el, '123');\n      expect(marketCodeInputValueChange).toHaveReceivedEventTimes(1);\n      expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('123');\n\n      // delete 3rd value, focus moves to 3rd input\n      await page.keyboard.press('Backspace');\n      await page.waitForChanges();\n      await expectInputHasFocus(el, 2);\n      await expectValueToBe(el, '12');\n      expect(marketCodeInputValueChange).toHaveReceivedEventTimes(2);\n      expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('12');\n\n      // delete 2nd value, focus moves to 2nd input\n      await page.keyboard.press('Backspace');\n      await page.waitForChanges();\n      await expectInputHasFocus(el, 1);\n      await expectValueToBe(el, '1');\n      expect(marketCodeInputValueChange).toHaveReceivedEventTimes(3);\n      expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1');\n\n      // delete 1st value, focus moves to 1st input\n      await page.keyboard.press('Backspace');\n      await page.waitForChanges();\n      await expectInputHasFocus(el, 0);\n      await expectValueToBe(el, '');\n      expect(marketCodeInputValueChange).toHaveReceivedEventTimes(4);\n      expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('');\n    });\n\n    it('can delete a middle input value and shift over the rest', async () => {\n      // first input has focus\n      await expectInputHasFocus(el, 0);\n\n      // navigate to the 2nd input\n      await page.keyboard.press('Tab');\n      await expectInputHasFocus(el, 1);\n\n      // delete 2nd value, focus remains on 2nd input\n      await page.keyboard.press('Backspace');\n      await page.waitForChanges();\n      await expectInputHasFocus(el, 1);\n      await expectValueToBe(el, '134');\n      expect(marketCodeInputValueChange).toHaveReceivedEventTimes(1);\n      expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('134');\n    });\n\n    it('can update a value in the middle of the input', async () => {\n      // first input has focus\n      await expectInputHasFocus(el, 0);\n\n      // navigate to the 2nd input\n      await page.keyboard.press('Tab');\n      await expectInputHasFocus(el, 1);\n\n      // update 2nd value, focus proceeds to 3rd input\n      await page.keyboard.press('5');\n      await page.waitForChanges();\n      await expectInputHasFocus(el, 2);\n      await expectValueToBe(el, '1534');\n      expect(marketCodeInputValueChange).toHaveReceivedEventTimes(1);\n      expect(marketCodeInputValueChange.lastEvent.detail.code).toEqual('1534');\n    });\n\n    it('does not fire an event if the value did not change', async () => {\n      // first input has focus\n      await expectInputHasFocus(el, 0);\n\n      // navigate to the 2nd input\n      await page.keyboard.press('Tab');\n      await expectInputHasFocus(el, 1);\n\n      // enter the same value, focus proceeds to 3rd input\n      await page.keyboard.press('2');\n      await page.waitForChanges();\n      await expectInputHasFocus(el, 2);\n      await expectValueToBe(el, '1234');\n      expect(marketCodeInputValueChange).not.toHaveReceivedEvent();\n    });\n  });\n\n  describe('when the component has a partial value', () => {\n    beforeEach(async () => {\n      el.setProperty('value', '12');\n      await page.keyboard.press('Tab');\n      await page.waitForChanges();\n    });\n\n    it('will not arrow past an empty input', async () => {\n      // first input has focus\n      await expectInputHasFocus(el, 0);\n\n      // try to navigate to the last input\n      await page.keyboard.press('ArrowRight');\n      await page.keyboard.press('ArrowRight');\n      await page.keyboard.press('ArrowRight');\n      await page.waitForChanges();\n\n      // focus stays on 3rd input\n      await expectInputHasFocus(el, 2);\n    });\n\n    it('will not tab past an empty input', async () => {\n      // first input has focus\n      await expectInputHasFocus(el, 0);\n\n      // try to navigate to the last input\n      await page.keyboard.press('Tab');\n      await page.keyboard.press('Tab');\n      await page.keyboard.press('Tab');\n      await page.waitForChanges();\n\n      // focus has left the component\n      expect(el).not.toHaveAttribute('focused');\n    });\n  });\n});\n"]}