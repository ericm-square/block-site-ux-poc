{"version":3,"file":"market-file-upload.js","sourceRoot":"","sources":["../../../../src/components/market-file-upload/market-file-upload.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, Host, h, State, Prop, EventEmitter, Watch } from '@stencil/core';\nimport { getReadableFilesize } from '../../utils/filesize';\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { TMarketFileUploadFileConfig } from './types';\n\n/**\n * @slot - Used for drop zone content. Intended for an icon (optional), main text, and secondary text (optional).\n * @slot compact-action - Used for \"compact\" mode content. Intended for use with a `market-button` or `market-link`. When this\n * slot is used, default slot content must also be provided. Visible when `compact` is true.\n * @slot bottom-accessory - DEPRECATED: Used for the bottom accessory text. We recommend using the default slot\n * to add secondary text to the drop zone content instead.\n * @slot error - DEPRECATED: Used for input-level error text. We recommend using the fileMetadata prop to set error\n * status and messages on the file level instead.\n */\n\n@Component({\n  tag: 'market-file-upload',\n  styleUrl: 'market-file-upload.css',\n  shadow: true,\n})\nexport class MarketFileUpload {\n  @Element() el: HTMLMarketFileUploadElement;\n\n  /**\n   * String that is a list of file types the uploader should accept. This is\n   * passed to the internal `<input type=\"file\"/>` tag. For more info, see the\n   * [MDN docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept).\n   */\n  @Prop() readonly accept: string = '';\n\n  /**\n   * An array of File objects that can be passed in. (If using vanilla JS, this must be set using JS and not in the HTML markup.)\n   */\n  @Prop() readonly value: Array<File> = [];\n\n  /**\n   * Functionally and visually disables the file picker.\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * DEPRECATED: Represents whether the input is invalid or not. This represents input-level error states.\n   * We recommend using the fileMetadata prop to set error status and messages on the file level instead.\n   */\n  @Prop({ reflect: true }) readonly invalid: boolean = false;\n\n  /**\n   * Represents whether the selector allows multiple files\n   * to be selected.\n   */\n  @Prop({ reflect: true }) readonly multiple: boolean = false;\n\n  /**\n   * Used to toggle \"compact mode\" (for use on mobile devices and when space is limited)\n   */\n  @Prop({ reflect: true }) readonly compact: boolean = false;\n\n  /**\n   * What type of secondary information, if any, to display on all file rows\n   */\n  @Prop() readonly fileSubtext?: 'size' | 'type';\n\n  /**\n   * What type of custom information, if any, to display on specified file rows.\n   * Expects an array of TMarketFileUploadFileConfig objects (must be set using JS and not in the HTML markup), which\n   * must include `filename` and can include an optional `status`, `message`, or `leadingIconName`.\n   * Note that `message` is only shown when `status` is `'error'`, and `leadingIconName` expects the semantic or\n   * descriptive name of an existing `market-icon`.\n   */\n  @Prop() readonly fileMetadata?: Array<TMarketFileUploadFileConfig>;\n\n  /**\n   * Optional property passed to the delete icons on selected file\n   * rows that will function as its aria-label. Defaults to \"Delete\".\n   */\n  @Prop({ reflect: true }) readonly deleteButtonAriaLabel: string = 'Delete';\n\n  /**\n   * Tracks whether a file is being dragged over the component.\n   */\n  @State() isDraggingOver: boolean = false;\n\n  /**\n   * Files that have been selected by the user either via drag & drop or\n   * the file selector.\n   */\n  @State() files: Array<File>;\n\n  /**\n   * Triggered when the selected files array changes.\n   */\n  @Event() marketFileUploadValueChange: EventEmitter<{ value: Array<File> }>;\n\n  @Watch('value')\n  watchValueHandler(newValue: Array<File>) {\n    if (Array.isArray(newValue)) {\n      this.files = this.multiple ? [...newValue] : [newValue[0]];\n    }\n  }\n\n  @Watch('disabled')\n  watchDisabledHandler() {\n    this.slottedCompactButtons.forEach((el) => (el.disabled = this.disabled));\n  }\n\n  /**\n   * We want to disable certain functions if multiple is false and a file has been selected\n   */\n  get hasSingleFileSelected(): boolean {\n    return !this.multiple && this.files.length === 1;\n  }\n\n  /* returns `market-button` or `market-link` elements in the \"compact\" slot */\n  get slottedCompactButtons() {\n    const interactiveElementTagnames = new Set([\n      getNamespacedTagFor('market-button'),\n      getNamespacedTagFor('market-link'),\n    ]) as Set<string>;\n    return [...this.el.querySelector('[slot=\"compact-action\"]').children].filter((el) =>\n      interactiveElementTagnames.has(el.tagName.toLowerCase()),\n    ) as [HTMLMarketButtonElement | HTMLMarketLinkElement];\n  }\n\n  private fileInputElement: HTMLInputElement;\n\n  draggingOver(e) {\n    if (this.disabled || this.hasSingleFileSelected) {\n      return;\n    }\n\n    this.isDraggingOver = true;\n    e.preventDefault();\n  }\n\n  endDrag(e) {\n    e.preventDefault();\n    if (this.disabled || this.hasSingleFileSelected) {\n      return;\n    }\n\n    this.isDraggingOver = false;\n    if (e.type === 'drop' && e.dataTransfer) {\n      this.addFiles(e.dataTransfer.files);\n    }\n  }\n\n  handleButtonClick() {\n    this.fileInputElement.click();\n  }\n\n  handleDeleteKeydown(e, index) {\n    if (e.key === 'Enter' && !this.disabled) {\n      this.removeFile(index);\n    }\n  }\n\n  removeFile(index: number) {\n    this.files.splice(index, 1);\n    this.files = [...this.files];\n    this.emitFileChange();\n  }\n\n  labelContainerClassNames() {\n    const classNames = [];\n    if (this.isDraggingOver) {\n      classNames.push('is-dragging-over');\n    }\n    if (this.hasSingleFileSelected) {\n      classNames.push('has-file-selected');\n    }\n\n    return classNames;\n  }\n\n  onInputChange(e) {\n    this.addFiles(e.target.files);\n    // unset the file input value so that we can re-add files\n    // if they are removed by the user\n    this.fileInputElement.value = '';\n  }\n\n  addFiles(files: Array<File>) {\n    if (files) {\n      if (!this.multiple) {\n        this.files = [files[0]];\n      } else {\n        this.files = [...files, ...this.files];\n      }\n    }\n    this.emitFileChange();\n  }\n\n  emitFileChange() {\n    this.marketFileUploadValueChange.emit({ value: this.files });\n  }\n\n  handleCompactSlotChange() {\n    this.slottedCompactButtons.forEach((el) => {\n      el.removeEventListener('click', this.handleButtonClick.bind(this));\n      if (!this.disabled) {\n        el.addEventListener('click', this.handleButtonClick.bind(this));\n      }\n      el.disabled = this.disabled;\n    });\n  }\n\n  componentWillLoad() {\n    if (this.value) {\n      this.files = [...this.value];\n    } else {\n      this.files = [];\n    }\n  }\n\n  componentDidLoad() {\n    this.handleCompactSlotChange();\n  }\n\n  renderFilesAsMarketRows() {\n    const MarketRowTagName = getNamespacedTagFor('market-row');\n    const MarketAccessoryTagName = getNamespacedTagFor('market-accessory');\n    const MarketIconTagName = getNamespacedTagFor('market-icon');\n\n    return this.files.map((file, index) => {\n      const rowConfig = this.fileMetadata?.find((row) => row.filename === file.name);\n\n      // set default icons\n      let leadingIcon = file.type.startsWith('image/') ? 'picture' : 'file';\n      let trailingIcon = 'delete';\n\n      // set default secondary text\n      let secondaryText;\n      switch (this.fileSubtext) {\n        case 'size':\n          secondaryText = getReadableFilesize(file[this.fileSubtext]);\n          break;\n        case 'type':\n          secondaryText = file[this.fileSubtext];\n          break;\n        default:\n          break;\n      }\n\n      // row config status overrides default row appearance\n      switch (rowConfig?.status) {\n        case 'error':\n          leadingIcon = 'warning';\n          trailingIcon = 'clear';\n          // message only displayed if status = error\n          secondaryText = rowConfig?.message;\n          break;\n        case 'loading':\n          leadingIcon = 'loading';\n          trailingIcon = 'clear';\n          break;\n        case 'success':\n          leadingIcon = 'success';\n          break;\n        default:\n          break;\n      }\n\n      // row config custom icon overrides previously set leading icon\n      leadingIcon = rowConfig?.leadingIconName || leadingIcon;\n\n      return (\n        <MarketRowTagName\n          disabled={this.disabled}\n          interactive\n          transient\n          data-index={index}\n          data-status={rowConfig?.status}\n        >\n          <label slot=\"label\">{file.name}</label>\n          {secondaryText && <p slot=\"subtext\">{secondaryText}</p>}\n          <MarketAccessoryTagName slot=\"leading-accessory\" size=\"image\">\n            <MarketIconTagName name={leadingIcon} fidelity={24}></MarketIconTagName>\n          </MarketAccessoryTagName>\n          <MarketAccessoryTagName\n            slot=\"trailing-accessory\"\n            size=\"icon\"\n            tabindex={this.disabled ? -1 : 0}\n            role=\"button\"\n            aria-label={this.deleteButtonAriaLabel}\n            onKeyDown={(e) => this.handleDeleteKeydown(e, index)}\n            onClick={() => this.removeFile(index)}\n          >\n            <MarketIconTagName name={trailingIcon} fidelity={24}></MarketIconTagName>\n          </MarketAccessoryTagName>\n        </MarketRowTagName>\n      );\n    });\n  }\n\n  render() {\n    const MarketListTagName = getNamespacedTagFor('market-list');\n    const MarketAccessoryTagName = getNamespacedTagFor('market-accessory');\n    const MarketIconTagName = getNamespacedTagFor('market-icon');\n    const MarketFieldTagName = getNamespacedTagFor('market-field');\n    const MarketButtonTagName = getNamespacedTagFor('market-button');\n\n    const fileMarketRows = this.renderFilesAsMarketRows();\n    const showUploadLabel = this.multiple || fileMarketRows.length === 0;\n    const showList = this.multiple && fileMarketRows.length > 0;\n\n    return (\n      <Host\n        class=\"market-file-upload\"\n        ondragenter={(e) => this.draggingOver(e)}\n        ondragover={(e) => this.draggingOver(e)}\n        ondragleave={(e) => this.endDrag(e)}\n        ondrop={(e) => this.endDrag(e)}\n      >\n        <MarketFieldTagName disabled={this.disabled} invalid={this.invalid}>\n          <div class={`label-container ${this.labelContainerClassNames()}`}>\n            {!showUploadLabel && fileMarketRows[0]}\n            {showUploadLabel && (\n              // the input is correctly wrapped inside its label, but eslint gets confused by label > span > slot > text\n              // eslint-disable-next-line jsx-a11y/label-has-associated-control\n              <label>\n                <slot>\n                  <MarketAccessoryTagName size=\"image\">\n                    <MarketIconTagName name=\"file\" fidelity={24}></MarketIconTagName>\n                  </MarketAccessoryTagName>\n                  <span>\n                    <button onClick={() => this.handleButtonClick()}>Choose a file</button> or drag and drop it here\n                  </span>\n                </slot>\n                <slot name=\"compact-action\" onSlotchange={() => this.handleCompactSlotChange()}>\n                  <MarketButtonTagName rank=\"primary\" disabled={this.disabled} onClick={() => this.handleButtonClick()}>\n                    Upload file\n                  </MarketButtonTagName>\n                </slot>\n                <input\n                  ref={(el) => (this.fileInputElement = el)}\n                  onChange={(e) => this.onInputChange(e)}\n                  type=\"file\"\n                  name=\"files[]\"\n                  multiple={this.multiple}\n                  accept={this.accept}\n                  hidden\n                />\n              </label>\n            )}\n          </div>\n          {/* DEPRECATED: bottom-accessory slot, to be removed in future major version */}\n          <slot name=\"bottom-accessory\">\n            <small slot=\"bottom-accessory\"></small>\n          </slot>\n          {/* DEPRECATED: error slot, to be removed in future major version */}\n          <slot name=\"error\">\n            <small slot=\"error\"></small>\n          </slot>\n        </MarketFieldTagName>\n        {showList && (\n          <MarketListTagName interactive transient>\n            {fileMarketRows}\n          </MarketListTagName>\n        )}\n      </Host>\n    );\n  }\n}\n"]}