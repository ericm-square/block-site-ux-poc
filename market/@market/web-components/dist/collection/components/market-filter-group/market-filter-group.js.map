{"version":3,"file":"market-filter-group.js","sourceRoot":"","sources":["../../../../src/components/market-filter-group/market-filter-group.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Host, h, Listen, Prop, State, Watch } from '@stencil/core';\nimport {\n  CORE_ANIMATION_EXIT_TRANSITION_FAST_SPEED_DURATION,\n  CORE_BREAKPOINT_NARROW_MAX_WIDTH,\n  CORE_TYPE_PARAGRAPH_20_FONT_FAMILY,\n  CORE_TYPE_PARAGRAPH_20_SIZE,\n  CORE_TYPE_PARAGRAPH_30_FONT_FAMILY,\n  CORE_TYPE_PARAGRAPH_30_SIZE,\n} from '@market/market-theme/js/cjs/index.js';\nimport { throttle } from 'lodash-es';\n\nimport { getNamespacedTagFor, isElementWithTagName } from '../../utils/namespace';\nimport { asyncRequestAnimationFrame } from '../../utils/raf';\nimport {\n  TMarketInputSearchFocusEventDetail,\n  TMarketInternalInputSearchCompactAnimationEventDetail,\n} from '../market-input-search/events';\n\nconst MAX_VISIBLE_FILTERS = 3;\nconst FILTER_GROUP_GAP = 8;\nconst FILTER_BUTTON_WIDTH = 50;\nconst FILTER_BUTTON_FEEDBACK_GAP = 8;\nconst RESIZE_DEBOUNCE_DURATION = 16; // 60fps\n\n/**\n * @slot search - Search input, using `<market-input-search>`\n * @slot filters - Filters, using `<market-filter>`\n */\n@Component({\n  tag: 'market-filter-group',\n  styleUrl: 'market-filter-group.css',\n  shadow: true,\n})\nexport class MarketFilterGroup {\n  @Element() el: HTMLMarketFilterGroupElement;\n\n  /**\n   * Maximum number of visible filters before they are truncated and moved into the overflow menu.\n   * However, filters may be truncated anyway if there is not enough space.\n   *\n   * @default 3\n   */\n  @Prop() readonly maxVisibleFilters: number = 3; // not using MAX_VISIBLE_FILTERS because storybook shows the variable instead of the number literal\n\n  /**\n   * Sorted overflow and visible filters\n   */\n  @State() private _sortedFilterEls: {\n    overflow: Array<HTMLMarketFilterElement>;\n    visible: Array<HTMLMarketFilterElement>;\n  } = {\n    overflow: [],\n    visible: [],\n  };\n\n  /**\n   * References to the filter elements\n   */\n  private _filterEls: Array<HTMLMarketFilterElement>;\n\n  /**\n   * Reference to the `market-filter-dropdown-menu`\n   */\n  private _dropdownMenuEl: HTMLMarketFilterDropdownMenuElement;\n\n  /**\n   * Slotted input search element\n   */\n  private _slottedInputSearchEl: HTMLMarketInputSearchElement;\n\n  /**\n   * Used to hide filters when on compact mode\n   */\n  private _isSearchActive: boolean = false;\n\n  /**\n   * Used to set the index cutoff for overflowing filters\n   */\n  private _filterCutoffIndex: number;\n\n  /**\n   * Used to focus on the first filter when 'Tab' is pressed on the input search\n   */\n  private _willFocusOnFirstFilter: boolean = false;\n\n  /**\n   * Used to delay the overflow dropdown menu from opening\n   */\n  private _willDelayDropdownOpen: boolean = false;\n\n  /**\n   * Observers\n   */\n  private _observers: {\n    content?: ResizeObserver;\n    host?: ResizeObserver;\n  } = {};\n\n  @Watch('maxVisibleFilters')\n  maxVisibleFiltersWatcher() {\n    this.handleResize();\n  }\n\n  /**\n   * Search is active when it's focused\n   */\n  @Listen('marketInputSearchFocus')\n  marketInputSearchFocusHandler({ detail }: CustomEvent<TMarketInputSearchFocusEventDetail>) {\n    this._isSearchActive = detail;\n  }\n\n  /**\n   * For every search animation event, we either show or hide filters\n   */\n  @Listen('marketInternalInputSearchCompactAnimation')\n  async marketInternalInputSearchCompactAnimationHandler(\n    e: CustomEvent<TMarketInternalInputSearchCompactAnimationEventDetail>,\n  ) {\n    e.stopPropagation();\n    await this.handleResize();\n    await asyncRequestAnimationFrame();\n\n    /**\n     * 'animationstart' means that search is expanded from its compact state.\n     * So when the dropdown menu is clicked, we defer the popover from opening\n     * right away to prevent jittery animations while elements are getting settled.\n     * (See `marketDropdownOpenedHandler` for the delay logic)\n     */\n    this._willDelayDropdownOpen = e.detail === 'animationstart';\n  }\n\n  /**\n   * Handle dropdown menu's `marketDropdownOpened` event\n   * TODO: There is no `market-dropdown` in this template below.\n   * This event is bubbling up from `market-filter-dropdown-menu`.\n   * We should refactor this to use a custom event from that instead,\n   * but that component does not yet emit custom open/close events.\n   */\n  @Listen('marketDropdownOpened')\n  marketDropdownOpenedHandler(e: CustomEvent<void>) {\n    if (!this._willDelayDropdownOpen) {\n      return;\n    }\n    this._willDelayDropdownOpen = false;\n    e.preventDefault();\n\n    /**\n     * Delay `marketDropdownOpened` and manually open the dropdown later.\n     * A little extra time (1.25x) has to be added in case the browser rendering\n     * is a bit slow. FAST x 1.25 looks like the sweet spot for now.\n     */\n    setTimeout(async () => {\n      await asyncRequestAnimationFrame();\n      await this._dropdownMenuEl?.shadowRoot\n        ?.querySelector(getNamespacedTagFor('market-dropdown'))\n        ?.updateDropdownPosition();\n      this._dropdownMenuEl?.shadowRoot?.querySelector(getNamespacedTagFor('market-dropdown'))?.openDropdown();\n    }, CORE_ANIMATION_EXIT_TRANSITION_FAST_SPEED_DURATION * 1.25);\n  }\n\n  /**\n   * The overflow feedback's text length is based on filters that have value.\n   * Basically, the button's structure is: `[ <icon> <gap> <feedback> ]`\n   */\n  private calculateOverflowButtonWidth(filterEls: HTMLMarketFilterElement[]): number {\n    // if there are no filters, the overflow button will be hidden\n    if (!filterEls?.length) {\n      return 0;\n    }\n\n    const hasValueCount = filterEls.reduce((result, filterEl) => {\n      const listEl = filterEl.querySelector(getNamespacedTagFor('market-list'));\n      if (listEl?.value) {\n        return result + 1;\n      }\n      const datePickerEl = filterEl.querySelector(getNamespacedTagFor('market-date-picker'));\n      if (datePickerEl?.selectedStartDate) {\n        return result + 1;\n      }\n      return result;\n    }, 0);\n\n    // feedback omitted when there's no selection\n    if (hasValueCount === 0) {\n      return FILTER_BUTTON_WIDTH;\n    }\n\n    // render the text in some canvas and calculate its width\n    const canvasEl = document.createElement('canvas');\n    const context = canvasEl.getContext('2d');\n    // assume that the first filter's size is the same size as the rest\n    if (filterEls[0].size === 'small') {\n      context.font = `${CORE_TYPE_PARAGRAPH_20_SIZE}px ${CORE_TYPE_PARAGRAPH_20_FONT_FAMILY}`;\n    } else {\n      context.font = `${CORE_TYPE_PARAGRAPH_30_SIZE}px ${CORE_TYPE_PARAGRAPH_30_FONT_FAMILY}`;\n    }\n    const feedbackTextWidth = context.measureText(`${hasValueCount}`).width;\n    canvasEl.remove(); // cleanup\n    return FILTER_BUTTON_WIDTH + FILTER_BUTTON_FEEDBACK_GAP + feedbackTextWidth;\n  }\n\n  private getComputedWidth(el: HTMLElement) {\n    return Number.parseFloat(window.getComputedStyle(el).width);\n  }\n\n  /**\n   * Find out where the cutoff will happen.\n   * Main chunk of the overflow logic happens here\n   */\n  private async findFilterCutoffIndex(): Promise<number> {\n    if ((this.maxVisibleFilters ?? MAX_VISIBLE_FILTERS) <= 0) {\n      return 0;\n    }\n\n    const isNarrowBreakpoint = window?.innerWidth <= CORE_BREAKPOINT_NARROW_MAX_WIDTH;\n    if (isNarrowBreakpoint && !this._isSearchActive) {\n      return 1; // show 1 filter max on narrow breakpoints\n    } else if (this._isSearchActive) {\n      return 0; // search is active so no filters should be shown\n    }\n\n    /**\n     * Get the widths of all the other components (group, search)\n     * where `FILTER_GROUP_GAP` is the gap between elements\n     */\n    const filterGroupWidth = this.getComputedWidth(this.el);\n    const searchWidth = this._slottedInputSearchEl\n      ? this.getComputedWidth(this._slottedInputSearchEl) + FILTER_GROUP_GAP\n      : 0;\n\n    /**\n     * Temporary container where we can measure filter widths\n     * https://dev.to/sstraatemans/calculate-html-element-width-before-render-4ii7\n     */\n    const tempEl = document.createElement('div');\n    tempEl.style.width = 'auto';\n    tempEl.style.position = 'absolute';\n    tempEl.style.visibility = 'hidden';\n    this.el.shadowRoot.appendChild(tempEl);\n\n    let index = 0;\n    let filterWidths = 0;\n    for (const filterEl of this._filterEls) {\n      if (index === (this.maxVisibleFilters ?? MAX_VISIBLE_FILTERS)) {\n        break;\n      }\n\n      /**\n       * Presuming that all the remaining filters (**excluding** the current one, i.e. `filterEl`)\n       * will be overflowed, calculate the potential dropdown menu button width.\n       * If this is the last filter, it will not be followed by a `market-filter-dropdown-menu`.\n       */\n      const dropdownMenuButtonWidth =\n        index + 1 === this._filterEls.length // is this the last one?\n          ? 0\n          : FILTER_GROUP_GAP + this.calculateOverflowButtonWidth(this._filterEls.slice(index));\n\n      // measure the filter's width in the temporary container\n      const clonedFilterEl = filterEl.cloneNode(true) as HTMLMarketFilterElement;\n      clonedFilterEl.style.display = 'block';\n      tempEl.appendChild(clonedFilterEl);\n\n      // let the shadow DOM render within the temp container first before measuring its width\n      await asyncRequestAnimationFrame();\n      const filterElWidth = this.getComputedWidth(tempEl);\n      tempEl.removeChild(clonedFilterEl);\n\n      // width of all the filters so far; gap is only added for filters after the first\n      filterWidths += (index > 0 ? FILTER_GROUP_GAP : 0) + filterElWidth;\n\n      // check if filter can fit\n      const potentialWidth = searchWidth + filterWidths + dropdownMenuButtonWidth;\n      if (potentialWidth >= filterGroupWidth) {\n        // it won't fit; breaking the loop sets the cutoff\n        break;\n      }\n      ++index;\n    }\n\n    // cleanup\n    this.el.shadowRoot.removeChild(tempEl);\n    tempEl.remove();\n\n    return index;\n  }\n\n  /**\n   * Sort filters:\n   * - split by `this._filterCutoffIndex`\n   * - visible filters: set attr `[slot=\"filters\"]`; remove `display: none;`\n   * - overflow filters: set attr `[slot=\"overflow-filters\"]`; add `display: none;`\n   */\n  private sortVisibleAndOverflowFilters() {\n    this._sortedFilterEls = {\n      visible: this._filterEls.slice(0, this._filterCutoffIndex),\n      overflow: this._filterEls.slice(this._filterCutoffIndex),\n    };\n    this._sortedFilterEls.visible.forEach((filterEl) => {\n      if (filterEl.style.display) {\n        filterEl.style.removeProperty('display');\n      }\n      if (filterEl.getAttribute('slot') !== 'filters') {\n        filterEl.setAttribute('slot', 'filters');\n      }\n    });\n    this._sortedFilterEls.overflow.forEach((filterEl) => {\n      if (filterEl.style.display !== 'none') {\n        filterEl.style.display = 'none';\n      }\n      if (filterEl.getAttribute('slot') !== 'overflow-filters') {\n        filterEl.setAttribute('slot', 'overflow-filters');\n      }\n    });\n  }\n\n  /**\n   * Handle screen / component resize\n   */\n  private async handleResize() {\n    if (!this.getComputedWidth(this.el)) {\n      // element isn't fully rendered yet\n      return;\n    }\n    const index = await this.findFilterCutoffIndex();\n    const isFilterCutoffUpdated = index !== this._filterCutoffIndex;\n    if (isFilterCutoffUpdated) {\n      this._filterCutoffIndex = index;\n      await asyncRequestAnimationFrame();\n      this.sortVisibleAndOverflowFilters();\n      // collapse dropdown if it's expanded\n      if (this._dropdownMenuEl) {\n        const dropdownEl = this._dropdownMenuEl.querySelector(getNamespacedTagFor('market-dropdown'));\n        if (dropdownEl?.expanded) {\n          dropdownEl?.closeDropdown();\n        }\n      }\n    }\n    this.checkIfSearchShouldBeCompact();\n  }\n\n  /**\n   * Toggle search's compact mode, if present and not focused\n   */\n  private async checkIfSearchShouldBeCompact() {\n    if (!this._slottedInputSearchEl || this._slottedInputSearchEl.hasAttribute('focused')) {\n      return;\n    }\n    const isNarrowBreakpoint = window?.innerWidth <= CORE_BREAKPOINT_NARROW_MAX_WIDTH;\n    const hasFilters = Boolean(this._filterEls?.length);\n    const hasMoreThanMaxFilters = this._filterEls.length > (this.maxVisibleFilters ?? MAX_VISIBLE_FILTERS);\n    const searchShouldBeCompact = hasFilters && (isNarrowBreakpoint || hasMoreThanMaxFilters);\n    // only toggle `compact` when value is new\n    if (searchShouldBeCompact !== this._slottedInputSearchEl.hasAttribute('compact')) {\n      if (this._slottedInputSearchEl.getAttribute('focused')) {\n        await this._slottedInputSearchEl.setFocus(false);\n      }\n      if (searchShouldBeCompact) {\n        this._slottedInputSearchEl.setAttribute('compact', '');\n      } else {\n        this._slottedInputSearchEl.removeAttribute('compact');\n      }\n    }\n  }\n\n  /**\n   * When tabbing from the search input and into the first filter,\n   */\n  private handleInputSearchTabKeydown(e: KeyboardEvent) {\n    if (e.key === 'Tab' && !e.shiftKey && this._filterEls?.length) {\n      e.preventDefault();\n      this._slottedInputSearchEl.blur();\n      this._willFocusOnFirstFilter = true;\n    }\n  }\n\n  /**\n   * When input search is focused, make sure that dropdown menu is closed\n   */\n  private handleInputSearchFocus() {\n    const dropdownEl = this._dropdownMenuEl?.shadowRoot?.querySelector(getNamespacedTagFor('market-dropdown'));\n    if (dropdownEl?.hasAttribute('expanded')) {\n      dropdownEl.closeDropdown();\n    }\n  }\n\n  private registerSlottedInputSearch() {\n    this._slottedInputSearchEl?.removeEventListener?.('keydown', this.handleInputSearchTabKeydown);\n    this._slottedInputSearchEl?.removeEventListener?.('focus', this.handleInputSearchFocus);\n    this._slottedInputSearchEl = this.el.querySelector('[slot=\"search\"]');\n    this._slottedInputSearchEl?.addEventListener?.('keydown', this.handleInputSearchTabKeydown.bind(this));\n    this._slottedInputSearchEl?.addEventListener?.('focus', this.handleInputSearchFocus.bind(this));\n\n    this.checkIfSearchShouldBeCompact();\n  }\n\n  private registerSlottedFilters() {\n    this._filterEls = [...this.el.children].filter((el): el is HTMLMarketFilterElement =>\n      isElementWithTagName(el, 'market-filter'),\n    );\n  }\n\n  private throttledHandleResize = throttle(this.handleResize.bind(this), RESIZE_DEBOUNCE_DURATION);\n\n  private observeContent(el: HTMLDivElement) {\n    if (!this._observers.content) {\n      this._observers.content = new ResizeObserver(this.throttledHandleResize);\n      this._observers.content.observe(el);\n    }\n  }\n\n  private filtersOnSlotChangeHandler() {\n    this.registerSlottedFilters();\n    this.handleResize();\n  }\n\n  connectedCallback() {\n    if (!this._observers.host) {\n      this._observers.host = new ResizeObserver(this.throttledHandleResize);\n      this._observers.host.observe(this.el);\n    }\n  }\n\n  componentWillLoad() {\n    this.registerSlottedFilters();\n    this.registerSlottedInputSearch();\n    this.handleResize();\n  }\n\n  componentWillRender() {\n    // if 'Tab' was pressed (see `handleInputSearchTabKeydown`), attempt to focus on the first filter\n    if (this._willFocusOnFirstFilter) {\n      this._filterEls?.[0]?.setFocus?.();\n      this._willFocusOnFirstFilter = false;\n    }\n  }\n\n  disconnectedCallback() {\n    Object.entries(this._observers).forEach(([key, observer]) => {\n      if (observer) {\n        observer.disconnect();\n        this._observers[key] = undefined;\n      }\n    });\n  }\n\n  render() {\n    /**\n     * The dropdown menu button will follow the size of the first filter;\n     * basically assuming that the rest of the filters follow the same size.\n     */\n    const dropdownMenuButtonSize = this._filterEls?.[0]?.size;\n\n    const MarketFilterDropdownMenuTagName = getNamespacedTagFor('market-filter-dropdown-menu');\n\n    return (\n      <Host class=\"market-filter-group\">\n        {/**\n         * .content is an inline-flex container that is observed by a ResizeObserver.\n         * In events such as filter selection where the `market-filter`'s feedback changes\n         * and in turn its overall width, `handleResize` will be triggered via ResizeObserver.\n         * The .content's width is fluid while the host's width stays at 100% of its parent.\n         */}\n        <div class=\"content\" ref={(el) => this.observeContent(el)}>\n          <slot name=\"search\" onSlotchange={() => this.registerSlottedInputSearch()}></slot>\n          <slot name=\"filters\" onSlotchange={() => this.filtersOnSlotChangeHandler()}></slot>\n          {this._sortedFilterEls.overflow.length > 0 && (\n            <MarketFilterDropdownMenuTagName\n              class=\"dropdown-menu\"\n              size={dropdownMenuButtonSize}\n              ref={(el) => (this._dropdownMenuEl = el)}\n            >\n              <slot name=\"overflow-filters\" slot=\"overflow-filters\"></slot>\n            </MarketFilterDropdownMenuTagName>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}