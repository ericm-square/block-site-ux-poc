{"version":3,"file":"market-filter-group.search.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-filter-group/test/market-filter-group.search.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { CORE_ANIMATION_EXIT_TRANSITION_FAST_SPEED_DURATION } from '@market/market-theme/js/cjs/index.js';\nimport { newE2EPage, E2EElement, E2EPage } from '@stencil/core/testing';\n\ndescribe('market-filter-group: search', () => {\n  let page: E2EPage;\n  let element: E2EElement;\n  let inputSearchEl: E2EElement;\n\n  it('displays the search input', async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-filter-group>\n        <market-input-search slot=\"search\"></market-input-search>\n      </market-filter-group>\n    `);\n    element = await page.find('market-filter-group');\n    inputSearchEl = await element.find('pierce/market-input-search');\n\n    expect(inputSearchEl).toBeVisible();\n  });\n\n  describe('compact', () => {\n    let page: E2EPage;\n    let element: E2EElement;\n    let inputSearchEl: E2EElement;\n    let filterEls: E2EElement[];\n\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-filter-group>\n          <market-input-search slot=\"search\"></market-input-search>\n          <market-filter name=\"color\" slot=\"filters\">\n            <label slot=\"label\">Color</label>\n          </market-filter>\n          <market-filter name=\"size\" slot=\"filters\">\n            <label slot=\"label\">Size</label>\n          </market-filter>\n          <market-filter disabled name=\"start-date\" slot=\"filters\">\n            <label slot=\"label\">Start date</label>\n          </market-filter>\n          <market-filter disabled name=\"end-date\" slot=\"filters\">\n            <label slot=\"label\">End date</label>\n          </market-filter>\n        </market-filter-group>\n      `);\n      await page.waitForChanges();\n      element = await page.find('market-filter-group');\n      inputSearchEl = await element.find('market-input-search');\n      filterEls = await element.findAll('market-filter');\n    });\n\n    it('focuses on inner input when tabbed into', async () => {\n      await page.focus('body');\n      await page.keyboard.press('Tab');\n      await page.waitForChanges();\n      expect(inputSearchEl).toHaveAttribute('focused');\n      const focusedInput = await inputSearchEl.find('pierce/input:focus');\n      expect(focusedInput).not.toBeNull();\n    });\n\n    it('hides filters when focused on, shows them otherwise; loses focus when another element is clicked', async () => {\n      await inputSearchEl.click();\n      await new Promise((r) => setTimeout(r, CORE_ANIMATION_EXIT_TRANSITION_FAST_SPEED_DURATION * 2));\n      expect(filterEls[0]).not.toBeVisible();\n      expect(filterEls[1]).not.toBeVisible();\n      expect(filterEls[2]).not.toBeVisible();\n      expect(filterEls[3]).not.toBeVisible();\n\n      await page.click('body'); // focus on something else; blurs search input\n      await new Promise((r) => setTimeout(r, CORE_ANIMATION_EXIT_TRANSITION_FAST_SPEED_DURATION * 2));\n      expect(filterEls[0]).toBeVisible();\n      expect(filterEls[1]).toBeVisible();\n      expect(filterEls[2]).toBeVisible();\n      expect(filterEls[3]).not.toBeVisible();\n    });\n\n    it('hides filters when focused on, shows them otherwise; loses focus when back button is clicked', async () => {\n      await inputSearchEl.click();\n      await page.waitForChanges();\n      await new Promise((r) => setTimeout(r, CORE_ANIMATION_EXIT_TRANSITION_FAST_SPEED_DURATION * 2));\n      expect(filterEls[0]).not.toBeVisible();\n      expect(filterEls[1]).not.toBeVisible();\n      expect(filterEls[2]).not.toBeVisible();\n      expect(filterEls[3]).not.toBeVisible();\n\n      const backButtonEl = await inputSearchEl.find('pierce/market-accessory');\n      await backButtonEl.click();\n      await page.waitForChanges();\n      await new Promise((r) => setTimeout(r, CORE_ANIMATION_EXIT_TRANSITION_FAST_SPEED_DURATION * 2));\n      expect(filterEls[0]).toBeVisible();\n      expect(filterEls[1]).toBeVisible();\n      expect(filterEls[2]).toBeVisible();\n      expect(filterEls[3]).not.toBeVisible();\n    });\n\n    it('focuses on first filter when tabbing out of the search input', async () => {\n      await inputSearchEl.click();\n      await page.keyboard.press('Tab');\n      await page.waitForChanges();\n      await new Promise((r) => setTimeout(r, CORE_ANIMATION_EXIT_TRANSITION_FAST_SPEED_DURATION * 2));\n\n      const colorFilterEl = await page.find('pierce/market-filter[name=\"color\"]');\n      const filterButtonEl = await colorFilterEl.find('pierce/market-filter-button');\n      const buttonEl = await filterButtonEl.find('pierce/button:focus');\n      expect(buttonEl).not.toBeNull();\n    });\n  });\n});\n"]}