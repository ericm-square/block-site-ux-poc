{"version":3,"file":"market-filter-group.overflow.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-filter-group/test/market-filter-group.overflow.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EElement, E2EPage } from '@stencil/core/testing';\n\ndescribe('market-filter-group: overflow', () => {\n  let page: E2EPage;\n  let element: E2EElement;\n  let colorFilterEl: E2EElement;\n  let sizeFilterEl: E2EElement;\n  let startDateFilterEl: E2EElement;\n  let endDateFilterEl: E2EElement;\n  let shapeFilterEl: E2EElement;\n  let amountFilterEl: E2EElement;\n  let dropdownMenuEl: E2EElement;\n  let dropdownMenuButtonEl: E2EElement;\n  let popoverEl: E2EElement;\n\n  const openDropdown = async () => {\n    popoverEl = await dropdownMenuEl.find('pierce/market-popover');\n    expect(await popoverEl.isVisible()).toBe(false);\n    await dropdownMenuButtonEl.click();\n    expect(await popoverEl.isVisible()).toBe(true);\n\n    endDateFilterEl = await dropdownMenuEl.find('pierce/market-row[value=\"end-date\"]');\n    shapeFilterEl = await dropdownMenuEl.find('pierce/market-row[value=\"shape\"]');\n    amountFilterEl = await dropdownMenuEl.find('pierce/market-row[value=\"amount\"]');\n  };\n\n  const getDropdownFilterList = async () => dropdownMenuEl.find('pierce/market-list.filter-list');\n\n  const isFilterListVisible = async () => {\n    const filterListEl = await getDropdownFilterList();\n    return filterListEl ? filterListEl.isVisible() : Promise.resolve(false);\n  };\n\n  const getDropdownFilterOptions = async () => dropdownMenuEl.find('[slot=\"filter-options\"]');\n\n  const isFilterOptionsVisible = async () => {\n    const filterOptionsEl = await getDropdownFilterOptions();\n    return filterOptionsEl ? filterOptionsEl.isVisible() : Promise.resolve(false);\n  };\n\n  const getBackButtonEl = async () => popoverEl.find('pierce/market-header market-button[slot=\"navigation\"]');\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-filter-group>\n        <market-filter name=\"color\" slot=\"filters\">\n          <label slot=\"label\">Color</label>\n        </market-filter>\n        <market-filter name=\"size\" slot=\"filters\">\n          <label slot=\"label\">Size</label>\n        </market-filter>\n        <market-filter disabled name=\"start-date\" slot=\"filters\">\n          <label slot=\"label\">Start date</label>\n        </market-filter>\n        <!-- filter visibility cutoff here -->\n        <market-filter disabled name=\"end-date\" slot=\"filters\">\n          <label slot=\"label\">End date</label>\n        </market-filter>\n        <market-filter name=\"shape\" slot=\"filters\">\n          <label slot=\"label\">Shape</label>\n          <market-list multiselect slot=\"list\" value=\"square\">\n            <market-row value=\"square\">\n              <label slot=\"label\">Square</label>\n            </market-row>\n            <market-row value=\"circle\">\n              <label slot=\"label\">Circle</label>\n            </market-row>\n            <market-row value=\"triangle\">\n              <label slot=\"label\">Triangle</label>\n            </market-row>\n          </market-list>\n        </market-filter>\n        <market-filter name=\"amount\" slot=\"filters\">\n          <label slot=\"label\">Amount</label>\n          <market-list slot=\"list\">\n            <market-row>\n              <label slot=\"label\">None</label>\n            </market-row>\n            <market-row value=\"1\">\n              <label slot=\"label\">1</label>\n            </market-row>\n            <market-row value=\"2\">\n              <label slot=\"label\">2</label>\n            </market-row>\n            <market-row value=\"3\">\n              <label slot=\"label\">3</label>\n            </market-row>\n          </market-list>\n        </market-filter>\n      </market-filter-group>\n    `);\n    await page.waitForChanges();\n    element = await page.find('market-filter-group');\n    colorFilterEl = await element.find('market-filter[name=\"color\"]');\n    sizeFilterEl = await element.find('market-filter[name=\"size\"]');\n    startDateFilterEl = await element.find('market-filter[name=\"start-date\"]');\n    endDateFilterEl = await element.find('market-filter[name=\"end-date\"]');\n    shapeFilterEl = await element.find('market-filter[name=\"shape\"]');\n    amountFilterEl = await element.find('market-filter[name=\"amount\"]');\n    dropdownMenuEl = await element.find('pierce/market-filter-dropdown-menu');\n    dropdownMenuButtonEl = await dropdownMenuEl.find('pierce/market-filter-button');\n  });\n\n  it('does not show more than 3 filters', async () => {\n    expect(await colorFilterEl.isVisible()).toBe(true);\n    expect(await sizeFilterEl.isVisible()).toBe(true);\n    expect(await startDateFilterEl.isVisible()).toBe(true);\n\n    expect(await endDateFilterEl.isVisible()).toBe(false);\n    expect(await shapeFilterEl.isVisible()).toBe(false);\n    expect(await amountFilterEl.isVisible()).toBe(false);\n  });\n\n  it('dropdown shows overflowed filters', async () => {\n    await openDropdown();\n    expect(await isFilterListVisible()).toBe(true);\n    expect(await endDateFilterEl.isVisible()).toBe(true);\n    expect(await shapeFilterEl.isVisible()).toBe(true);\n    expect(await amountFilterEl.isVisible()).toBe(true);\n  });\n\n  it('disabled filter in dropdown menu cannot be selected', async () => {\n    await openDropdown();\n    expect(endDateFilterEl).toHaveAttribute('disabled');\n    await endDateFilterEl.click();\n    expect(await isFilterOptionsVisible()).toBe(false);\n  });\n\n  it('displays the dropdown menu button with feedback', async () => {\n    expect(await dropdownMenuEl.isVisible()).toBe(true);\n    expect(dropdownMenuButtonEl.textContent).toBe('1'); // 'shape' filter has a default value\n  });\n\n  describe('max-visible-filters', () => {\n    it('has a value of 0', async () => {\n      element.setAttribute('max-visible-filters', 0);\n      await page.waitForChanges();\n\n      expect(await colorFilterEl.isVisible()).toBe(false);\n      expect(await sizeFilterEl.isVisible()).toBe(false);\n      expect(await startDateFilterEl.isVisible()).toBe(false);\n      expect(await endDateFilterEl.isVisible()).toBe(false);\n      expect(await shapeFilterEl.isVisible()).toBe(false);\n      expect(await amountFilterEl.isVisible()).toBe(false);\n    });\n\n    it('has a value of 1', async () => {\n      element.setAttribute('max-visible-filters', 1);\n      await page.waitForChanges();\n\n      expect(await colorFilterEl.isVisible()).toBe(true);\n\n      expect(await sizeFilterEl.isVisible()).toBe(false);\n      expect(await startDateFilterEl.isVisible()).toBe(false);\n      expect(await endDateFilterEl.isVisible()).toBe(false);\n      expect(await shapeFilterEl.isVisible()).toBe(false);\n      expect(await amountFilterEl.isVisible()).toBe(false);\n    });\n\n    it('has a value of 5', async () => {\n      element.setAttribute('max-visible-filters', 5);\n      await page.waitForChanges();\n\n      expect(await colorFilterEl.isVisible()).toBe(true);\n      expect(await sizeFilterEl.isVisible()).toBe(true);\n      expect(await startDateFilterEl.isVisible()).toBe(true);\n      expect(await endDateFilterEl.isVisible()).toBe(true);\n      expect(await shapeFilterEl.isVisible()).toBe(true);\n\n      expect(await amountFilterEl.isVisible()).toBe(false);\n    });\n\n    it('has a massive value', async () => {\n      element.setAttribute('max-visible-filters', Number.MAX_SAFE_INTEGER);\n      await page.waitForChanges();\n\n      expect(await colorFilterEl.isVisible()).toBe(true);\n      expect(await sizeFilterEl.isVisible()).toBe(true);\n      expect(await startDateFilterEl.isVisible()).toBe(true);\n      expect(await endDateFilterEl.isVisible()).toBe(true);\n      expect(await shapeFilterEl.isVisible()).toBe(true);\n      expect(await amountFilterEl.isVisible()).toBe(true);\n    });\n  });\n\n  describe('selects a filter', () => {\n    it('displays selected filter’s options', async () => {\n      await openDropdown();\n\n      // filter options not shown yet\n      expect(await getDropdownFilterOptions()).toBeNull();\n\n      await amountFilterEl.click();\n      expect(await isFilterOptionsVisible()).toBe(true);\n      const listOptionsEl = await getDropdownFilterOptions();\n      expect(await (await listOptionsEl.find('market-row[value=\"1\"]')).isVisible()).toBe(true);\n      expect(await (await listOptionsEl.find('market-row[value=\"2\"]')).isVisible()).toBe(true);\n      expect(await (await listOptionsEl.find('market-row[value=\"3\"]')).isVisible()).toBe(true);\n    });\n\n    it('back button', async () => {\n      await openDropdown();\n\n      // back button isn't displayed yet until we select a filter\n      expect(await getBackButtonEl()).toBeNull();\n\n      // select a filter\n      await amountFilterEl.click();\n      expect(await isFilterOptionsVisible()).toBe(true);\n\n      // click on back button to go back to filter list\n      const backButtonEl = await getBackButtonEl();\n      await backButtonEl.click();\n      expect(await isFilterListVisible()).toBe(true);\n    });\n\n    it('emits event when a filter is selected in the overflow menu', async () => {\n      const filterGroupEventSpy = await element.spyOnEvent('marketFilterValueDidChange');\n      const filterEventSpy = await shapeFilterEl.spyOnEvent('marketFilterValueDidChange');\n\n      await openDropdown();\n      await shapeFilterEl.click();\n      const circleValueRowEl = await dropdownMenuEl.find('pierce/market-row[value=\"circle\"]');\n      await circleValueRowEl.click();\n\n      expect(filterEventSpy).toHaveReceivedEventTimes(1);\n      expect(filterEventSpy).toHaveReceivedEventDetail({\n        name: 'shape',\n        prevValue: 'square',\n        value: ['square', 'circle'],\n      });\n      expect(filterGroupEventSpy).toHaveReceivedEventTimes(1);\n      expect(filterGroupEventSpy).toHaveReceivedEventDetail({\n        name: 'shape',\n        prevValue: 'square',\n        value: ['square', 'circle'],\n      });\n    });\n\n    describe('single select list', () => {\n      it('can select; exits option list after selection', async () => {\n        await openDropdown();\n        await amountFilterEl.click();\n        expect(await isFilterOptionsVisible()).toBe(true);\n\n        const oneValueRowEl = await dropdownMenuEl.find('pierce/market-row[value=\"1\"]');\n        await oneValueRowEl.click();\n        expect(await isFilterListVisible()).toBe(true);\n      });\n\n      it('feedback is updated after selection', async () => {\n        expect(dropdownMenuButtonEl.textContent).toBe('1');\n\n        await openDropdown();\n\n        // add selection on 'amount' filter, feedback becomes '2'\n        await amountFilterEl.click();\n        const oneValueRowEl = await dropdownMenuEl.find('pierce/market-row[value=\"1\"]');\n        await oneValueRowEl.click();\n        expect(dropdownMenuButtonEl.textContent).toBe('2');\n\n        // remove selection on 'amount' filter, feedback becomes '1'\n        await amountFilterEl.click();\n        const noneValueRowEl = await dropdownMenuEl.find('pierce/market-row:not([value])');\n        await noneValueRowEl.click();\n        expect(dropdownMenuButtonEl.textContent).toBe('1');\n      });\n    });\n\n    describe('multi select list', () => {\n      it('can select; does not exit option list after selection', async () => {\n        await openDropdown();\n        await shapeFilterEl.click();\n        expect(await isFilterOptionsVisible()).toBe(true);\n\n        const squareValueEl = await dropdownMenuEl.find('pierce/market-row[value=\"square\"]');\n        await squareValueEl.click();\n        expect(await isFilterOptionsVisible()).toBe(true);\n\n        const circleValueEl = await dropdownMenuEl.find('pierce/market-row[value=\"circle\"]');\n        await circleValueEl.click();\n        expect(await isFilterOptionsVisible()).toBe(true);\n\n        const triangleValueEl = await dropdownMenuEl.find('pierce/market-row[value=\"triangle\"]');\n        await triangleValueEl.click();\n        expect(await isFilterOptionsVisible()).toBe(true);\n      });\n\n      it('feedback is updated after selection', async () => {\n        // 'shape' filter has a default value of 'square'\n        expect(dropdownMenuButtonEl.textContent).toBe('1');\n\n        await openDropdown();\n        await shapeFilterEl.click();\n\n        // deselect 'square'\n        const squareValueEl = await dropdownMenuEl.find('pierce/market-row[value=\"square\"]');\n        await squareValueEl.click();\n        expect(dropdownMenuButtonEl.textContent).toBe('0');\n\n        // select 'circle', feedback becomes '1'\n        const circleValueEl = await dropdownMenuEl.find('pierce/market-row[value=\"circle\"]');\n        await circleValueEl.click();\n        expect(dropdownMenuButtonEl.textContent).toBe('1');\n\n        // select 'triangle', feedback stays at '1'\n        const triangleValueEl = await dropdownMenuEl.find('pierce/market-row[value=\"triangle\"]');\n        await triangleValueEl.click();\n        expect(dropdownMenuButtonEl.textContent).toBe('1');\n\n        // unselect all / multiple options, feedback becomes '0'\n        await circleValueEl.click();\n        await triangleValueEl.click();\n        expect(dropdownMenuButtonEl.textContent).toBe('0');\n      });\n    });\n  });\n});\n"]}