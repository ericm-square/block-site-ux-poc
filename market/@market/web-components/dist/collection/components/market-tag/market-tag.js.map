{"version":3,"file":"market-tag.js","sourceRoot":"","sources":["../../../../src/components/market-tag/market-tag.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAgB,OAAO,EAAE,MAAM,eAAe,CAAC;AAE9F;;;GAGG;AAMH,MAAM,OAAO,SAAS;;wBAMkC,KAAK;uBAKA,KAAK;oBAKH,OAAO;uBAKxC,KAAK;;IAOjC,sCAAsC;IACtC,OAAO;QACL,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,OAAO;QACT,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;IACH,CAAC;IAED,qBAAqB,CAAC,CAAQ;QAC5B,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;IACnB,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;IACjE,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDACH,KAAK,EAAE,cAAc,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,EACrD,OAAO,EAAE,GAAG,EAAE;gBACZ,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EACD,OAAO,EAAE,GAAG,EAAE;gBACZ,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,mBACc,IAAI,CAAC,QAAQ;YAE5B,6DAAM,KAAK,EAAC,MAAM;gBAChB,6DAAM,IAAI,EAAC,MAAM,GAAQ,CACpB;YACP,8DAAa;YACb,4DACE,KAAK,EAAC,kBAAkB,EACxB,KAAK,EAAC,IAAI,EACV,MAAM,EAAC,IAAI,EACX,OAAO,EAAC,WAAW,EACnB,KAAK,EAAC,4BAA4B,EAClC,OAAO,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBAEpD,6DAAM,CAAC,EAAC,gNAAgN,GAAG,CACvN,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, Prop, State, h, Event, EventEmitter, Element } from '@stencil/core';\n\n/**\n * @slot - The text used for the tag label\n * @slot icon - an icon that is to the left of tag text\n */\n@Component({\n  tag: 'market-tag',\n  styleUrl: 'market-tag.css',\n  shadow: true,\n})\nexport class MarketTag {\n  @Element() el: HTMLMarketTagElement;\n\n  /**\n   * Functionally and visually disables the tag\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Whether or not the tag is in a focused state\n   */\n  @Prop({ mutable: true, reflect: true }) focused: boolean = false;\n\n  /**\n   * String for setting tag size\n   */\n  @Prop({ reflect: true }) readonly size: 'medium' | 'small' = 'small';\n\n  /**\n   * Whether or not the tag contains an icon\n   */\n  @State() hasIcon: boolean = false;\n\n  /**\n   * Emitted when the tag's remove indicator is clicked.\n   */\n  @Event() marketTagDismissed: EventEmitter;\n\n  /* handles click and unclick in tag */\n  onFocus() {\n    if (this.disabled) {\n      return;\n    }\n\n    if (!this.focused) {\n      this.focused = true;\n    } else {\n      this.focused = false;\n    }\n  }\n\n  handleDismissTagEvent(e: Event) {\n    this.marketTagDismissed.emit();\n    e.stopPropagation();\n    this.el.remove();\n  }\n\n  componentWillLoad() {\n    this.hasIcon = Boolean(this.el.querySelector('[slot=\"icon\"]'));\n  }\n\n  render() {\n    return (\n      <Host\n        class={`market-tag ${this.hasIcon ? 'has-icon' : ''}`}\n        onClick={() => {\n          this.onFocus();\n        }}\n        onFocus={() => {\n          this.onFocus();\n        }}\n        aria-disabled={this.disabled}\n      >\n        <span class=\"icon\">\n          <slot name=\"icon\"></slot>\n        </span>\n        <slot></slot>\n        <svg\n          class=\"remove-indicator\"\n          width=\"16\"\n          height=\"16\"\n          viewBox=\"0 0 16 16\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          onClick={(e: Event) => this.handleDismissTagEvent(e)}\n        >\n          <path d=\"M4.4734 12.4734L8.00007 8.94002L11.5267 12.4734L12.4734 11.5267L8.94007 8.00002L12.4734 4.47335L11.5267 3.52669L8.00007 7.06002L4.4734 3.52669L3.52673 4.47335L7.06007 8.00002L3.52673 11.5267L4.4734 12.4734Z\" />\n        </svg>\n      </Host>\n    );\n  }\n}\n"]}