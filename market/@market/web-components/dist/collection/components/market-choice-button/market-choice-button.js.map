{"version":3,"file":"market-choice-button.js","sourceRoot":"","sources":["../../../../src/components/market-choice-button/market-choice-button.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAEvF;;;GAGG;AAMH,MAAM,OAAO,kBAAkB;;wBAMyB,KAAK;wBAKC,KAAK;oBAKM,QAAQ;;IAY/E,OAAO,CAAC,CAAQ;QACd,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC,CAAC,wBAAwB,EAAE,CAAC;YAC7B,OAAO;QACT,CAAC;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,4BAA4B,CAAC,IAAI,EAAE,CAAC;QAC3C,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,CAAC;QACzC,CAAC;IACH,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QAE1B,OAAO,CACL,EAAC,IAAI,qDACH,KAAK,EAAC,sBAAsB,EAC5B,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EACnC,OAAO,EAAE,CAAC,CAAQ,EAAE,EAAE;gBACpB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC;YAED,gFAAuB,QAAQ;gBAC7B,8DAAa;gBACb,6DAAM,IAAI,EAAC,gBAAgB,GAAQ,CAC5B,CACJ,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, Host, h, Element, Event, EventEmitter } from '@stencil/core';\n\n/**\n * @slot - The text used for the choice button label\n * @slot secondary-text - text to the right side of choice button\n */\n@Component({\n  tag: 'market-choice-button',\n  shadow: true,\n  styleUrl: 'market-choice-button.css',\n})\nexport class MarketChoiceButton {\n  @Element() el: HTMLMarketChoiceButtonElement;\n\n  /**\n   * Functionally and visually disables the choice button\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Whether or not the choice button is in a selected state\n   */\n  @Prop({ mutable: true, reflect: true }) selected: boolean = false;\n\n  /**\n   * String for setting choice button size\n   */\n  @Prop({ reflect: true }) readonly size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Emitted when the choice button is selected\n   */\n  @Event() marketChoiceButtonSelected: EventEmitter;\n\n  /**\n   * Emitted when the choice button is deselected\n   */\n  @Event() marketChoiceButtonDeselected: EventEmitter;\n\n  onClick(e: Event) {\n    if (this.disabled) {\n      e.stopImmediatePropagation();\n      return;\n    }\n    if (this.selected) {\n      this.selected = false;\n      this.marketChoiceButtonDeselected.emit();\n    } else {\n      this.selected = true;\n      this.marketChoiceButtonSelected.emit();\n    }\n  }\n\n  render() {\n    const { disabled } = this;\n\n    return (\n      <Host\n        class=\"market-choice-button\"\n        tabindex={disabled ? -1 : undefined}\n        onClick={(e: Event) => {\n          this.onClick(e);\n        }}\n      >\n        <button aria-disabled={disabled}>\n          <slot></slot>\n          <slot name=\"secondary-text\"></slot>\n        </button>\n      </Host>\n    );\n  }\n}\n"]}