{"version":3,"file":"market-textarea.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-textarea/test/market-textarea.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement } from '@stencil/core/testing';\n\ndescribe('market-textarea', () => {\n  let page;\n\n  it('should render with defaults', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-textarea></market-textarea>');\n    const el = await page.find('market-textarea');\n    expect(el).not.toBeNull();\n\n    const textarea = await el.find('pierce/textarea');\n    expect(textarea).not.toBeNull();\n\n    expect(textarea).toEqualAttribute('placeholder', null);\n    expect(textarea).toEqualAttribute('name', null);\n    expect(textarea).toEqualAttribute('value', null);\n    expect(textarea).toEqualAttribute('maxlength', null);\n    expect(textarea).toEqualAttribute('inputmode', null);\n    expect(textarea).not.toHaveAttribute('disabled');\n    expect(textarea).not.toHaveAttribute('readonly');\n    expect(textarea).not.toHaveAttribute('value');\n    expect(textarea).not.toHaveAttribute('invalid');\n    expect(textarea).not.toHaveAttribute('focused');\n  });\n\n  it('can have a label', async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-textarea>\n        <label>Label</label>\n      </market-textarea>\n    `);\n\n    const label = await page.find('market-textarea label');\n    expect(label).not.toBeNull();\n  });\n\n  describe('when disabled', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent('<market-textarea disabled></market-textarea>');\n    });\n\n    it('should have disabled properties', async () => {\n      const el = await page.find('market-textarea');\n      const textarea = await el.find('pierce/textarea');\n\n      expect(el).toHaveAttribute('disabled');\n      expect(textarea).toHaveAttribute('disabled');\n    });\n\n    it('should not focus on click', async () => {\n      const el = await page.find('market-textarea');\n\n      await el.click();\n      expect(el).not.toHaveAttribute('focused');\n    });\n  });\n\n  it('can be invalid', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-textarea invalid></market-textarea>');\n\n    const el = await page.find('market-textarea');\n\n    expect(el).toHaveAttribute('invalid');\n  });\n\n  it('can be focused', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-textarea></market-textarea>');\n\n    const el = await page.find('market-textarea');\n    const textarea = await el.find('pierce/textarea');\n\n    await textarea.focus();\n    await page.waitForChanges();\n\n    expect(el).toHaveAttribute('focused');\n  });\n\n  it('can be autofocused', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-textarea autofocus></market-textarea>');\n    const el = await page.find('market-textarea');\n    expect(el).toHaveAttribute('focused');\n  });\n\n  it('can have a default value', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-textarea value=\"foo bar\"></market-textarea>');\n    const el = await page.find('market-textarea');\n    expect(el).toEqualAttribute('value', 'foo bar');\n  });\n\n  it('can have a name', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-textarea name=\"foo bar\"></market-textarea>');\n    const el = await page.find('market-textarea');\n    const textarea = await el.find('pierce/textarea');\n    expect(textarea).toEqualAttribute('name', 'foo bar');\n  });\n\n  it('can change placeholder', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-textarea placeholder=\"foo bar\"></market-textarea>');\n    const el = await page.find('market-textarea');\n    const textarea = await el.find('pierce/textarea');\n    expect(textarea).toEqualAttribute('placeholder', 'foo bar');\n  });\n\n  it('can change maxlength', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-textarea maxlength=\"20\"></market-textarea>');\n    const el = await page.find('market-textarea');\n    const textarea = await el.find('pierce/textarea');\n    expect(textarea).toEqualAttribute('maxlength', '20');\n  });\n\n  it('can change inputmode', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-textarea inputmode=\"numeric\"></market-textarea>');\n    const el = await page.find('market-textarea');\n    const textarea = await el.find('pierce/textarea');\n    expect(textarea).toEqualAttribute('inputmode', 'numeric');\n  });\n\n  it('can change value', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-textarea></market-textarea>');\n\n    const el = await page.find('market-textarea');\n    const textarea = await el.find('pierce/textarea');\n\n    await textarea.type('changed value');\n    await page.waitForChanges();\n\n    expect(el).toEqualAttribute('value', 'changed value');\n  });\n\n  it('fires the change value event when textarea changes', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-textarea></market-textarea>');\n\n    const el = await page.find('market-textarea');\n    const textarea = await el.find('pierce/textarea');\n    const marketTextareaValueChange = await page.spyOnEvent('marketTextareaValueChange');\n\n    await textarea.type('event value changed');\n\n    await page.waitForChanges();\n\n    expect(marketTextareaValueChange.lastEvent.detail.value).toEqual('event value changed');\n  });\n\n  it('should pass down aria attributes to textarea element', async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-textarea aria-required=\"true\"></market-textarea>');\n\n    const el: E2EElement = await page.find('market-textarea');\n    const textarea = await el.find('pierce/textarea');\n\n    expect(textarea).toEqualAttribute('aria-required', 'true');\n\n    el.setAttribute('aria-required', false);\n    await page.waitForChanges();\n    expect(textarea).toEqualAttribute('aria-required', 'false');\n  });\n\n  describe('when used with a slotted textarea', () => {\n    let page: E2EPage;\n    let customTextarea: E2EElement;\n    let slottedTextarea: E2EElement;\n    let defaultTextarea: E2EElement;\n\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-textarea class=\"default\"></market-textarea>\n        <market-textarea class=\"custom\">\n          <textarea slot=\"textarea\" />\n        </market-textarea>\n      `);\n\n      customTextarea = await page.find('.custom');\n      slottedTextarea = await customTextarea.find('textarea');\n      defaultTextarea = await page.find('.default');\n    });\n\n    it('conditionally renders either the slotted or default textarea', async () => {\n      // market-textarea with slotted textarea\n      let lightDomTextarea = slottedTextarea;\n      let shadowTextarea = customTextarea.shadowRoot.querySelector('textarea');\n      expect(lightDomTextarea).not.toBe(null);\n      expect(shadowTextarea).toBe(null);\n\n      // market-textarea w/o slotted textarea\n      lightDomTextarea = await defaultTextarea.find('textarea');\n      shadowTextarea = defaultTextarea.shadowRoot.querySelector('textarea');\n      expect(lightDomTextarea).toBe(null);\n      expect(shadowTextarea).not.toBe(null);\n    });\n\n    it('focuses/blurs slotted textarea on mouse interaction', async () => {\n      await customTextarea.click(); // focus\n      await page.waitForChanges();\n\n      expect(customTextarea).toHaveAttribute('focused');\n      expect(await page.find(':focus')).toEqual(slottedTextarea);\n\n      await defaultTextarea.click(); // blur\n      await page.waitForChanges();\n\n      expect(customTextarea).not.toHaveAttribute('focused');\n      expect(await page.find(':focus')).not.toEqual(slottedTextarea);\n\n      await customTextarea.click(); // focus\n      await page.waitForChanges();\n\n      expect(customTextarea).toHaveAttribute('focused');\n      expect(await page.find(':focus')).toEqual(slottedTextarea);\n    });\n\n    it('focuses/blurs slotted textarea on tab interaction', async () => {\n      await defaultTextarea.click();\n      await page.keyboard.press('Tab'); // focus\n      await page.waitForChanges();\n\n      expect(customTextarea).toHaveAttribute('focused');\n      expect(await page.find(':focus')).toEqual(slottedTextarea);\n\n      await page.keyboard.press('Tab'); // blur\n      await page.waitForChanges();\n\n      expect(customTextarea).not.toHaveAttribute('focused');\n      expect(await page.find(':focus')).not.toEqual(slottedTextarea);\n    });\n\n    it('syncs its properties with the slotted textarea', async () => {\n      customTextarea.setAttribute('disabled', true);\n      customTextarea.setAttribute('maxlength', 8);\n      await page.waitForChanges();\n\n      expect(slottedTextarea).toHaveAttribute('disabled');\n      expect(slottedTextarea).toEqualAttribute('maxlength', 8);\n\n      customTextarea.setAttribute('disabled', false);\n      customTextarea.setAttribute('maxlength', 16);\n      await page.waitForChanges();\n\n      expect(slottedTextarea).not.toHaveAttribute('disabled');\n      expect(slottedTextarea).toEqualAttribute('maxlength', 16);\n    });\n  });\n});\n"]}