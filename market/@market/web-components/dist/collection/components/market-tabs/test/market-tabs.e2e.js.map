{"version":3,"file":"market-tabs.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-tabs/test/market-tabs.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EElement, E2EPage, newE2EPage } from '@stencil/core/testing';\n\ndescribe('market-tabs', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let tabEls: E2EElement[];\n  let tabPanelEls: E2EElement[];\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-tabs>\n        <market-tab-list>\n          <market-tab id=\"tab-1\" aria-controls=\"panel-1\" disabled>Tab 1</market-tab>\n          <market-tab id=\"tab-2\" aria-controls=\"panel-2\">Tab 2</market-tab>\n          <market-tab id=\"tab-3\" aria-controls=\"panel-3\">Tab 3</market-tab>\n          <market-tab id=\"tab-4\" aria-controls=\"panel-4\" disabled>Tab 4</market-tab>\n          <market-tab id=\"tab-5\" aria-controls=\"panel-5\">Tab 5</market-tab>\n          <market-tab id=\"tab-6\" aria-controls=\"panel-6\" disabled>Tab 6</market-tab>\n        </market-tab-list>\n        <market-tab-panel id=\"panel-1\" aria-labelledby=\"tab-1\">\n          <p>Content for tab 1</p>\n          <market-button>Button 1</market-button>\n        </market-tab-panel>\n        <market-tab-panel id=\"panel-2\" aria-labelledby=\"tab-2\">\n          <p>Content for tab 2</p>\n          <market-button>Button 2</market-button>\n        </market-tab-panel>\n        <market-tab-panel id=\"panel-3\" aria-labelledby=\"tab-3\">\n          <p>Content for tab 3</p>\n          <market-button>Button 3</market-button>\n        </market-tab-panel>\n        <market-tab-panel id=\"panel-4\" aria-labelledby=\"tab-4\">\n          <p>Content for tab 4</p>\n          <market-button>Button 4</market-button>\n        </market-tab-panel>\n        <market-tab-panel id=\"panel-5\" aria-labelledby=\"tab-5\">\n          <p>Content for tab 5</p>\n          <market-button>Button 5</market-button>\n        </market-tab-panel>\n        <market-tab-panel id=\"panel-6\" aria-labelledby=\"tab-6\">\n          <p>Content for tab 6</p>\n          <market-button>Button 6</market-button>\n        </market-tab-panel>\n      </market-tabs>\n    `);\n    await page.waitForChanges();\n    el = await page.find('market-tabs');\n    tabEls = await el.findAll('market-tab');\n    tabPanelEls = await el.findAll('market-tab-panel');\n  });\n\n  it('renders; selects the first valid tab and displays its associated panel', async () => {\n    expect(el).toHaveClass('market-tabs');\n    expect(el).toHaveAttribute('hydrated');\n    expect(el).toEqualAttribute('selected-tab', 'tab-2');\n\n    // 2nd tab (tab-2) is selected\n    expect(tabEls[0]).not.toHaveAttribute('selected');\n    expect(tabEls[1]).toHaveAttribute('selected');\n    expect(tabEls[2]).not.toHaveAttribute('selected');\n    expect(tabEls[3]).not.toHaveAttribute('selected');\n    expect(tabEls[4]).not.toHaveAttribute('selected');\n    expect(tabEls[5]).not.toHaveAttribute('selected');\n    expect(tabEls[0]).toEqualAttribute('aria-selected', 'false');\n    expect(tabEls[1]).toEqualAttribute('aria-selected', 'true');\n    expect(tabEls[2]).toEqualAttribute('aria-selected', 'false');\n    expect(tabEls[3]).toEqualAttribute('aria-selected', 'false');\n    expect(tabEls[4]).toEqualAttribute('aria-selected', 'false');\n    expect(tabEls[5]).toEqualAttribute('aria-selected', 'false');\n\n    // 2nd panel (panel-2) is visible\n    expect(tabPanelEls[0]).toHaveAttribute('hidden');\n    expect(tabPanelEls[1]).not.toHaveAttribute('hidden');\n    expect(tabPanelEls[2]).toHaveAttribute('hidden');\n    expect(tabPanelEls[3]).toHaveAttribute('hidden');\n    expect(tabPanelEls[4]).toHaveAttribute('hidden');\n    expect(tabPanelEls[5]).toHaveAttribute('hidden');\n    expect(tabPanelEls[0]).toEqualAttribute('aria-hidden', 'true');\n    expect(tabPanelEls[1]).toEqualAttribute('aria-hidden', 'false');\n    expect(tabPanelEls[2]).toEqualAttribute('aria-hidden', 'true');\n    expect(tabPanelEls[3]).toEqualAttribute('aria-hidden', 'true');\n    expect(tabPanelEls[4]).toEqualAttribute('aria-hidden', 'true');\n    expect(tabPanelEls[5]).toEqualAttribute('aria-hidden', 'true');\n    expect(await tabPanelEls[0].isVisible()).toStrictEqual(false);\n    expect(await tabPanelEls[1].isVisible()).toStrictEqual(true);\n    expect(await tabPanelEls[2].isVisible()).toStrictEqual(false);\n    expect(await tabPanelEls[3].isVisible()).toStrictEqual(false);\n    expect(await tabPanelEls[4].isVisible()).toStrictEqual(false);\n    expect(await tabPanelEls[5].isVisible()).toStrictEqual(false);\n  });\n\n  describe('tab attribute', () => {\n    it('can change tab via tab attribute', async () => {\n      el.setAttribute('selected-tab', 'tab-3');\n      await page.waitForChanges();\n\n      // 3rd tab (tab-3) is selected\n      expect(tabEls[0]).not.toHaveAttribute('selected');\n      expect(tabEls[1]).not.toHaveAttribute('selected');\n      expect(tabEls[2]).toHaveAttribute('selected');\n      expect(tabEls[3]).not.toHaveAttribute('selected');\n      expect(tabEls[4]).not.toHaveAttribute('selected');\n      expect(tabEls[5]).not.toHaveAttribute('selected');\n      expect(tabEls[0]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[1]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[2]).toEqualAttribute('aria-selected', 'true');\n      expect(tabEls[3]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[4]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[5]).toEqualAttribute('aria-selected', 'false');\n\n      // 3rd panel (panel-3) is visible\n      expect(tabPanelEls[0]).toHaveAttribute('hidden');\n      expect(tabPanelEls[1]).toHaveAttribute('hidden');\n      expect(tabPanelEls[2]).not.toHaveAttribute('hidden');\n      expect(tabPanelEls[3]).toHaveAttribute('hidden');\n      expect(tabPanelEls[4]).toHaveAttribute('hidden');\n      expect(tabPanelEls[5]).toHaveAttribute('hidden');\n      expect(tabPanelEls[0]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[1]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[2]).toEqualAttribute('aria-hidden', 'false');\n      expect(tabPanelEls[3]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[4]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[5]).toEqualAttribute('aria-hidden', 'true');\n      expect(await tabPanelEls[0].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[1].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[2].isVisible()).toStrictEqual(true);\n      expect(await tabPanelEls[3].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[4].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[5].isVisible()).toStrictEqual(false);\n    });\n\n    it('updates when a tab is clicked', async () => {\n      const buttonEl = await tabEls[4].find('pierce/button');\n      await buttonEl.click();\n\n      // 5th tab (tab-5) is selected\n      expect(tabEls[0]).not.toHaveAttribute('selected');\n      expect(tabEls[1]).not.toHaveAttribute('selected');\n      expect(tabEls[2]).not.toHaveAttribute('selected');\n      expect(tabEls[3]).not.toHaveAttribute('selected');\n      expect(tabEls[4]).toHaveAttribute('selected');\n      expect(tabEls[5]).not.toHaveAttribute('selected');\n      expect(tabEls[0]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[1]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[2]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[3]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[4]).toEqualAttribute('aria-selected', 'true');\n      expect(tabEls[5]).toEqualAttribute('aria-selected', 'false');\n\n      // 5th panel (panel-5) is visible\n      expect(tabPanelEls[0]).toHaveAttribute('hidden');\n      expect(tabPanelEls[1]).toHaveAttribute('hidden');\n      expect(tabPanelEls[2]).toHaveAttribute('hidden');\n      expect(tabPanelEls[3]).toHaveAttribute('hidden');\n      expect(tabPanelEls[4]).not.toHaveAttribute('hidden');\n      expect(tabPanelEls[5]).toHaveAttribute('hidden');\n      expect(tabPanelEls[0]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[1]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[2]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[3]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[4]).toEqualAttribute('aria-hidden', 'false');\n      expect(tabPanelEls[5]).toEqualAttribute('aria-hidden', 'true');\n      expect(await tabPanelEls[0].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[1].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[2].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[3].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[4].isVisible()).toStrictEqual(true);\n      expect(await tabPanelEls[5].isVisible()).toStrictEqual(false);\n    });\n  });\n\n  describe('default-tab attribute', () => {\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-tabs default-tab=\"tab-2\">\n          <market-tab-list>\n            <market-tab id=\"tab-1\" aria-controls=\"panel-1\">Tab 1</market-tab>\n            <market-tab id=\"tab-2\" aria-controls=\"panel-2\">Tab 2</market-tab>\n            <market-tab id=\"tab-3\" aria-controls=\"panel-3\">Tab 3</market-tab>\n          </market-tab-list>\n          <market-tab-panel id=\"panel-1\" aria-labelledby=\"tab-1\">Content for tab 1</market-tab-panel>\n          <market-tab-panel id=\"panel-2\" aria-labelledby=\"tab-2\">Content for tab 2</market-tab-panel>\n          <market-tab-panel id=\"panel-3\" aria-labelledby=\"tab-3\">Content for tab 3</market-tab-panel>\n        </market-tabs>\n      `);\n      await page.waitForChanges();\n      el = await page.find('market-tabs');\n      tabEls = await el.findAll('market-tab');\n      tabPanelEls = await el.findAll('market-tab-panel');\n    });\n\n    it('selects the default tab via `default-tab` prop', async () => {\n      expect(el).toEqualAttribute('selected-tab', 'tab-2');\n\n      // 2nd tab (tab-2) is selected\n      expect(tabEls[0]).not.toHaveAttribute('selected');\n      expect(tabEls[1]).toHaveAttribute('selected');\n      expect(tabEls[2]).not.toHaveAttribute('selected');\n      expect(tabEls[0]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[1]).toEqualAttribute('aria-selected', 'true');\n      expect(tabEls[2]).toEqualAttribute('aria-selected', 'false');\n\n      // 2nd panel (panel-2) is visible\n      expect(tabPanelEls[0]).toHaveAttribute('hidden');\n      expect(tabPanelEls[1]).not.toHaveAttribute('hidden');\n      expect(tabPanelEls[2]).toHaveAttribute('hidden');\n      expect(tabPanelEls[0]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[1]).toEqualAttribute('aria-hidden', 'false');\n      expect(tabPanelEls[2]).toEqualAttribute('aria-hidden', 'true');\n      expect(await tabPanelEls[0].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[1].isVisible()).toStrictEqual(true);\n      expect(await tabPanelEls[2].isVisible()).toStrictEqual(false);\n    });\n\n    it('can select other tabs when a tab is clicked', async () => {\n      const buttonEl = await tabEls[2].find('pierce/button');\n      await buttonEl.click();\n      expect(el).toEqualAttribute('selected-tab', 'tab-3');\n\n      // 3rd tab (tab-3) is selected\n      expect(tabEls[0]).not.toHaveAttribute('selected');\n      expect(tabEls[1]).not.toHaveAttribute('selected');\n      expect(tabEls[2]).toHaveAttribute('selected');\n      expect(tabEls[0]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[1]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[2]).toEqualAttribute('aria-selected', 'true');\n\n      // 3rd panel (panel-3) is visible\n      expect(tabPanelEls[0]).toHaveAttribute('hidden');\n      expect(tabPanelEls[1]).toHaveAttribute('hidden');\n      expect(tabPanelEls[2]).not.toHaveAttribute('hidden');\n      expect(tabPanelEls[0]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[1]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[2]).toEqualAttribute('aria-hidden', 'false');\n      expect(await tabPanelEls[0].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[1].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[2].isVisible()).toStrictEqual(true);\n    });\n\n    it('does not change tabs when `default-tab` value is changed later', async () => {\n      el.setAttribute('default-tab', 'tab-3');\n      await page.waitForChanges();\n\n      // 2nd tab (tab-2) is selected\n      expect(tabEls[0]).not.toHaveAttribute('selected');\n      expect(tabEls[1]).toHaveAttribute('selected');\n      expect(tabEls[2]).not.toHaveAttribute('selected');\n      expect(tabEls[0]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[1]).toEqualAttribute('aria-selected', 'true');\n      expect(tabEls[2]).toEqualAttribute('aria-selected', 'false');\n\n      // 2nd panel (panel-2) is visible\n      expect(tabPanelEls[0]).toHaveAttribute('hidden');\n      expect(tabPanelEls[1]).not.toHaveAttribute('hidden');\n      expect(tabPanelEls[2]).toHaveAttribute('hidden');\n      expect(tabPanelEls[0]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[1]).toEqualAttribute('aria-hidden', 'false');\n      expect(tabPanelEls[2]).toEqualAttribute('aria-hidden', 'true');\n      expect(await tabPanelEls[0].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[1].isVisible()).toStrictEqual(true);\n      expect(await tabPanelEls[2].isVisible()).toStrictEqual(false);\n    });\n\n    it('selects the tab provided on the `selected-tab` attribute over the `default-tab` attribute when both are provided', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-tabs default-tab=\"tab-2\" selected-tab=\"tab-3\">\n          <market-tab-list>\n            <market-tab id=\"tab-1\" aria-controls=\"panel-1\">Tab 1</market-tab>\n            <market-tab id=\"tab-2\" aria-controls=\"panel-2\">Tab 2</market-tab>\n            <market-tab id=\"tab-3\" aria-controls=\"panel-3\">Tab 3</market-tab>\n          </market-tab-list>\n          <market-tab-panel id=\"panel-1\" aria-labelledby=\"tab-1\">Content for tab 1</market-tab-panel>\n          <market-tab-panel id=\"panel-2\" aria-labelledby=\"tab-2\">Content for tab 2</market-tab-panel>\n          <market-tab-panel id=\"panel-3\" aria-labelledby=\"tab-3\">Content for tab 3</market-tab-panel>\n        </market-tabs>\n      `);\n      await page.waitForChanges();\n      el = await page.find('market-tabs');\n      tabEls = await el.findAll('market-tab');\n      tabPanelEls = await el.findAll('market-tab-panel');\n\n      // 3rd tab (tab-3) is selected\n      expect(tabEls[0]).not.toHaveAttribute('selected');\n      expect(tabEls[1]).not.toHaveAttribute('selected');\n      expect(tabEls[2]).toHaveAttribute('selected');\n      expect(tabEls[0]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[1]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[2]).toEqualAttribute('aria-selected', 'true');\n\n      // 3rd panel (panel-3) is visible\n      expect(tabPanelEls[0]).toHaveAttribute('hidden');\n      expect(tabPanelEls[1]).toHaveAttribute('hidden');\n      expect(tabPanelEls[2]).not.toHaveAttribute('hidden');\n      expect(tabPanelEls[0]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[1]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[2]).toEqualAttribute('aria-hidden', 'false');\n      expect(await tabPanelEls[0].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[1].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[2].isVisible()).toStrictEqual(true);\n    });\n\n    it('cannot have a default tab that is disabled', async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-tabs default-tab=\"tab-2\">\n          <market-tab-list>\n            <market-tab id=\"tab-1\" aria-controls=\"panel-1\" disabled>Tab 1</market-tab>\n            <market-tab id=\"tab-2\" aria-controls=\"panel-2\" disabled>Tab 2</market-tab>\n            <market-tab id=\"tab-3\" aria-controls=\"panel-3\">Tab 3</market-tab>\n          </market-tab-list>\n          <market-tab-panel id=\"panel-1\" aria-labelledby=\"tab-1\">Content for tab 1</market-tab-panel>\n          <market-tab-panel id=\"panel-2\" aria-labelledby=\"tab-2\">Content for tab 2</market-tab-panel>\n          <market-tab-panel id=\"panel-3\" aria-labelledby=\"tab-3\">Content for tab 3</market-tab-panel>\n        </market-tabs>\n      `);\n      await page.waitForChanges();\n      el = await page.find('market-tabs');\n      tabEls = await el.findAll('market-tab');\n      tabPanelEls = await el.findAll('market-tab-panel');\n\n      expect(el).toEqualAttribute('selected-tab', 'tab-3');\n\n      // 3rd tab (tab-3) is selected\n      expect(tabEls[0]).not.toHaveAttribute('selected');\n      expect(tabEls[1]).not.toHaveAttribute('selected');\n      expect(tabEls[2]).toHaveAttribute('selected');\n      expect(tabEls[0]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[1]).toEqualAttribute('aria-selected', 'false');\n      expect(tabEls[2]).toEqualAttribute('aria-selected', 'true');\n\n      // 3rd panel (panel-3) is visible\n      expect(tabPanelEls[0]).toHaveAttribute('hidden');\n      expect(tabPanelEls[1]).toHaveAttribute('hidden');\n      expect(tabPanelEls[2]).not.toHaveAttribute('hidden');\n      expect(tabPanelEls[0]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[1]).toEqualAttribute('aria-hidden', 'true');\n      expect(tabPanelEls[2]).toEqualAttribute('aria-hidden', 'false');\n      expect(await tabPanelEls[0].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[1].isVisible()).toStrictEqual(false);\n      expect(await tabPanelEls[2].isVisible()).toStrictEqual(true);\n    });\n  });\n});\n"]}