{"version":3,"file":"market-tabs.templates.js","sourceRoot":"","sources":["../../../../../src/components/market-tabs/storybook/market-tabs.templates.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,SAAS,EAAE,MAAM,mCAAmC,CAAC;AAE9D,OAAO,EACL,eAAe,GAEhB,MAAM,sEAAsE,CAAC;AAC9E,OAAO,EAAE,gBAAgB,EAAE,MAAM,wEAAwE,CAAC;AAC1G,OAAO,EAAE,sBAAsB,EAAE,MAAM,0CAA0C,CAAC;AAIlF,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,EAC3B,UAAU,EACV,kBAAkB,EAClB,YAAY,EACZ,WAAW,EACX,IAAI,GACoB,EAAE,EAAE,CAAC,IAAI,CAAA;6BACN,SAAS,CAAC,UAAU,CAAC,iBAAiB,SAAS,CAAC,WAAW,CAAC;MACnF,eAAe,CAAC;IAChB,kBAAkB;IAClB,YAAY;IACZ,IAAI;CACL,CAAC;MACA,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC;KACnC,IAAI,CAAC,SAAS,CAAC;KACf,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAChB,gBAAgB,CAAC;IACf,cAAc,EAAE,OAAO,KAAK,GAAG,CAAC,EAAE;IAClC,OAAO,EAAE,IAAI,CAAA;uBACA,KAAK,GAAG,CAAC;oCACI,KAAK,GAAG,CAAC;8BACf,KAAK,GAAG,CAAC;WAC5B;IACD,EAAE,EAAE,SAAS,KAAK,GAAG,CAAC,EAAE;CACzB,CAAC,CACH;;CAEN,CAAC;AAEF,MAAM,CAAC,MAAM,yBAAyB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;CAyBlD,CAAC;AAEF,MAAM,CAAC,MAAM,0BAA0B,GAA2B,CAAC,KAAK,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE;IAC7F,sBAAsB,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;QAC9C,MAAM,SAAS,GAAG,aAAa,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QACjE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,gBAAgB,CAAC,0BAA0B,EAAE,CAAC,KAAkB,EAAE,EAAE;YAC7E,MAAM,OAAO,GAAG,aAAa,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAA8B,CAAC;YACrG,OAAO,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,OAAO,KAAK,EAAE,CAAC;AACjB,CAAC,CAAC","sourcesContent":["import { StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit-html/directives/if-defined.js';\n\nimport {\n  TabListTemplate,\n  TMarketTabListTemplateArgs,\n} from '../subcomponents/market-tab-list/storybook/market-tab-list.templates';\nimport { TabPanelTemplate } from '../subcomponents/market-tab-panel/storybook/market-tab-panel.templates';\nimport { waitForMarketHydration } from '../../../utils/wait-for-market-hydration';\n\nexport type TMarketTabsTemplateArgs = Partial<HTMLMarketTabsElement> & TMarketTabListTemplateArgs;\n\nexport const TabsTemplate = ({\n  defaultTab,\n  disabledTabIndices,\n  numberOfTabs,\n  selectedTab,\n  size,\n}: TMarketTabsTemplateArgs) => html`\n  <market-tabs default-tab=${ifDefined(defaultTab)} selected-tab=${ifDefined(selectedTab)}>\n    ${TabListTemplate({\n      disabledTabIndices,\n      numberOfTabs,\n      size,\n    })}\n    ${Array.from({ length: numberOfTabs })\n      .fill(undefined)\n      .map((_, index) =>\n        TabPanelTemplate({\n          ariaLabelledby: `tab-${index + 1}`,\n          content: html`\n            <p>Panel ${index + 1} content</p>\n            <market-button>Button ${index + 1}</market-button>\n            <p>End of panel ${index + 1} content</p>\n          `,\n          id: `panel-${index + 1}`,\n        }),\n      )}\n  </market-tabs>\n`;\n\nexport const ContainerlessTabsTemplate = () => html`\n  <nav class=\"market-tabs-containerless--nav\">\n    <market-tab-list default-tab=\"green-tab\">\n      <market-tab id=\"red-tab\" aria-controls=\"red-panel\">üî¥ Red</market-tab>\n      <market-tab id=\"green-tab\" aria-controls=\"green-panel\">üü¢ Green</market-tab>\n      <market-tab id=\"yellow-tab\" aria-controls=\"yellow-panel\">üü° Yellow</market-tab>\n    </market-tab-list>\n  </nav>\n  <main class=\"market-tabs-containerless--main\">\n    <market-tab-panel id=\"red-panel\" aria-labelledby=\"red-tab\" hidden>\n      <p>üçé Apple</p>\n      <p>üçí Cherry</p>\n      <p>üçì Strawberry</p>\n    </market-tab-panel>\n    <market-tab-panel id=\"green-panel\" aria-labelledby=\"green-tab\">\n      <p>ü•ë Avocado</p>\n      <p>ü•ù Kiwi</p>\n      <p>üçê Pear</p>\n    </market-tab-panel>\n    <market-tab-panel id=\"yellow-panel\" aria-labelledby=\"yellow-tab\" hidden>\n      <p>üçå Banana</p>\n      <p>üçã Lemon</p>\n      <p>üçç Pineapple</p>\n    </market-tab-panel>\n  </main>\n`;\n\nexport const ContainerlessTabsDecorator: StoryObj['decorators'] = (story, { canvasElement }) => {\n  waitForMarketHydration(canvasElement).then(() => {\n    const tabListEl = canvasElement.querySelector('market-tab-list');\n    tabListEl?.addEventListener('marketTabSelectedChanged', (event: CustomEvent) => {\n      const panelEl = canvasElement.querySelector(`#${event.detail.panelId}`) as HTMLMarketTabPanelElement;\n      panelEl.hidden = !event.detail.value;\n    });\n  });\n  return story();\n};\n"]}