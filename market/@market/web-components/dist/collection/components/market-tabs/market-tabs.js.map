{"version":3,"file":"market-tabs.js","sourceRoot":"","sources":["../../../../src/components/market-tabs/market-tabs.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAEjF,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAQ5D,MAAM,OAAO,UAAU;;;;;IAwBrB,oCAAoC,CAAC,CAAoD;QACvF,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;QAC3C,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,OAAO;QACT,CAAC;aAAM,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE,CAAC;YACtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC;QACD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAGD,UAAU,CAAC,QAAgB;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;QACrC,CAAC;IACH,CAAC;IAED,eAAe,CAAC,OAAe;;QAC7B,MAAA,IAAI,CAAC,QAAQ,0CAAE,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACjC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,EAAE,KAAK,OAAO,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd;;;;WAIG;QACH,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;YACrG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;YACtB,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,iBAAiB;;QACf,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,MAAA,IAAI,CAAC,WAAW,mCAAI,IAAI,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAC,aAAa;YACvB,6DAAM,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAS,CACrD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, h, Host, Prop, Listen, Watch } from '@stencil/core';\n\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { TMarketTabSelectedChangedEventDetail } from './events';\n\n@Component({\n  tag: 'market-tabs',\n  styleUrl: 'market-tabs.css',\n  shadow: true,\n})\nexport class MarketTabs {\n  @Element() el: HTMLMarketTabsElement;\n  tabListEl?: HTMLMarketTabListElement;\n  panelEls?: HTMLMarketTabPanelElement[];\n\n  /**\n   * String for the selected tab (i.e. `market-tab`'s `id` attribute)\n   *\n   * Omitting or setting to empty string will default to the first non-disabled tab\n   *\n   * @default undefined\n   */\n  @Prop({ mutable: true, reflect: true }) selectedTab?: string;\n\n  /**\n   * String for the default selected tab (i.e. `market-tab`'s `id` attribute)\n   *\n   * Only used when the component initially loads\n   *\n   * @default undefined\n   */\n  @Prop() readonly defaultTab?: string;\n\n  @Listen('marketTabSelectedChanged')\n  marketTabSelectedChangedEventHandler(e: CustomEvent<TMarketTabSelectedChangedEventDetail>) {\n    e.stopPropagation();\n    const { panelId, tabId, value } = e.detail;\n    if (!value) {\n      return;\n    } else if (this.selectedTab !== tabId) {\n      this.selectedTab = tabId;\n    }\n    this.showPanelWithId(panelId);\n  }\n\n  @Watch('selectedTab')\n  tabWatcher(newTabId: string) {\n    this.setTab(newTabId);\n  }\n\n  setTab(tabId: string) {\n    if (this.tabListEl) {\n      this.tabListEl.selectedTab = tabId;\n    }\n  }\n\n  showPanelWithId(panelId: string) {\n    this.panelEls?.forEach((panelEl) => {\n      panelEl.hidden = panelEl.id !== panelId;\n    });\n  }\n\n  handleSlotChange() {\n    /**\n     * `market-tab-panel`s aren't hidden by default,\n     * but once they become a descendant of `<market-tabs>`, they will be hidden by default.\n     * Later on, one will be shown depending on which tab gets selected by default.\n     */\n    this.panelEls = [...this.el.querySelectorAll(getNamespacedTagFor('market-tab-panel'))].map((panelEl) => {\n      panelEl.hidden = true;\n      return panelEl;\n    });\n    this.tabListEl = this.el.querySelector(getNamespacedTagFor('market-tab-list'));\n  }\n\n  componentWillLoad() {\n    this.handleSlotChange();\n    this.setTab(this.selectedTab ?? this.defaultTab);\n  }\n\n  render() {\n    return (\n      <Host class=\"market-tabs\">\n        <slot onSlotchange={() => this.handleSlotChange()}></slot>\n      </Host>\n    );\n  }\n}\n"]}