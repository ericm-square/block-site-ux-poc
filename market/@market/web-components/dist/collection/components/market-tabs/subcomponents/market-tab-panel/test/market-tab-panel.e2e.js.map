{"version":3,"file":"market-tab-panel.e2e.js","sourceRoot":"","sources":["../../../../../../../src/components/market-tabs/subcomponents/market-tab-panel/test/market-tab-panel.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAuB,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAExE,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,IAAI,IAAa,CAAC;IAClB,IAAI,EAAc,CAAC;IAEnB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAC1B,MAAM,IAAI,CAAC,UAAU,CAAC,mDAAmD,CAAC,CAAC;QAC3E,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAEzC,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;QAC3C,MAAM,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAChD,MAAM,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QAC7C,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QACzC,MAAM,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;QACpD,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACjD,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,EAAE,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC/B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { E2EElement, E2EPage, newE2EPage } from '@stencil/core/testing';\n\ndescribe('market-tab-panel', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent('<market-tab-panel>Text content</market-tab-panel>');\n    el = await page.find('market-tab-panel');\n\n    expect(el).toHaveAttribute('hydrated');\n    expect(el).toHaveClass('market-tab-panel');\n    expect(el).toEqualAttribute('role', 'tabpanel');\n    expect(el).toEqualAttribute('tabindex', '0');\n    expect(el).not.toHaveAttribute('hidden');\n    expect(el).toEqualAttribute('aria-hidden', 'false');\n    expect(await el.isVisible()).toStrictEqual(true);\n    expect(el.textContent).toStrictEqual('Text content');\n  });\n\n  it('is hidden when `hidden` property is set to `true`', async () => {\n    el.setProperty('hidden', true);\n    await page.waitForChanges();\n\n    expect(await el.isVisible()).toStrictEqual(false);\n  });\n});\n"]}