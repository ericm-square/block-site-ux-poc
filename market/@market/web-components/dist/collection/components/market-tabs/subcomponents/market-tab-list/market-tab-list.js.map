{"version":3,"file":"market-tab-list.js","sourceRoot":"","sources":["../../../../../../src/components/market-tabs/subcomponents/market-tab-list/market-tab-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, Host, Prop, h, Listen, Watch } from '@stencil/core';\n\nimport { getNamespacedTagFor } from '../../../../utils/namespace';\nimport { TMarketTabListSelectedTabChangedEventDetail, TMarketTabSelectedChangedEventDetail } from '../../events';\n\n/**\n * @slot - Default slot for `<market-tab>`s\n */\n@Component({\n  tag: 'market-tab-list',\n  styleUrl: 'market-tab-list.css',\n  shadow: true,\n})\nexport class MarketTabList {\n  @Element() el: HTMLMarketTabListElement;\n  tabEls?: HTMLMarketTabElement[];\n\n  /**\n   * Tabs' size\n   *\n   * @default undefined\n   */\n  @Prop() readonly size?: 'small' | 'medium' | 'large';\n\n  /**\n   * String for the selected tab (i.e. `market-tab`'s `id` attribute)\n   *\n   * Omitting or setting to empty string will default to the first non-disabled tab\n   *\n   * @default undefined\n   */\n  @Prop({ mutable: true, reflect: true }) selectedTab?: string;\n\n  /**\n   * String for the default selected tab (i.e. `market-tab`'s `id` attribute)\n   *\n   * Only used when the component initially loads\n   *\n   * @default undefined\n   */\n  @Prop() readonly defaultTab?: string;\n\n  /**\n   * Fired when a `market-tab` is selected\n   */\n  @Event({ bubbles: true, composed: true })\n  marketTabListSelectedTabChanged: EventEmitter<TMarketTabListSelectedTabChangedEventDetail>;\n\n  @Listen('marketTabSelectedChanged')\n  marketTabSelectedChangedEventHandler(e: CustomEvent<TMarketTabSelectedChangedEventDetail>) {\n    const { tabId, value } = e.detail;\n    if (!value) {\n      return;\n    }\n    if (this.selectedTab !== tabId) {\n      const { defaultPrevented } = this.marketTabListSelectedTabChanged.emit({\n        prevValue: this.selectedTab,\n        value: tabId,\n      });\n      if (!defaultPrevented) {\n        this.selectedTab = tabId;\n      }\n    }\n    this.tabEls?.forEach((tabEl) => {\n      if (tabEl.id !== tabId) {\n        tabEl.deselect();\n        tabEl.tabIndex = -1;\n      } else {\n        tabEl.tabIndex = 0;\n      }\n    });\n  }\n\n  @Watch('selectedTab')\n  tabWatcher(newTabId: string) {\n    this.selectTab(newTabId);\n  }\n\n  @Watch('size')\n  sizeWatcher(newSize: typeof this.size) {\n    this.propagateSizeProp(newSize);\n  }\n\n  selectTab(tabId?: string) {\n    const tabEl = this.tabEls?.find((el) => tabId === el.id && !el.disabled) || this.tabEls?.find((el) => !el.disabled);\n    tabEl?.select();\n  }\n\n  propagateSizeProp(size: typeof this.size) {\n    this.tabEls.forEach((el) => {\n      if (this.size && el.size !== this.size) {\n        el.size = size;\n      }\n    });\n  }\n\n  focusOnTab(el: HTMLMarketTabElement) {\n    el?.shadowRoot?.querySelector('button')?.focus();\n  }\n\n  handleKeyDown(e: KeyboardEvent) {\n    if (!this.tabEls || this.tabEls.every((el) => el.disabled)) {\n      return;\n    }\n\n    /**\n     * These keyboard shortcut behaviours are from:\n     * https://www.w3.org/WAI/ARIA/apg/patterns/tabs/examples/tabs-manual/#kbd_label\n     *\n     * Tab, Enter, and Space behaviours should already natively work.\n     */\n    if (e.key === 'ArrowLeft' || e.key === 'ArrowRight' || e.key === 'Home' || e.key === 'End') {\n      e.preventDefault(); // prevent key press from triggering scroll events\n\n      const currentTabIndex = this.tabEls.indexOf(e.target as HTMLMarketTabElement);\n      if (currentTabIndex < 0) {\n        return;\n      }\n      const left = this.tabEls.slice(0, currentTabIndex);\n      const right = this.tabEls.slice(currentTabIndex + 1);\n\n      switch (e.key) {\n        case 'ArrowRight': {\n          const focusableTabEls = [...right, ...left].find((el) => !el.disabled);\n          this.focusOnTab(focusableTabEls);\n          break;\n        }\n        case 'ArrowLeft': {\n          const focusableTabEls = [...right, ...left].reverse().find((el) => !el.disabled);\n          this.focusOnTab(focusableTabEls);\n          break;\n        }\n        case 'Home': {\n          const focusableTabEls = this.tabEls.find((el) => !el.disabled);\n          this.focusOnTab(focusableTabEls);\n          break;\n        }\n        case 'End': {\n          const focusableTabEls = this.tabEls.filter((el) => !el.disabled);\n          this.focusOnTab(focusableTabEls[focusableTabEls.length - 1]);\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n\n  handleSlotChange() {\n    this.tabEls = [...this.el.querySelectorAll(getNamespacedTagFor('market-tab'))];\n    this.propagateSizeProp(this.size);\n  }\n\n  componentWillLoad() {\n    this.handleSlotChange();\n    this.selectTab(this.selectedTab || this.defaultTab);\n  }\n\n  render() {\n    return (\n      <Host class=\"market-tab-list\" onKeyDown={this.handleKeyDown.bind(this)} role=\"tablist\">\n        <slot onSlotchange={() => this.handleSlotChange()}></slot>\n      </Host>\n    );\n  }\n}\n"]}