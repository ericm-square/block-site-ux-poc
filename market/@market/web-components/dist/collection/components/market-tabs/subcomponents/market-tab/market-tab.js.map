{"version":3,"file":"market-tab.js","sourceRoot":"","sources":["../../../../../../src/components/market-tabs/subcomponents/market-tab/market-tab.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n\nimport { TMarketTabSelectedChangedEventDetail } from '../../events';\n\n/**\n * @slot - (Default slot) The text used for the button label\n * @part button - The `<button>` in the shadow DOM\n */\n@Component({\n  tag: 'market-tab',\n  styleUrl: 'market-tab.css',\n  shadow: true,\n})\nexport class MarketTab {\n  @Element() el: HTMLMarketTabElement;\n  buttonEl: HTMLButtonElement;\n\n  /**\n   * Whether or not the tab is disabled\n   *\n   * @default false\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Tab's size\n   *\n   * @default 'medium'\n   */\n  @Prop({ reflect: true }) readonly size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Whether or not the tab is selected\n   *\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) selected: boolean = false;\n\n  /**\n   * Fired when the tab selection has changed\n   *\n   * `market-tab-list` listens to this event and stops further propagation\n   */\n  @Event({ bubbles: true, composed: true })\n  marketTabSelectedChanged: EventEmitter<TMarketTabSelectedChangedEventDetail>;\n\n  /**\n   * Select the tab and emits a `marketTabSelectedChanged` event\n   */\n  @Method()\n  select() {\n    if (this.selected || this.disabled) {\n      return Promise.resolve();\n    }\n    const { defaultPrevented } = this.marketTabSelectedChanged.emit({\n      panelId: this.el.getAttribute('aria-controls'),\n      prevValue: this.selected,\n      tabId: this.el.id,\n      value: true,\n    });\n    if (!defaultPrevented) {\n      this.selected = true;\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Deselects the tab and emits a `marketTabSelectedChanged` event\n   */\n  @Method()\n  deselect() {\n    if (!this.selected) {\n      return Promise.resolve();\n    }\n    const { defaultPrevented } = this.marketTabSelectedChanged.emit({\n      panelId: this.el.getAttribute('aria-controls'),\n      prevValue: this.selected,\n      tabId: this.el.id,\n      value: false,\n    });\n    if (!defaultPrevented) {\n      this.selected = false;\n    }\n    return Promise.resolve();\n  }\n\n  @Watch('disabled')\n  disabledWatcher() {\n    this.selected = false;\n  }\n\n  handleClick() {\n    this.select();\n  }\n\n  handleKeydown(e: KeyboardEvent) {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault(); // prevents scroll down when Space is pressed\n      this.select();\n    }\n  }\n\n  render() {\n    return (\n      <Host\n        aria-disabled={this.disabled.toString()}\n        aria-selected={this.selected.toString()}\n        class=\"market-tab\"\n        onClick={this.handleClick.bind(this)}\n        onKeydown={this.handleKeydown.bind(this)}\n        role=\"tab\"\n        tabindex=\"0\"\n      >\n        <button disabled={this.disabled} part=\"button\" ref={(el) => (this.buttonEl = el)} tabindex=\"-1\">\n          <slot></slot>\n        </button>\n      </Host>\n    );\n  }\n}\n"]}