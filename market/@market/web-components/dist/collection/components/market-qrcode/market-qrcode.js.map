{"version":3,"file":"market-qrcode.js","sourceRoot":"","sources":["../../../../src/components/market-qrcode/market-qrcode.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAC7D,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAOzD,MAAM,OAAO,YAAY;;uBAK6B,EAAE;;sBAanB,KAAK;0BAKgB,KAAK;;IAE7D,MAAM;QACJ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO;YAC1B,CAAC,CAAC,IAAI,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE;gBACpC,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE;gBACxD,eAAe,EAAE,oBAAoB;gBACrC,SAAS,EAAE,cAAc;aAC1B,CAAC;YACJ,CAAC,CAAC,IAAI,CAAC;QAET,MAAM,cAAc,GAClB,IAAI,CAAC,IAAI,KAAK,SAAS;YACrB,CAAC,CAAC;gBACE,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI;gBACxB,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI;aACxB;YACH,CAAC,CAAC,IAAI,CAAC;QAEX,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAC,eAAe,iBAAa,MAAM;YAC5C,4DAAK,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,cAAc,GAAQ,CACpE,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { MarketQRCodeEncoder } from '@square/qrcode-encoder';\nimport { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'market-qrcode',\n  styleUrl: 'market-qrcode.css',\n  shadow: true,\n})\nexport class MarketQrcode {\n  /**\n   * The URL or other content of the QR code. The QR code is generated using\n   * [@square/qrcode-encoder](https://github.com/squareup/qrcode/blob/master/packages/square-qrcode-encoder/README.md).\n   */\n  @Prop({ reflect: true }) readonly content: string = '';\n\n  /**\n   * By default, QR code size is dependent on the information being encoded.\n   * Use this property to set the QR code's height and width in pixels.\n   */\n  @Prop({ reflect: true }) readonly size: number;\n\n  /**\n   * Include a six data-pixel border around the QR code. When this attribute is\n   * present, the QR code will have a background color (default is transparent\n   * background).\n   */\n  @Prop() readonly border: boolean = false;\n\n  /**\n   * When true, QR code will render all elements in black & white.\n   */\n  @Prop({ reflect: true }) readonly monochrome: boolean = false;\n\n  render() {\n    const encoder = this.content\n      ? new MarketQRCodeEncoder(this.content, {\n          border: this.border,\n          styleBackground: this.border ? 'class=\"background\"' : '',\n          styleForeground: 'class=\"foreground\"',\n          styleLogo: 'class=\"logo\"',\n        })\n      : null;\n\n    const containerStyle =\n      this.size !== undefined\n        ? {\n            height: `${this.size}px`,\n            width: `${this.size}px`,\n          }\n        : null;\n\n    return (\n      <Host class=\"market-qrcode\" aria-hidden=\"true\">\n        <div innerHTML={encoder ? encoder.svg : ''} style={containerStyle}></div>\n      </Host>\n    );\n  }\n}\n"]}