{"version":3,"file":"market-sheet.js","sourceRoot":"","sources":["../../../../src/components/market-sheet/market-sheet.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  CORE_ANIMATION_ENTER_TRANSITION_MODERATE_SPEED_DURATION,\n  CORE_ANIMATION_EXIT_TRANSITION_MODERATE_SPEED_DURATION,\n  MODAL_SHEET_HANDLE_HEIGHT,\n  MODAL_SHEET_HANDLE_PADDING_BOTTOM_SIZE,\n  MODAL_SHEET_HANDLE_PADDING_TOP_SIZE,\n} from '@market/market-theme/js/cjs/index.js';\nimport { Component, Element, Event, EventEmitter, Host, Method, Prop, Watch, h } from '@stencil/core';\nimport { delay, throttle } from 'lodash-es';\n\nimport { TMarketDragCoords, TMouseOrTouchEvent } from '../../utils/gesture/types';\nimport { getCoordsFromEvent, isTouchEvent } from '../../utils/gesture/utils';\nimport { compress, getDelta, lerp, magnitude } from '../../utils/math/utils';\nimport { DialogDismissedEvent, DialogLoadedEvent, DialogType } from '../../utils/dialog';\nimport {\n  FocusTrap,\n  FocusTrapActivateOptions,\n  FocusTrapDeactivateOptions,\n  FocusTrapOptions,\n  createAndActivateFocusTrap,\n} from '../../utils/focus-trap';\n\nconst TOP_GAP =\n  MODAL_SHEET_HANDLE_HEIGHT + MODAL_SHEET_HANDLE_PADDING_BOTTOM_SIZE + MODAL_SHEET_HANDLE_PADDING_TOP_SIZE;\nconst SWIPE_DISTANCE = 0.12; // ratio of screen height before drag registers as a gesture\nconst SWIPE_WINDOW = 250; // time in milliseconds to consider for gesture recognition\nconst TAP_DISABLE_DISTANCE = 0.01; // ratio of screen height before drag disables tapping child elements\nconst MIN_DRAG_COMPRESSION_RATIO = 0.8; // (0-1) how much the sheet allows itself to be dragged past its natural boundaries\nconst MAX_DRAG_COMPRESSION_RATIO = 0.55; // (0-1) how much the sheet allows itself to be dragged past its natural boundaries\n\nconst RESIZE_DEBOUNCE_DURATION = 16; // 60fps\n\ntype SheetState = 'closed' | 'partial-open' | 'full-open';\n\n@Component({\n  tag: 'market-sheet',\n  styleUrl: 'market-sheet.css',\n  shadow: true,\n})\nexport class MarketSheet {\n  @Element() el: HTMLMarketSheetElement;\n  mainContent: HTMLElement;\n  type: DialogType = 'sheet';\n  focusTrap: FocusTrap;\n  focusTrapActivateOptions: FocusTrapActivateOptions; // remember options when we reactivate later\n  topBoundary: number;\n  compressionRatio: number;\n\n  dragEventStack: [number, number][];\n  touchStartCoords: TMarketDragCoords;\n  dragDelta: TMarketDragCoords;\n  dragStartTop: number;\n  scrollStart: number;\n  heightObserver: ResizeObserver;\n\n  // These bound func refs are so we can remove them later\n  boundOnDragMove = this.onDragMove.bind(this);\n  boundOnDragEnd = this.onDragEnd.bind(this);\n  boundOnScrollDrag = this.onScrollDrag.bind(this);\n\n  /**\n   * @internal\n   *\n   * Used in CSS to trigger start and stop animations\n   */\n  @Prop({ mutable: true, reflect: true }) hidden: boolean = false;\n\n  /**\n   * @internal\n   *\n   * Used by the context manager to identify a specific dialog/modal\n   */\n  @Prop({ reflect: true, attribute: 'data-dialog-id' }) readonly dialogID: string;\n\n  /**\n   * Default state sheet opens to when opened from close\n   */\n  @Prop({ mutable: true }) openMode: 'full' | 'dynamic' | 'partial' = 'partial';\n\n  /**\n   * The duration for the modal enter animation, set from design tokens\n   */\n  @Prop() readonly animationEnterDuration: number = CORE_ANIMATION_ENTER_TRANSITION_MODERATE_SPEED_DURATION;\n\n  /**\n   * The duration for the modal exit animation, set from design tokens\n   */\n  @Prop() readonly animationExitDuration: number = CORE_ANIMATION_EXIT_TRANSITION_MODERATE_SPEED_DURATION;\n\n  /**\n   * Disable focus trapping on the modal\n   */\n  @Prop({ mutable: true }) disableFocus: boolean = false;\n\n  /**\n   * Translated string to label Close handle\n   */\n  @Prop() readonly closeHandleAriaLabel: string = 'Close';\n\n  /**\n   * Triggered when the sheet finishes loading\n   */\n  @Event() marketDialogLoaded: EventEmitter<DialogLoadedEvent>;\n\n  /**\n   * Triggered when the sheet is dismissed, handled by context manager\n   */\n  @Event() marketDialogDismissed: EventEmitter<DialogDismissedEvent>;\n\n  /**\n   * Triggered when the dialog is fully dismissed\n   */\n  @Event() marketDialogDidDismiss: EventEmitter<DialogDismissedEvent>;\n\n  /* eslint-disable @typescript-eslint/require-await */\n\n  /**\n   * Activates the focus trap\n   * @param {Object} [options] [focus-trap `.createFocusTrap` options](https://github.com/focus-trap/focus-trap#createoptions)\n   * @param {Object} [activateOptions] [focus-trap `.activate` options](https://github.com/focus-trap/focus-trap#trapactivate)\n   */\n  @Method()\n  async activateFocusTrap(options?: FocusTrapOptions, activateOptions?: FocusTrapActivateOptions) {\n    if (this.focusTrap) {\n      this.focusTrap.activate(activateOptions);\n      if (this.disableFocus) {\n        this.disableFocus = false;\n      }\n    } else {\n      this.focusTrap = createAndActivateFocusTrap({\n        activateOptions,\n        el: this.el,\n        options: { ...options, initialFocus: false },\n      });\n    }\n    this.focusTrapActivateOptions = activateOptions;\n  }\n\n  /**\n   * Deactivates the focus trap\n   * @param {Object} [deactivateOptions] [focus-trap `.deactivate` options](https://github.com/focus-trap/focus-trap#trapdeactivate)\n   */\n  @Method()\n  async deactivateFocusTrap(deactivateOptions?: FocusTrapDeactivateOptions) {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate(deactivateOptions);\n      this.focusTrap = undefined;\n    }\n  }\n\n  /**\n   * Emits the dismiss event\n   * The parent context will handle actually removing elements from the DOM,\n   * All the sheet needs to do it emit an event so actually closing it can be\n   * some other elements problem\n   */\n  @Method()\n  async dismiss(options?) {\n    const { defaultPrevented } = this.marketDialogDismissed.emit({\n      dialog: this.el,\n      type: this.type,\n      origin: options?.origin || this.el,\n    });\n\n    if (!defaultPrevented) {\n      this.hidden = true;\n\n      await new Promise((resolve) => setTimeout(resolve, CORE_ANIMATION_EXIT_TRANSITION_MODERATE_SPEED_DURATION));\n      this.marketDialogDidDismiss.emit({\n        dialog: this.el,\n        type: this.type,\n        origin: this.el,\n      });\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/require-await */\n\n  // Given a desired state, we update our actual state according to the open mode.\n  // e.g. \"fully opening\" a sheet in partial open mode will result in a partial-open state.\n  setState(state: SheetState) {\n    let targetState = state;\n    if (targetState !== 'closed' && this.openMode !== 'dynamic') {\n      // override open state according to open mode\n      targetState = `${this.openMode}-open`;\n    }\n    this.el.setAttribute('state', targetState);\n    this.resetTopByState();\n  }\n\n  // Calculate the `top` value for the sheet according to the state.\n  resetTopByState() {\n    this.calculateTopBoundary();\n\n    const state = this.el.getAttribute('state');\n    // For some incredibly arcane reason, if you do not read the clientHeight property\n    // then the second time a context manager opens the sheet it will not animate open correctly.\n    // So we set this variable to ensure that the clientHeight gets read regardless of state.\n    const clientHeight = this.el.clientHeight;\n\n    if (state === 'closed') {\n      this.el.style.removeProperty('top');\n    } else if (clientHeight + TOP_GAP >= window.innerHeight || state === 'full-open') {\n      // Stick to the top of the screen even if the window resizes.\n      this.el.style.top = `${TOP_GAP + window.visualViewport.offsetTop}px`;\n    } else {\n      // partial-open\n      // We essentially recreate `top: auto` here. This is necessary\n      // because `top: auto` breaks css transitions.\n      // It's important to use % rather than vh here so that the\n      // address bar is accounted for.\n      this.el.style.top = `calc(100% - ${clientHeight}px)`;\n    }\n\n    // when virtual keyboard is open, add padding to bottom of sheet to allow space for content to scroll\n    this.el.style.paddingBottom = window.visualViewport.offsetTop ? `${window.visualViewport.offsetTop}px` : '0';\n  }\n\n  // Calculate the highest top value allowed by the open mode.\n  // Dragging past this boundary will experience resitance.\n  // The closer the top boundary is to the top of the screen, the more resistance.\n  calculateTopBoundary() {\n    this.topBoundary = this.openMode === 'partial' ? window.innerHeight - this.el.clientHeight : TOP_GAP;\n    this.compressionRatio = lerp(\n      MAX_DRAG_COMPRESSION_RATIO,\n      MIN_DRAG_COMPRESSION_RATIO,\n      this.topBoundary / window.innerHeight,\n    );\n  }\n\n  setTop(top: number) {\n    // Add some 'springiness' that resists sheet being dragged past its topBoundary\n    // by compressing movement past that threshhold.\n    const newTop = compress(top, { threshold: this.topBoundary, quadraticRatio: this.compressionRatio, invert: true });\n\n    this.el.style.top = `${newTop}px`;\n    return newTop;\n  }\n\n  onDragStart(e: TMouseOrTouchEvent) {\n    // only start drag on touch events or left mouse clicks\n    if (!isTouchEvent(e) && e.button !== 0) {\n      return;\n    }\n\n    // special cases if virtual keyboard is open\n    if (window.visualViewport.offsetTop) {\n      // if clicking an already-focused element, do nothing\n      if (e.target === document.activeElement) {\n        return;\n      }\n      // blur currently-focused element (dismisses virtual keyboard)\n      (document.activeElement as HTMLElement).blur();\n      // click event target (element will get focus if focusable)\n      (e.target as HTMLElement).click();\n      return;\n    }\n\n    const { top } = this.el.getBoundingClientRect();\n    this.dragStartTop = top;\n\n    this.el.setAttribute('dragging', '');\n    this.calculateTopBoundary();\n    const newTop = this.setTop(top);\n\n    const eventCoords = getCoordsFromEvent(e);\n    this.dragEventStack = [[e.timeStamp, newTop]];\n    this.touchStartCoords = eventCoords;\n    this.dragDelta = { x: 0, y: 0 };\n\n    const { boundOnDragMove, boundOnDragEnd } = this;\n\n    document.addEventListener('mousemove', boundOnDragMove);\n    document.addEventListener('mouseup', boundOnDragEnd);\n    document.addEventListener('touchmove', boundOnDragMove);\n    document.addEventListener('touchend', boundOnDragEnd);\n  }\n\n  onDragMove(e: TMouseOrTouchEvent) {\n    const eventCoords = getCoordsFromEvent(e);\n\n    this.dragDelta = getDelta(this.touchStartCoords, eventCoords);\n    if (!this.el.hasAttribute('tapdisabled') && magnitude(this.dragDelta) / window.innerHeight > TAP_DISABLE_DISTANCE) {\n      this.el.setAttribute('tapdisabled', '');\n    }\n\n    const newTop = this.setTop(this.dragStartTop + this.dragDelta.y);\n    this.dragEventStack.push([e.timeStamp, newTop]);\n    this.pruneStack(e.timeStamp);\n  }\n\n  // When we end drag we need to calculate what gesture was performed and update the state accordingly.\n  // There are two categories of gesture: 'swipe' and 'drop'. If the gesture ends with movement that exceeds\n  // the SWIPE_DISTANCE within the SWIPE_WINDOW, then the gesture is a 'swipe', otherwise it is a 'drop.'\n  // A 'swipe' up always sets the sheet to its maximally open mode, while a swipe down closes it.\n  // A 'drop' sets the state according to where on the page the sheet was released (e.g) releasing the sheet\n  // near the bottom of the screen will close it.\n  onDragEnd(e: TMouseOrTouchEvent) {\n    const eventCoords = getCoordsFromEvent(e);\n\n    this.dragDelta = getDelta(this.touchStartCoords, eventCoords);\n\n    const finalTop = this.dragStartTop + this.dragDelta.y;\n    const newTop = this.setTop(finalTop);\n\n    // this differs from the 'topBoundary' for sheets in dynamic mode\n    const naturalTop = this.openMode === 'full' ? TOP_GAP : window.innerHeight - this.el.clientHeight;\n    const halfwayBreakpoint = window.innerHeight / 2;\n    const bottomDropBreakpoint = lerp(window.innerHeight, naturalTop, 0.6);\n    const topDropBreakpoint = lerp(TOP_GAP, naturalTop, 0.6);\n\n    const minSwipeDistance = SWIPE_DISTANCE * window.innerHeight;\n    this.dragEventStack.push([e.timeStamp, newTop]);\n    const gestureDelta = this.getGestureDelta(e, minSwipeDistance);\n\n    if (gestureDelta > minSwipeDistance) {\n      // we have finished the drag by swiping downward,\n      // so dismiss regardless of final position\n      this.dismiss();\n    } else if (gestureDelta < -minSwipeDistance) {\n      // we have finished the drag by swiping upward,\n      // so open the sheet regardless of final position\n      this.setState('full-open');\n    } else if (finalTop > halfwayBreakpoint && finalTop > bottomDropBreakpoint) {\n      // we have dragged down to within the bottom drop distance\n      this.dismiss();\n    } else if (finalTop < topDropBreakpoint) {\n      // we have dragged up to within the top drop distance\n      this.setState('full-open');\n    } else {\n      // we have dragged to a middle position\n      this.setState('partial-open');\n    }\n\n    this.cleanupDragging();\n  }\n\n  // When we start a touch within the scrollable part of the sheet we set up a listener\n  // to track this move.\n  onScrollStart() {\n    this.scrollStart = this.mainContent.scrollTop;\n\n    document.addEventListener('touchmove', this.boundOnScrollDrag, { passive: true });\n  }\n\n  // When we get our first touch move event (after touching within the scrollable area)\n  // we calculate whether this move will result in scrolling within the sheet. If so we disable\n  // the drag event handling for the rest of the touch move and let the browser handle scrolling.\n  // If the move won't result in scrolling (i.e. we've alreadry reached the end of the scrollable area)\n  // then instead we disable scrolling until the touch move completes, allowing the drag event\n  // handlers to operate as normal.\n  onScrollDrag(e: TouchEvent) {\n    const maxScroll = this.mainContent.scrollHeight - this.mainContent.clientHeight;\n    const dragCoords = getCoordsFromEvent(e);\n    const scrollDelta = getDelta(this.touchStartCoords, dragCoords);\n    const scrollTarget = this.scrollStart - scrollDelta.y;\n\n    const { boundOnScrollDrag, mainContent } = this;\n\n    // If the calculated scroll is within the scrollable area, scroll instead of dragging the sheet.\n    if (scrollTarget >= 0 && scrollTarget <= maxScroll) {\n      // We are scrolling, so we stop all of our drag handling and let the browser handle things from here\n      e.stopImmediatePropagation();\n      this.cleanupDragging();\n    } else {\n      // this disables scrolling on the scrollable area while the drag is in progress.\n      mainContent.setAttribute('dragging', '');\n    }\n\n    document.removeEventListener('touchmove', boundOnScrollDrag);\n  }\n\n  // Remove expired events from the gesutre tracking stack.\n  pruneStack(timeStamp: number) {\n    while (this.dragEventStack.length > 0 && this.dragEventStack[0][0] < timeStamp - SWIPE_WINDOW) {\n      this.dragEventStack.shift();\n    }\n  }\n\n  // 'Replay' events from our gesture tracking stack until we reach total movement\n  // that exceeds the minSwipeDistance threshhold (indicating a 'swipe' rather than a 'drop').\n  // This means the most recent movement will be considered first, and so if the gesture ends in a\n  // swipe this will be detected regardless of the total delta of the gesture.\n  // (e.g. the sheet is dragged downward before ending with a swipe up will register as a swipe up\n  // even if the released position of the sheet is below its starting position.\n  getGestureDelta(e: TMouseOrTouchEvent, minSwipeDistance: number) {\n    let gestureDelta = 0;\n    let currentTop = this.dragEventStack.pop()[1];\n\n    this.pruneStack(e.timeStamp);\n\n    while (this.dragEventStack.length > 0) {\n      const previousTop = this.dragEventStack.pop()[1];\n      const updateDelta = currentTop - previousTop;\n      gestureDelta += updateDelta;\n      currentTop = previousTop;\n      if (Math.abs(gestureDelta) > minSwipeDistance) break;\n    }\n    return gestureDelta;\n  }\n\n  cleanupDragging() {\n    const { boundOnDragMove, boundOnDragEnd, el, mainContent } = this;\n\n    el.removeAttribute('dragging');\n    mainContent.removeAttribute('dragging');\n    el.removeAttribute('tapdisabled');\n\n    document.removeEventListener('mousemove', boundOnDragMove);\n    document.removeEventListener('mouseup', boundOnDragEnd);\n    document.removeEventListener('touchmove', boundOnDragMove);\n    document.removeEventListener('touchend', boundOnDragEnd);\n  }\n\n  onKeyDown(e: KeyboardEvent) {\n    switch (e.key) {\n      case 'Enter':\n        this.dismiss();\n        break;\n      case ' ':\n        this.dismiss(e);\n        e.preventDefault(); // spacebar should not scroll page\n        break;\n      default:\n        break;\n    }\n  }\n\n  connectedCallback() {\n    /**\n     * Emit a dialogLoaded event when the component connects. Need this so\n     * the context manager isn't rummaging around it's DOM to try and find the\n     * dialog that was just appended\n     */\n    setTimeout(\n      () => {\n        this.marketDialogLoaded.emit({\n          dialog: this.el,\n          type: this.type,\n        });\n\n        if (!this.disableFocus) {\n          this.activateFocusTrap();\n        }\n      },\n      this.hidden ? 0 : CORE_ANIMATION_ENTER_TRANSITION_MODERATE_SPEED_DURATION,\n    );\n  }\n\n  @Watch('hidden')\n  hiddenHandler() {\n    this.setState(this.hidden ? 'closed' : 'partial-open');\n  }\n\n  componentDidLoad() {\n    this.hiddenHandler();\n\n    // when element is resized\n    this.heightObserver = new ResizeObserver(\n      throttle(() => {\n        this.resetTopByState();\n      }, RESIZE_DEBOUNCE_DURATION),\n    );\n    this.heightObserver.observe(this.el);\n\n    // when visual viewport is resized (aka when virtual keyboard is opened or closed)\n    window.visualViewport.addEventListener(\n      'resize',\n      throttle(() => {\n        this.resetTopByState();\n      }, RESIZE_DEBOUNCE_DURATION),\n    );\n\n    // when child elements get focus (via click/touch event, keyboard, or browser form assistant)\n    this.mainContent.addEventListener('focusin', (e) => {\n      this.resetTopByState();\n\n      // wait for any related resetTopByState style changes to settle\n      delay(() => {\n        // if virtual keyboard is open (mobile only), programmatically scroll to focused input\n        if (window.visualViewport.offsetTop) {\n          const prevOffsetTop = (e.relatedTarget as HTMLElement)?.offsetTop;\n          const currOffsetTop = (document.activeElement as HTMLElement)?.offsetTop;\n\n          // scrollIntoView needs to use different block (vertical alignment) behavior depending on\n          // how the focus was set, otherwise mobile Safari Form Assistant can't reliably move\n          // between all inputs (clicking an input or moving to the previous input uses \"center\",\n          // moving to the next input uses \"start\")\n          document.activeElement.scrollIntoView({\n            behavior: 'smooth',\n            block: prevOffsetTop < currOffsetTop ? 'start' : 'center',\n            inline: 'start',\n          });\n        }\n      }, 250);\n    });\n  }\n\n  disconnectedCallback() {\n    this.heightObserver?.disconnect();\n  }\n\n  render() {\n    return (\n      <Host\n        role=\"dialog\"\n        onMouseDown={(e: MouseEvent) => this.onDragStart(e)}\n        onTouchStart={(e: TouchEvent) => this.onDragStart(e)}\n      >\n        <button\n          aria-label={this.closeHandleAriaLabel}\n          class=\"handle\"\n          onClick={this.dismiss.bind(this)}\n          onKeyDown={this.onKeyDown.bind(this)}\n        />\n        <slot name=\"header\" />\n        <div class=\"main\" ref={(el) => (this.mainContent = el)} onTouchStart={() => this.onScrollStart()}>\n          <slot />\n        </div>\n      </Host>\n    );\n  }\n}\n"]}