{"version":3,"file":"market-table-area.js","sourceRoot":"","sources":["../../../../src/components/market-table-area/market-table-area.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAEhF;;4BAE4B;AAE5B;;GAEG;AAMH,MAAM,OAAO,eAAe;;2BAMiD,YAAY;;;sBAe7B,KAAK;yBAMD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;;IAIrE;;uBAEmB;IAEnB,kBAAkB,CAAC,QAAuB,EAAE,QAAwB;QAClE,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,EAAE,CAAC;YACtC,IACE,QAAQ,CAAC,MAAM,GAAG,CAAC;gBACnB,QAAQ,KAAK,SAAS,CAAC,0CAA0C;cACjE,CAAC;gBACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,mBAAmB,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACzD,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,mBAAmB,GAAG,SAAS,CAAC;YAChD,CAAC;QACH,CAAC;IACH,CAAC;IAED;;mCAE+B;IAE/B,iBAAiB,CAAC,QAAuB,EAAE,QAAuB;QAChE,IAAI,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC1B,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QACpE,CAAC;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC7C,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAC,mBAAmB;YAC7B,8DAAa,CACR,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, Element, Watch, Prop, State, h } from '@stencil/core';\n\n/**\n * This is an implementation component only and does not relfect any component in the\n * design spec for Market */\n\n/**\n * @slot - Default slot\n */\n@Component({\n  tag: 'market-table-area',\n  styleUrl: 'market-table-area.css',\n  shadow: true,\n})\nexport class MarketTableArea {\n  @Element() el: HTMLMarketTableAreaElement;\n\n  /**\n   * Whether or not this area is grouping columns (vertical) or rows (horizontal)\n   */\n  @Prop({ reflect: true }) readonly orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  /**\n   * Sticks this area to an edge of the table\n   */\n  @Prop({ reflect: true }) readonly stickTo: 'top' | 'bottom' | 'left' | 'right';\n\n  /**\n   * Set by the parent market-table or market-row component to determine CSS grid template\n   */\n  @Prop({ reflect: false }) readonly gridTemplate: Array<string>;\n\n  /**\n   * Whether or not this table area is currently visible/has any rows or cells within\n   */\n  @Prop({ mutable: true, reflect: true }) active: boolean = false;\n\n  /**\n   * Sets the element's grid-column CSS property to determine where this particular element\n   * falls on the parent grid. Used in vertical orientation table areas\n   */\n  @Prop({ reflect: false }) readonly placement: Array<number> = [1, -1];\n\n  @State() elements: Array<HTMLMarketTableRowElement | HTMLMarketTableCellElement | HTMLMarketTableColumnElement>;\n\n  /* When the gridTemplate changes, we need to parse it and update this elements's\n  grid-template-columns property, which defines the number and widths of columns\n  within this area */\n  @Watch('gridTemplate')\n  assignGridTemplate(newValue: Array<string>, oldValue?: Array<string>) {\n    if (newValue && newValue !== oldValue) {\n      if (\n        newValue.length > 0 ||\n        oldValue === undefined // shows content for tables w/o header row\n      ) {\n        this.active = true;\n        this.el.style.gridTemplateColumns = newValue.join(' ');\n      } else {\n        this.active = false;\n        this.el.style.gridTemplateColumns = undefined;\n      }\n    }\n  }\n\n  /* When the placement changes, we need to parse it and update this element's\n  grid-column property in order to correctly place it within the parent grid.\n  Used to support sticky areas */\n  @Watch('placement')\n  placementObserver(newValue: Array<number>, oldValue: Array<number>) {\n    if (newValue !== oldValue) {\n      this.el.style.gridColumn = `${newValue[0]} / span ${newValue[1]}`;\n    }\n  }\n\n  componentWillLoad() {\n    this.assignGridTemplate(this.gridTemplate);\n  }\n\n  render() {\n    return (\n      <Host class=\"market-table-area\">\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n"]}