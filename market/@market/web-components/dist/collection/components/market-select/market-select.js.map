{"version":3,"file":"market-select.js","sourceRoot":"","sources":["../../../../src/components/market-select/market-select.tsx"],"names":[],"mappings":"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","sourcesContent":["import { computePosition, autoUpdate, offset, autoPlacement, size, shift } from '@floating-ui/dom';\nimport type { Strategy } from '@floating-ui/dom';\nimport { Component, Prop, Element, Event, EventEmitter, Host, Listen, State, Method, h, Watch } from '@stencil/core';\nimport { v4 as uuid } from 'uuid';\n\nimport { getTextInputAriaLabel } from '../../utils/aria';\nimport { debounce } from '../../utils/callbacks';\nimport { submitFormImplicitly } from '../../utils/forms';\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { classNames } from '../../utils/classnames';\nimport { getMaxZIndex } from '../../utils/max-z-index';\n\nconst UP_DIRECTION = -1;\nconst DOWN_DIRECTION = 1;\n\n/**\n * @slot - Intended for use as the input's text label.\n * @slot list - Intended for use with a slotted `<market-list>` containing `<market-row>`s.\n * @slot leading-accessory - An accessory set on the left side of the input.\n * @slot trailing-accessory - An accessory set on the right side of the input.\n * @slot displayed-selection - Used internally to display the selected `market-row` while retaining any custom styling. Not intended for use by Market consumers.\n */\n@Component({\n  tag: 'market-select',\n  shadow: true,\n  styleUrl: 'market-select.css',\n})\nexport class MarketSelect {\n  @Element() el: HTMLMarketSelectElement;\n\n  /**\n   * String for the \"name\" attribute. Used when slotted into `market-field`.\n   */\n  @Prop() readonly name: string;\n\n  /**\n   * A string specifying a value for the select\n   * Must correspond to a `value` attribute on a slotted `market-row`\n   * For multiselect, separate values with a comma (e.g. 'orange,pear').\n   */\n  @Prop({ mutable: true, reflect: true }) value: string | Array<any> = '';\n\n  /**\n   * String for setting select size.\n   * Sizes `small` and `medium` visually hide the label,\n   * but you should still provide one for accessibility purposes.\n   */\n  @Prop({ reflect: true }) readonly size: 'small' | 'medium' | 'large' = 'large';\n\n  /**\n   * A string specifying the placeholder for the select.\n   * This is shown when the select is open with no selection.\n   */\n  @Prop() readonly placeholder: string;\n\n  /**\n   * Whether or not the select is readonly.\n   */\n  @Prop({ reflect: true }) readonly readonly: boolean = false;\n\n  /**\n   * Functionally and visually disables the select.\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Whether or not the select is focused.\n   */\n  @Prop({ mutable: true, reflect: true }) focused: boolean = false;\n\n  /**\n   * Whether or not the select is invalid (w/ corresponding visual state)\n   */\n  @Prop({ reflect: true }) readonly invalid: boolean = false;\n\n  /**\n   * Whether or not the select is required. This property relays\n   * important contextual information when using a screen reader\n   */\n  @Prop({ reflect: true }) readonly required: boolean = false;\n\n  /**\n   * Whether or not multiselect is enabled\n   */\n  @Prop({ reflect: true }) readonly multiselect: boolean = false;\n\n  /**\n   * Ancestor selector to contain the popover menu.\n   * Use this if you need the popover to be appended to\n   * an ancestor element other than the `body` element.\n   */\n  @Prop() readonly popoverContainer: string;\n\n  /**\n   * Configuration option for Floating UI (used to position `<market-popover>`).\n   * Describes the positioning strategy to use. By default, it is absolute. If\n   * your reference element is in a fixed container, use the fixed strategy.\n   * https://floating-ui.com/docs/computePosition#strategy\n   */\n  @Prop() readonly popoverStrategy: Strategy = 'absolute';\n\n  @State() listIsActive: boolean = false;\n\n  /*\n    The index of which row item has focus when navigating market-select with keys.\n  */\n  @State() focusedRowIndex: number = -1;\n\n  @State() hasLeadingAccessory: boolean = false;\n\n  @State() hasTrailingAccessory: boolean = false;\n\n  /**\n   * Fired by the `marketListSelectionsDidChange` listener.\n   *\n   * @property {string} value - value attribute of the selected element\n   * @property {HTMLMarketRowElement} newSelectedOption - the row that has just been selected\n   * @property {HTMLMarketRowElement} newDeselectedOption - the row that has just been deselected\n   * @property {HTMLMarketRowElement} currentSelectedOptions - the rows that are currently selected\n   */\n  @Event() marketSelectValueDidChange: EventEmitter<{\n    value: string | Array<any>;\n    newSelectedOption: HTMLMarketRowElement;\n    newDeselectedOption: HTMLMarketRowElement;\n    currentSelectedOptions: Array<HTMLMarketRowElement>;\n  }>;\n\n  /**\n   * Fired whenever the select is opened.\n   */\n  @Event({ bubbles: true, composed: true }) marketSelectOpened: EventEmitter;\n\n  /**\n   * Fired whenever the select is closed.\n   */\n  @Event({ bubbles: true, composed: true }) marketSelectClosed: EventEmitter;\n\n  @Watch('value')\n  valueWatcher() {\n    this.propagateValue();\n  }\n\n  @Watch('multiselect')\n  multiselectWatcher() {\n    this.list.multiselect = this.multiselect;\n  }\n\n  @Watch('focusedRowIndex')\n  focusedRowIndexWatcher() {\n    if (this.rows) {\n      this.rows.forEach((r) => r.classList.remove('pseudo-focus'));\n      this.rows[this.focusedRowIndex]?.classList.add('pseudo-focus');\n    }\n  }\n\n  // Listener for the change event emitted by `market-list`\n  handleListSelection({ detail: { currentSelectionValues, currentSelections, newDeselection, newSelection } }) {\n    const value = currentSelectionValues.join(',');\n    this.value = value;\n\n    if (this.multiselect) {\n      this.setFocusedRow(newDeselection || newSelection);\n    } else {\n      this.setFocusedRow(newSelection);\n    }\n\n    this.marketSelectValueDidChange.emit({\n      value,\n      newSelectedOption: newSelection,\n      newDeselectedOption: newDeselection,\n      currentSelectedOptions: currentSelections,\n    });\n  }\n\n  handleListItemsFiltered() {\n    window.requestAnimationFrame(() => {\n      if (this.listIsActive) {\n        this.updatePopper();\n      }\n    });\n  }\n\n  @Listen('click', { target: 'window' })\n  windowClick(e) {\n    if (this.el.contains(e.target) || this.popoverElement?.contains(e.target)) {\n      return;\n    }\n\n    this.focused = false;\n    if (this.listIsActive) {\n      this.closeList();\n    }\n  }\n\n  getValues(): Set<string> {\n    if (Array.isArray(this.value)) {\n      return new Set(this.value);\n    }\n    return new Set(this.multiselect ? this.value.split(',') : [this.value]);\n  }\n\n  getValuesCount(): number {\n    return this.getValues().size;\n  }\n\n  /**\n   * We search based on the `value` property rather than using querySelector and the `value`\n   * attribute (i.e. `market-row[value=${this.value}]`) due to rendering issues we've seen\n   * with Ember/Handlebars, where the property may be set before attribute is present.\n   * See here for details: https://github.com/squareup/market/issues/2635\n   */\n  getMatchingRows(): Array<HTMLMarketRowElement> {\n    if (this.rows === null) {\n      return [];\n    } else {\n      const values = this.getValues();\n      return [...this.rows].filter((row) => values.has(row.value));\n    }\n  }\n\n  get hasMultipleSelections(): boolean {\n    return this.multiselect && this.getValues().size > 1;\n  }\n\n  getMultiselectDisplayValue(): string {\n    const values = this.getValues();\n    return values.size > 1 ? `${values.size} selected` : '';\n  }\n\n  getDisplayedSelectionRow() {\n    return this.el.querySelector(\n      `${getNamespacedTagFor('market-row')}[slot=\"displayed-selection\"]`,\n    ) as HTMLMarketRowElement;\n  }\n\n  /**\n   * Ensure the passed `value` is reflected in the selected list item and the displayed selection row.\n   */\n  propagateValue() {\n    if (!this.list || !this.rows) return;\n\n    const matchingRows = this.getMatchingRows();\n\n    if (matchingRows.length === 0) {\n      // there were no matching rows, so sanitize & reset the value\n      this.list.value = this.value = '';\n      this.focusedRowIndex = -1;\n    } else {\n      // set the list value so the correct list row will be selected\n      this.list.value = this.value;\n      this.setFocusedRow(matchingRows[0]);\n    }\n\n    this.displaySelection(matchingRows);\n  }\n\n  /**\n   * Renders the passed row into the displayed selection slot, so it's visible\n   * as the current selection in the main \"input\" area of the select.\n   */\n  displaySelection(selectedRows: Array<HTMLMarketRowElement> = []) {\n    // Remove existing selected row from the DOM\n    this.getDisplayedSelectionRow()?.remove?.();\n\n    if (selectedRows.length === 1) {\n      /**\n       * For single select, we need to clone the row from the list so we can place a\n       * duplicate into the field area. If we don't clone it, the row\n       * will be removed from the list when we append it to the selection area\n       */\n      const clonedRow: HTMLMarketRowElement = selectedRows[0].cloneNode(true) as HTMLMarketRowElement;\n\n      // Row was cloned from the list, so we need to remove its interactive attribute + reset its role\n      clonedRow.interactive = false;\n      clonedRow.removeAttribute('tabindex');\n      clonedRow.setAttribute('role', 'listitem'); // needed after Stencil 4 upgrade\n\n      // don't duplicate cloned element IDs!\n      clonedRow.removeAttribute('id');\n      clonedRow.querySelectorAll('[id]').forEach((el) => el.removeAttribute('id'));\n\n      // We don't want the row to show as \"focused\" inside the select box\n      clonedRow.classList.remove('pseudo-focus');\n\n      /**\n       * Set slot='displayed-selection' so this shows up within the slotted area.\n       * We use a slot instead of appending this directly into the shadowDOM\n       * because we want to keep whatever styling cascaded from the Light DOM\n       * on the row because market - row can accept any markup.\n       */\n      clonedRow.setAttribute('slot', 'displayed-selection');\n\n      // if the select size is small, the selected row needs to be small too\n      clonedRow.size = this.size === 'small' ? 'small' : 'medium';\n\n      // Append the cloned node after the first slot element (label).\n      this.el.append(clonedRow);\n    } else if (selectedRows.length > 1) {\n      /**\n       * For multiselect, we need to create a `market-row` element to display \"n selected\"\n       * and possibly clone the \"selected-translation\" slot, if provided\n       */\n      const multiselectDisplayRow = document.createElement(\n        `${getNamespacedTagFor('market-row')}`,\n      ) as HTMLMarketRowElement;\n      multiselectDisplayRow.setAttribute('slot', 'displayed-selection');\n      multiselectDisplayRow.innerText = `${this.getValuesCount().toLocaleString()} `;\n\n      // if the select size is small, the selected row needs to be small too\n      multiselectDisplayRow.size = this.size === 'small' ? 'small' : 'medium';\n\n      // Add slot for \"selected\"\n      const selectedTranslationSlot = document.createElement('slot');\n      selectedTranslationSlot.setAttribute('name', 'selected-translation');\n\n      // Clone the contents of the \"selected-translation\"\n      const selectedTranslation = this.el.querySelector('[slot=\"selected-translation\"]');\n      selectedTranslationSlot.innerHTML = selectedTranslation?.innerHTML ?? 'selected';\n      multiselectDisplayRow.appendChild(selectedTranslationSlot);\n\n      // Observe for changes on the \"selected-translation\" slot\n      if (selectedTranslation) {\n        const observer = new MutationObserver(() => {\n          selectedTranslationSlot.innerHTML = selectedTranslation?.innerHTML;\n        });\n        observer.observe(selectedTranslation, { characterData: true, subtree: true });\n      }\n\n      this.el.append(multiselectDisplayRow);\n    }\n  }\n\n  /**\n   * Listens to changes in list content to ensure that if the content is dynamically updated,\n   * those changes will be copied to the popover and the displayed-selection row.\n   */\n  initListObserver() {\n    const observer = new MutationObserver(this.onListChange.bind(this));\n    observer.observe(this.list, { childList: true, characterData: true, subtree: true });\n  }\n\n  onListChange() {\n    this.initRows();\n    this.propagateValue();\n    this.updatePopper();\n  }\n\n  /**\n   * Record the index of the new selected row for keyboard navigation\n   */\n  setFocusedRow(row: HTMLMarketRowElement) {\n    this.focusedRowIndex = Array.prototype.indexOf.call(this.rows, row);\n  }\n\n  /**\n   * Opens the select.\n   */\n  @Method()\n  async openList() {\n    if (this.listIsActive || !this.popoverElement) {\n      return Promise.resolve();\n    }\n\n    const container: HTMLElement = this.el.closest(this.popoverContainer) || document.body;\n\n    Object.assign(this.popoverElement.style, {\n      zIndex: `${getMaxZIndex(container) + 1}`,\n      visibility: 'hidden',\n    });\n\n    this.moveListToPopover();\n    container.append(this.popoverElement);\n    this.initPopperListeners();\n\n    return new Promise<void>((resolve) => {\n      // hack: ensure initial position is correctly set before visible\n      setTimeout(() => {\n        this.updatePopper();\n        this.popoverElement.style.visibility = 'visible';\n        this.listIsActive = true;\n        this.marketSelectOpened.emit();\n        resolve();\n      }, 50);\n    });\n  }\n\n  /**\n   * Closes the select.\n   */\n  @Method()\n  closeList() {\n    if (!this.listIsActive) {\n      return Promise.resolve();\n    }\n\n    this.popoverElement.remove();\n    this.cleanupPopperListeners();\n    this.moveListToSelect();\n    this.listIsActive = false;\n    this.marketSelectClosed.emit();\n    return Promise.resolve();\n  }\n\n  /**\n   * Toggles the select open and closed.\n   */\n  @Method()\n  async toggleList() {\n    this.listIsActive ? await this.closeList() : await this.openList();\n  }\n\n  /* KEYBOARD ACCESSIBILITY */\n\n  // keyboard handler on the trigger (separate from the list)\n  handleTriggerKeyDown(ev: KeyboardEvent) {\n    switch (ev.key) {\n      case 'ArrowDown':\n        this.handleArrowKey(ev, DOWN_DIRECTION);\n        break;\n      case 'ArrowUp':\n        this.handleArrowKey(ev, UP_DIRECTION);\n        break;\n      case ' ':\n        this.handleSpacebar(ev);\n        break;\n      case 'Enter':\n        this.handleEnterKey();\n        break;\n      case 'Escape':\n        this.handleEscape();\n        break;\n      case 'Tab':\n        this.handleTab(ev);\n        break;\n      case 'Home':\n        this.handleHomeKey(ev);\n        break;\n      case 'End':\n        this.handleEndKey(ev);\n        break;\n      default:\n        this.typeaheadHandler(ev);\n        break;\n    }\n    ev.stopPropagation();\n  }\n\n  /**\n   * NOTE: market-list has its own internal keyboard functionality,\n   * so we only handle the key presses while the parent select is focused.\n   *\n   * - if the list is open:\n   *   - update the selected row to the next or previous row depending on the arrow direction\n   * - if the list is closed:\n   *   - open the list\n   */\n  async handleArrowKey(ev: KeyboardEvent, direction: typeof UP_DIRECTION | typeof DOWN_DIRECTION) {\n    ev.preventDefault(); // do not scroll page while select has focus\n\n    if (this.listIsActive) {\n      for (let i = this.focusedRowIndex + direction; i >= 0 && i < this.rows.length; i += direction) {\n        if (!this.rows[i].disabled) {\n          this.focusedRowIndex = i;\n          break;\n        }\n      }\n    } else {\n      await this.openList();\n    }\n  }\n\n  /**\n   * - if the list is open:\n   *   - close it\n   * - if the list is closed:\n   *   - open the list\n   *   - if there is a current selection, focus it\n   */\n  async handleSpacebar(ev: KeyboardEvent) {\n    ev.preventDefault(); // do not scroll page while select has focus\n\n    if (this.listIsActive) {\n      this.rows[this.focusedRowIndex]?.toggle();\n    } else {\n      await this.openList();\n    }\n  }\n\n  /**\n   * when the list is closed, invoke implicit submission\n   */\n  handleEnterKey() {\n    if (this.listIsActive) {\n      this.rows[this.focusedRowIndex]?.select();\n      this.closeList();\n    } else {\n      submitFormImplicitly(this.el);\n    }\n  }\n\n  /*\n  - when the list is open, close it\n  */\n  handleEscape() {\n    if (this.listIsActive) {\n      this.closeList();\n    }\n  }\n\n  /*\n  - when the list is open, suppress tab navigation\n  - when the list is closed, allow tab navigation and remove focus\n  */\n  handleTab(ev: KeyboardEvent) {\n    if (this.listIsActive) {\n      ev.preventDefault();\n    } else {\n      this.focused = false;\n    }\n  }\n\n  // On Mac, use Fn-Left as \"Home\"\n  handleHomeKey(ev: KeyboardEvent) {\n    if (this.listIsActive) {\n      ev.preventDefault();\n      this.focusedRowIndex = 0;\n    }\n  }\n\n  // On Mac, use Fn-Right as \"End\"\n  handleEndKey(ev: KeyboardEvent) {\n    if (this.listIsActive) {\n      ev.preventDefault();\n      this.focusedRowIndex = this.rows.length - 1;\n    }\n  }\n\n  // keyboard handler on the list (separate from the trigger)\n  handleListKeyDown(ev: KeyboardEvent) {\n    switch (ev.key) {\n      case 'Enter':\n        this.handleListEnter();\n        break;\n      case 'Escape':\n        this.handleEscape();\n        break;\n      case 'Tab':\n        this.handleTab(ev);\n        break;\n      case ' ':\n        this.handleListSpacebar(ev);\n        break;\n      default:\n        this.typeaheadHandler(ev);\n        break;\n    }\n    ev.stopPropagation();\n  }\n\n  /**\n   * market-list handles selection functionality internally\n   * just need to close the list if single select\n   */\n  handleListSpacebar(ev) {\n    // do nothing if list is multiselect or keydown event is emitted by typing into a slotted search input\n    if (this.multiselect || ev.target.hasAttribute('slot', 'search')) {\n      return;\n    }\n\n    ev.preventDefault(); // do not scroll page while select has focus\n\n    this.closeList();\n    this.el.focus();\n  }\n\n  /**\n   * market-list handles selection functionality internally\n   * just need to close the list if single select\n   */\n  handleListEnter() {\n    if (!this.multiselect) {\n      this.closeList();\n      this.el.focus();\n    }\n  }\n\n  /* TYPEAHEAD FUNCTIONALITY\n  - https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n  - type a character: focus moves to the next item with a name that starts with\n    the typed character\n  - type multiple characters in rapid succession: focus moves to the next item\n    with a name that starts with the string of characters typed\n  - if no match is found, focus remains where it was\n  - search wraps around end of list\n  */\n\n  rowsInnerText: Array<string> = [];\n  keypresses: Array<string> = [];\n  debounceDelay: number = 250;\n\n  typeaheadHandler(ev: KeyboardEvent) {\n    // if list has a search, that will be used instead of a typeahead\n    if (this.list?.hasAttribute('has-search')) {\n      // TODO: Proxy key events to the search input\n      return;\n    }\n\n    // because this is the default keydown event handler, we're ignoring\n    // \"special\" keys, numbers, and punctuation for typeahead functionality\n    // note that this check will also ignore characters from languages that have\n    // no concept of upper/lowercase (ex. japanese)\n    // TODO: revisit if localization requires it\n    if (ev.key.length > 1 || ev.key.toUpperCase() === ev.key.toLowerCase()) {\n      return;\n    }\n\n    this.storeKeypresses(ev);\n    this.setFocusOnMatch();\n  }\n\n  storeKeypresses(ev) {\n    this.keypresses = [...this.keypresses, ev.key];\n  }\n\n  setFocusOnMatch = debounce(() => {\n    const searchString = this.keypresses.join('');\n\n    // array slicing is so we start the search from the currently focused row\n    const nextMatch = [\n      ...this.rowsInnerText.slice(this.focusedRowIndex + 1),\n      ...this.rowsInnerText.slice(0, this.focusedRowIndex + 1),\n    ].find((innerText: string) => innerText.startsWith(searchString));\n\n    const matchIndex = this.rowsInnerText.findIndex((innerText) => {\n      return innerText.startsWith(nextMatch);\n    });\n\n    const matchingRow: HTMLMarketRowElement = this.rows[matchIndex];\n\n    // if matching row exists and is not disabled, focus it\n    if (matchingRow && !matchingRow.disabled) {\n      this.focusedRowIndex = matchIndex;\n\n      // if list is closed and single select, set the value\n      if (!this.listIsActive && !this.multiselect) {\n        // row is not in the DOM, so matchingRow.click() doesn't bubble\n        // instead we manually set the value to the row's value\n        this.value = matchingRow.value;\n\n        // since we're bypassing marketListSelectionsDidChange event here,\n        // we also need to manually emit marketSelectValueDidChange event\n        this.marketSelectValueDidChange.emit({\n          value: this.value,\n          newSelectedOption: matchingRow,\n          newDeselectedOption: null,\n          currentSelectedOptions: [matchingRow],\n        });\n      }\n    }\n\n    this.keypresses = []; // reset keypress array\n  }, this.debounceDelay);\n\n  /* EVENT HANDLING */\n\n  handleFocus() {\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    this.focused = true;\n  }\n\n  handleTriggerClick(ev) {\n    if (ev.target.tagName.toLowerCase() === getNamespacedTagFor('market-tooltip')) {\n      return;\n    }\n\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    this.toggleList();\n  }\n\n  handleListClick() {\n    if (!this.multiselect) {\n      this.closeList();\n      this.el.focus();\n    }\n  }\n\n  /* POPPER FUNCTIONALITY */\n\n  cleanupPopperListeners: Function;\n  initPopperListeners() {\n    const { el, popoverElement, updatePopper } = this;\n    this.cleanupPopperListeners = autoUpdate(el, popoverElement, updatePopper.bind(this), {\n      elementResize: false,\n    });\n  }\n\n  updatePopper() {\n    const { el, popoverElement, popoverStrategy } = this;\n\n    // TODO: use design tokens\n    const MARGIN_OFFSET = 8;\n    const MAX_HEIGHT = 464;\n\n    computePosition(el, popoverElement, {\n      strategy: popoverStrategy,\n      middleware: [\n        offset(MARGIN_OFFSET),\n        autoPlacement({\n          allowedPlacements: ['top', 'bottom'],\n        }),\n        size({\n          apply({ rects, availableHeight }) {\n            Object.assign(popoverElement.style, {\n              width: `${rects.reference.width}px`,\n              maxHeight: `${Math.min(availableHeight - MARGIN_OFFSET, MAX_HEIGHT)}px`,\n            });\n          },\n        }),\n        shift({ padding: MARGIN_OFFSET }),\n      ],\n    }).then(({ x, y }) => {\n      Object.assign(popoverElement.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      });\n    });\n  }\n\n  list: HTMLMarketListElement = null;\n  rows: NodeListOf<HTMLMarketRowElement> = null;\n  popoverElement: HTMLMarketPopoverElement = null;\n  popoverId: string;\n\n  initPopover() {\n    this.popoverElement =\n      this.popoverElement ||\n      (document.createElement(getNamespacedTagFor('market-popover')) as HTMLMarketPopoverElement);\n    this.popoverElement.id = this.popoverId;\n    this.popoverElement.style.position = this.popoverStrategy;\n  }\n\n  initList() {\n    this.list = this.el.querySelector('[slot=\"list\"]');\n    this.list.interactive = true;\n    this.list.multiselect = this.multiselect;\n    this.list.addEventListener('marketListSelectionsDidChange', this.handleListSelection.bind(this));\n    this.list.addEventListener('marketListItemsFiltered', this.handleListItemsFiltered.bind(this));\n    this.list.addEventListener('keydown', this.handleListKeyDown.bind(this));\n    this.list.addEventListener('click', this.handleListClick.bind(this));\n  }\n\n  initRows() {\n    this.rows = this.list.querySelectorAll(`${getNamespacedTagFor('market-row')}`) as NodeListOf<HTMLMarketRowElement>;\n    this.rows.forEach((row) => {\n      // Set an ID for the row if it doesn't have one (we need this for aria-activedescendant)\n      if (!row.id) {\n        row.id = `market-row-${uuid()}`;\n      }\n    });\n    // used for typeahead functionality\n    this.rowsInnerText = [...this.rows]\n      .filter((row) => {\n        /**\n         * Addresses an issue in test environments where the innerText of\n         * market-rows isn't set before componentWillLoad of the parent market-select (this file)\n         * is executed.\n         */\n        return row && row.innerText;\n      })\n      .map((row) => row.innerText.trim().toLowerCase());\n  }\n\n  moveListToPopover() {\n    this.list.removeAttribute('slot');\n    this.popoverElement.append(this.list);\n  }\n\n  moveListToSelect() {\n    this.list.setAttribute('slot', 'list');\n    this.el.append(this.list);\n  }\n\n  /* COMPONENT LIFECYCLE EVENTS AND HELPERS */\n\n  registerSlottedAccessories() {\n    const leadingAccessory = [...this.el.children].filter(function (child) {\n      return child.matches('[slot=\"leading-accessory\"]');\n    });\n    const trailingAccessory = [...this.el.children].filter(function (child) {\n      return child.matches('[slot=\"trailing-accessory\"]');\n    });\n\n    this.hasLeadingAccessory = leadingAccessory.length > 0;\n    this.hasTrailingAccessory = trailingAccessory.length > 0;\n  }\n\n  componentWillLoad() {\n    this.registerSlottedAccessories();\n    this.popoverId = this.popoverId || `popover-${uuid()}`;\n  }\n\n  componentDidLoad() {\n    this.initList();\n    this.initRows();\n    this.initPopover();\n    this.initListObserver();\n    this.propagateValue();\n  }\n\n  componentWillRender() {\n    const { listIsActive, list } = this;\n    if (list && listIsActive) {\n      list.removeAttribute('slot');\n    }\n  }\n\n  disconnectedCallback() {\n    this.closeList();\n  }\n\n  render() {\n    const tabindex = this.disabled ? null : '0';\n\n    return (\n      <Host\n        class=\"market-select\"\n        role=\"combobox\"\n        aria-label={getTextInputAriaLabel(this.el)}\n        aria-expanded={this.listIsActive.toString()}\n        aria-controls={this.popoverId}\n        aria-activedescendant={this.focusedRowIndex > -1 ? this.rows[this.focusedRowIndex].id : null}\n        aria-required={this.required.toString()}\n        tabindex={tabindex}\n        onClick={(e) => {\n          this.handleTriggerClick(e);\n        }}\n        onFocus={() => {\n          this.handleFocus();\n        }}\n        onKeyDown={(e) => {\n          this.handleTriggerKeyDown(e);\n        }}\n      >\n        <slot name=\"leading-accessory\" onSlotchange={() => this.registerSlottedAccessories()}></slot>\n\n        <div\n          class={classNames('label-input-container', {\n            'has-leading-accessory': this.hasLeadingAccessory,\n            'has-trailing-accessory': this.hasTrailingAccessory,\n          })}\n        >\n          {/* Default slot for field label */}\n          <slot></slot>\n          <slot name=\"displayed-selection\">\n            <div class=\"placeholder\">{this.placeholder}</div>\n          </slot>\n        </div>\n\n        <slot name=\"list\"></slot>\n\n        <slot name=\"trailing-accessory\" onSlotchange={() => this.registerSlottedAccessories()}></slot>\n\n        <svg class=\"caret\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M7.70715 7.70711C7.31663 8.09763 6.68346 8.09763 6.29294 7.70711L0.29294 1.70711L1.70715 0.292892L7.00005 5.58579L12.2929 0.292893L13.7072 1.70711L7.70715 7.70711Z\"\n            fill=\"black\"\n          />\n        </svg>\n      </Host>\n    );\n  }\n}\n"]}