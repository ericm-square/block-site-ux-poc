{"version":3,"file":"market-select.mouse.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-select/test/market-select.mouse.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-select: mouse interactivity', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let popover: E2EElement;\n  let popoverSelector: string;\n  let marketSelectOpenedSpy: EventSpy;\n  let marketSelectClosedSpy: EventSpy;\n  let marketSelectValueDidChangeSpy: EventSpy;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <div class=\"some-other-element\">\n        matt wright rulz\n      </div>\n      <market-select name=\"my-select\">\n        <label>Label</label>\n        <market-list slot=\"list\" name=\"my-list\">\n          <market-row value=\"apple\">Apple</market-row>\n          <market-row value=\"banana\">Banana</market-row>\n          <market-row value=\"orange\">Orange</market-row>\n          <market-row value=\"pear\">Pear</market-row>\n        </market-list>\n      </market-select>\n    `);\n\n    el = await page.find('market-select');\n    popoverSelector = `#${el.getAttribute('aria-controls')}`;\n    marketSelectOpenedSpy = await el.spyOnEvent('marketSelectOpened');\n    marketSelectClosedSpy = await el.spyOnEvent('marketSelectClosed');\n    marketSelectValueDidChangeSpy = await el.spyOnEvent('marketSelectValueDidChange');\n  });\n\n  describe('when the trigger is clicked', () => {\n    beforeEach(async () => {\n      await el.click();\n      popover = await page.find(popoverSelector);\n    });\n\n    it('receives focus', () => {\n      expect(el).toHaveAttribute('focused');\n    });\n\n    it('sets aria-expanded to true', () => {\n      expect(el.getAttribute('aria-expanded')).toBe('true');\n    });\n\n    it('renders the popover with moved list and rows', async () => {\n      expect(popover).not.toBeNull();\n      expect(await popover.isVisible()).toBe(true);\n\n      const list = await popover.find('market-list');\n      expect(list).not.toBeNull();\n\n      const rows = await list.findAll('market-row');\n      expect(rows.length).toEqual(4);\n    });\n\n    it('emits the open event', () => {\n      expect(marketSelectOpenedSpy).toHaveReceivedEventTimes(1);\n    });\n\n    describe('when the trigger is clicked again', () => {\n      beforeEach(async () => {\n        await el.click();\n        popover = await page.find(popoverSelector);\n      });\n\n      it('receives focus', () => {\n        expect(el).toHaveAttribute('focused');\n      });\n\n      it('sets aria-expanded to false', () => {\n        expect(el.getAttribute('aria-expanded')).toBe('false');\n      });\n\n      it('removes the popover', () => {\n        expect(popover).toBeNull();\n      });\n\n      it('emits the close event', () => {\n        expect(marketSelectClosedSpy).toHaveReceivedEventTimes(1);\n      });\n    });\n\n    describe('when clicking outside the element', () => {\n      beforeEach(async () => {\n        const otherElement = await page.find('.some-other-element');\n        await otherElement.click();\n        popover = await page.find(popoverSelector);\n      });\n\n      it('removes focus', () => {\n        expect(el).not.toHaveAttribute('focused');\n      });\n\n      it('sets aria-expanded to false', () => {\n        expect(el.getAttribute('aria-expanded')).toBe('false');\n      });\n\n      it('removes the popover', () => {\n        expect(popover).toBeNull();\n      });\n\n      it('emits the close event', () => {\n        expect(marketSelectClosedSpy).toHaveReceivedEventTimes(1);\n      });\n    });\n\n    describe('when an option is clicked', () => {\n      let orangeRow: E2EElement;\n\n      beforeEach(async () => {\n        orangeRow = await popover.find('market-row[value=\"orange\"]');\n        await orangeRow.click();\n      });\n\n      it('updates the value property & attribute', async () => {\n        expect(el.getAttribute('value')).toEqual('orange');\n        expect(await el.getProperty('value')).toEqual('orange');\n      });\n\n      it('emits the change event', () => {\n        expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(1);\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('orange');\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.newSelectedOption).toBeTruthy();\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.newDeselectedOption).toBeFalsy();\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.currentSelectedOptions.length).toEqual(1);\n      });\n\n      it('updates the displayed selection', async () => {\n        const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n        expect(displayedSelection).not.toBeNull();\n        expect(displayedSelection).toEqualText('Orange');\n        expect(displayedSelection.getAttribute('value')).toEqual('orange');\n      });\n\n      it('receives focus', () => {\n        expect(el).toHaveAttribute('focused');\n      });\n\n      it('sets aria-expanded to false', () => {\n        expect(el.getAttribute('aria-expanded')).toBe('false');\n      });\n\n      it('removes the popover', async () => {\n        popover = await page.find(popoverSelector);\n        expect(popover).toBeNull();\n      });\n\n      it('emits the close event', () => {\n        expect(marketSelectClosedSpy).toHaveReceivedEventTimes(1);\n      });\n\n      describe('when the same option is clicked again', () => {\n        beforeEach(async () => {\n          await el.click();\n          orangeRow = await popover.find('market-row[value=\"orange\"]');\n          await orangeRow.click();\n        });\n\n        it('retains the same value', async () => {\n          expect(el.getAttribute('value')).toBe('orange');\n          expect(await el.getProperty('value')).toEqual('orange');\n        });\n\n        it('does not emit an additional change event', () => {\n          // first event was fired, but not a second event!\n          expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(1);\n        });\n\n        it('maintains the displayed selection', async () => {\n          const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n          expect(displayedSelection).not.toBeNull();\n          expect(displayedSelection).toEqualText('Orange');\n          expect(displayedSelection.getAttribute('value')).toEqual('orange');\n        });\n\n        it('receives focus', () => {\n          expect(el).toHaveAttribute('focused');\n        });\n\n        it('sets aria-expanded to false', () => {\n          expect(el.getAttribute('aria-expanded')).toBe('false');\n        });\n\n        it('removes the popover', async () => {\n          popover = await page.find(popoverSelector);\n          expect(popover).toBeNull();\n        });\n\n        it('emits an additional close event', () => {\n          // first event was already fired, this is the second event!\n          expect(marketSelectClosedSpy).toHaveReceivedEventTimes(2);\n        });\n      });\n\n      describe('when a different option is clicked', () => {\n        beforeEach(async () => {\n          await el.click();\n          const appleRow = await popover.find('market-row[value=\"apple\"]');\n          await appleRow.click();\n        });\n\n        it('updates the value property & attribute', async () => {\n          expect(el.getAttribute('value')).toBe('apple');\n          expect(await el.getProperty('value')).toEqual('apple');\n        });\n\n        it('emits an additional change event', () => {\n          // first event was already fired, this is the second event!\n          expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(2);\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('apple');\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.newSelectedOption).toBeTruthy();\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.newDeselectedOption).toBeFalsy();\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.currentSelectedOptions.length).toEqual(1);\n        });\n\n        it('updates the displayed selection', async () => {\n          const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n          expect(displayedSelection).not.toBeNull();\n          expect(displayedSelection).toEqualText('Apple');\n          expect(displayedSelection.getAttribute('value')).toEqual('apple');\n        });\n\n        it('receives focus', () => {\n          expect(el).toHaveAttribute('focused');\n        });\n\n        it('sets aria-expanded to false', () => {\n          expect(el.getAttribute('aria-expanded')).toBe('false');\n        });\n\n        it('removes the popover', async () => {\n          popover = await page.find(popoverSelector);\n          expect(popover).toBeNull();\n        });\n\n        it('emits an additional close event', () => {\n          // first event was already fired, this is the second event!\n          expect(marketSelectClosedSpy).toHaveReceivedEventTimes(2);\n        });\n      });\n    });\n  });\n\n  describe('when disabled and clicked', () => {\n    beforeEach(async () => {\n      el.setProperty('disabled', true);\n      await page.waitForChanges();\n      await el.click();\n      popover = await page.find(popoverSelector);\n    });\n\n    it('does not focus, open, or render the popover', () => {\n      expect(el).not.toHaveAttribute('focused');\n      expect(el.getAttribute('aria-expanded')).toBe('false');\n      expect(popover).toBeNull();\n      expect(marketSelectOpenedSpy).not.toHaveReceivedEvent();\n    });\n  });\n\n  describe('when a tooltip trailing accessory is clicked', () => {\n    let tooltip: E2EElement;\n\n    beforeEach(async () => {\n      const tooltipHTML = `\n        <market-tooltip slot=\"trailing-accessory\" interaction=\"click\">\n          <span slot=\"content\">Lorem ipsum</span>\n        </market-tooltip>\n      `;\n      el.innerHTML = `${el.innerHTML}${tooltipHTML}`;\n      await page.waitForChanges();\n      tooltip = await page.find('market-tooltip');\n      await tooltip.click();\n      await page.waitForChanges();\n      popover = await page.find(popoverSelector);\n    });\n\n    it('opens the tooltip', async () => {\n      const tooltipPopover = await tooltip.find('pierce/market-dropdown [slot=\"popover\"]');\n      expect(await tooltipPopover.isVisible()).toBe(true);\n    });\n\n    it('does not open the select', () => {\n      expect(el.getAttribute('aria-expanded')).toBe('false');\n      expect(popover).toBeNull();\n      expect(marketSelectOpenedSpy).not.toHaveReceivedEvent();\n    });\n  });\n});\n"]}