{"version":3,"file":"market-select.api.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-select/test/market-select.api.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-select: API', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let popover: E2EElement;\n  let popoverSelector: string;\n  let marketSelectOpenedSpy: EventSpy;\n  let marketSelectClosedSpy: EventSpy;\n  let marketSelectValueDidChangeSpy: EventSpy;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-select name=\"my-select\">\n        <label>Label</label>\n        <market-list slot=\"list\">\n          <market-row value=\"apple\">Apple</market-row>\n          <market-row value=\"banana\">Banana</market-row>\n          <market-row value=\"orange\">Orange</market-row>\n          <market-row value=\"pear\">Pear</market-row>\n        </market-list>\n      </market-select>\n    `);\n\n    el = await page.find('market-select');\n    popoverSelector = `#${el.getAttribute('aria-controls')}`;\n    marketSelectOpenedSpy = await el.spyOnEvent('marketSelectOpened');\n    marketSelectClosedSpy = await el.spyOnEvent('marketSelectClosed');\n    marketSelectValueDidChangeSpy = await el.spyOnEvent('marketSelectValueDidChange');\n  });\n\n  describe('public methods', () => {\n    describe('when openList() is called', () => {\n      beforeEach(async () => {\n        await el.callMethod('openList');\n        await page.waitForChanges();\n        popover = await page.find(popoverSelector);\n      });\n\n      it('sets aria-expanded to true', () => {\n        expect(el.getAttribute('aria-expanded')).toBe('true');\n      });\n\n      it('does not receive focus', () => {\n        expect(el).not.toHaveAttribute('focused');\n      });\n\n      it('renders the popover with moved list and rows', async () => {\n        expect(popover).not.toBeNull();\n        expect(await popover.isVisible()).toBe(true);\n\n        const list = await popover.find('market-list');\n        expect(list).not.toBeNull();\n\n        const rows = await list.findAll('market-row');\n        expect(rows.length).toEqual(4);\n      });\n\n      it('emits the open event', () => {\n        expect(marketSelectOpenedSpy).toHaveReceivedEventTimes(1);\n      });\n    });\n\n    describe('when toggleList() is called', () => {\n      beforeEach(async () => {\n        await el.callMethod('toggleList');\n        await page.waitForChanges();\n        popover = await page.find(popoverSelector);\n      });\n\n      it('sets aria-expanded to true', () => {\n        expect(el.getAttribute('aria-expanded')).toBe('true');\n      });\n\n      it('does not receive focus', () => {\n        expect(el).not.toHaveAttribute('focused');\n      });\n\n      it('renders the popover with moved list and rows', async () => {\n        expect(popover).not.toBeNull();\n        expect(await popover.isVisible()).toBe(true);\n\n        const list = await popover.find('market-list');\n        expect(list).not.toBeNull();\n\n        const rows = await list.findAll('market-row');\n        expect(rows.length).toEqual(4);\n      });\n\n      it('emits the open event', () => {\n        expect(marketSelectOpenedSpy).toHaveReceivedEventTimes(1);\n      });\n    });\n\n    describe('when the select is open', () => {\n      beforeEach(async () => {\n        await el.callMethod('openList');\n        await page.waitForChanges();\n        popover = await page.find(popoverSelector);\n      });\n\n      describe('and closeList() is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('closeList');\n          await page.waitForChanges();\n          popover = await page.find(popoverSelector);\n        });\n\n        it('sets aria-expanded to false', () => {\n          expect(el.getAttribute('aria-expanded')).toBe('false');\n        });\n\n        it('does not receive focus', () => {\n          expect(el).not.toHaveAttribute('focused');\n        });\n\n        it('removes the popover from the DOM', () => {\n          expect(popover).toBeNull();\n        });\n\n        it('emits the close event', () => {\n          expect(marketSelectClosedSpy).toHaveReceivedEventTimes(1);\n        });\n      });\n\n      describe('and toggleList() is called', () => {\n        beforeEach(async () => {\n          await el.callMethod('toggleList');\n          await page.waitForChanges();\n          popover = await page.find(popoverSelector);\n        });\n\n        it('sets aria-expanded to false', () => {\n          expect(el.getAttribute('aria-expanded')).toBe('false');\n        });\n\n        it('does not receive focus', () => {\n          expect(el).not.toHaveAttribute('focused');\n        });\n\n        it('removes the popover from the DOM', () => {\n          expect(popover).toBeNull();\n        });\n\n        it('emits the close event', () => {\n          expect(marketSelectClosedSpy).toHaveReceivedEventTimes(1);\n        });\n      });\n    });\n  });\n\n  describe('setting the value programmatically', () => {\n    describe('with a valid value', () => {\n      beforeEach(async () => {\n        el.setProperty('value', 'orange');\n        await page.waitForChanges();\n        popover = await page.find(popoverSelector);\n      });\n\n      it('updates the value attribute and property', async () => {\n        expect(el.getAttribute('value')).toBe('orange');\n        expect(await el.getProperty('value')).toEqual('orange');\n      });\n\n      it('does not emit a change event (like a native <select>)', () => {\n        expect(marketSelectValueDidChangeSpy).not.toHaveReceivedEvent();\n      });\n\n      it('updates the displayed selection', async () => {\n        const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n        expect(displayedSelection).not.toBeNull();\n        expect(displayedSelection).toEqualText('Orange');\n        expect(displayedSelection.getAttribute('value')).toBe('orange');\n      });\n\n      it('does not focus, open, or render the popover', () => {\n        expect(el).not.toHaveAttribute('focused');\n        expect(el.getAttribute('aria-expanded')).toBe('false');\n        expect(popover).toBeNull();\n        expect(marketSelectOpenedSpy).not.toHaveReceivedEvent();\n      });\n    });\n\n    describe('with an empty value', () => {\n      beforeEach(async () => {\n        el.setProperty('value', '');\n        await page.waitForChanges();\n        popover = await page.find(popoverSelector);\n      });\n\n      it('resets the value property and attribute to empty', async () => {\n        expect(el.getAttribute('value')).toBe('');\n        expect(await el.getProperty('value')).toEqual('');\n      });\n\n      it('does not emit a change event (like a native <select>)', () => {\n        expect(marketSelectValueDidChangeSpy).not.toHaveReceivedEvent();\n      });\n\n      it('does not display a selection', async () => {\n        const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n        expect(displayedSelection).toBeNull();\n      });\n\n      it('does not focus, open, or render the popover', () => {\n        expect(el).not.toHaveAttribute('focused');\n        expect(el.getAttribute('aria-expanded')).toBe('false');\n        expect(popover).toBeNull();\n        expect(marketSelectOpenedSpy).not.toHaveReceivedEvent();\n      });\n    });\n\n    describe('with an invalid value', () => {\n      beforeEach(async () => {\n        el.setProperty('value', 'broccoli');\n        await page.waitForChanges();\n        popover = await page.find(popoverSelector);\n      });\n\n      it('resets the value property and attribute to empty', async () => {\n        expect(el.getAttribute('value')).toBe('');\n        expect(await el.getProperty('value')).toEqual('');\n      });\n\n      it('does not emit a change event (like a native <select>)', () => {\n        expect(marketSelectValueDidChangeSpy).not.toHaveReceivedEvent();\n      });\n\n      it('does not display a selection', async () => {\n        const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n        expect(displayedSelection).toBeNull();\n      });\n\n      it('does not focus, open, or render the popover', () => {\n        expect(el).not.toHaveAttribute('focused');\n        expect(el.getAttribute('aria-expanded')).toBe('false');\n        expect(popover).toBeNull();\n        expect(marketSelectOpenedSpy).not.toHaveReceivedEvent();\n      });\n    });\n  });\n});\n"]}