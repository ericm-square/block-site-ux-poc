{"version":3,"file":"market-select.typeahead.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-select/test/market-select.typeahead.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-select: typeahead functionality', () => {\n  const typeaheadTimeout = 250;\n\n  let page: E2EPage;\n  let el: E2EElement;\n  let popover: E2EElement;\n  let popoverSelector: string;\n  let marketSelectValueDidChangeSpy: EventSpy;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-select name=\"my-select\">\n        <label>Label</label>\n        <market-list slot=\"list\" name=\"my-list\">\n          <market-row value=\"apple\">Apple</market-row>\n          <market-row value=\"banana\" disabled>Banana</market-row>\n          <market-row value=\"peach\">Peach</market-row>\n          <market-row value=\"pear\">Pear</market-row>\n        </market-list>\n      </market-select>\n    `);\n\n    el = await page.find('market-select');\n    popoverSelector = `#${el.getAttribute('aria-controls')}`;\n    marketSelectValueDidChangeSpy = await el.spyOnEvent('marketSelectValueDidChange');\n  });\n\n  describe('when the select has focus but is still closed', () => {\n    beforeEach(async () => {\n      await page.keyboard.press('Tab');\n      await page.waitForChanges();\n    });\n\n    describe(\"when the first letters of an option's value are typed (within the timeout)\", () => {\n      beforeEach(async () => {\n        await page.keyboard.type('pea');\n        await page.waitForTimeout(typeaheadTimeout);\n        await page.waitForChanges();\n      });\n\n      it('selects the first option that starts with those letters', async () => {\n        const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n        expect(displayedSelection).toEqualText('Peach');\n        expect(displayedSelection.getAttribute('value')).toEqual('peach');\n      });\n\n      it('updates the value property & attribute', async () => {\n        expect(el.getAttribute('value')).toEqual('peach');\n        expect(await el.getProperty('value')).toEqual('peach');\n      });\n\n      it('emits the change event', () => {\n        expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(1);\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('peach');\n      });\n\n      describe('when the letters are typed again (within the timeout)', () => {\n        beforeEach(async () => {\n          await page.keyboard.type('pea');\n          await page.waitForTimeout(typeaheadTimeout);\n          await page.waitForChanges();\n        });\n\n        it('selects the next option that starts with those letters', async () => {\n          const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n          expect(displayedSelection).toEqualText('Pear');\n          expect(displayedSelection.getAttribute('value')).toEqual('pear');\n        });\n\n        it('updates the value property & attribute', async () => {\n          expect(el.getAttribute('value')).toEqual('pear');\n          expect(await el.getProperty('value')).toEqual('pear');\n        });\n\n        it('emits another change event', () => {\n          expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(2);\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('pear');\n        });\n\n        describe('when the final match is selected and the letters are typed again', () => {\n          beforeEach(async () => {\n            await page.keyboard.type('pea');\n            await page.waitForTimeout(typeaheadTimeout);\n            await page.waitForChanges();\n          });\n\n          it('wraps around the end of the list and selects the first match again', async () => {\n            const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n            expect(displayedSelection).toEqualText('Peach');\n            expect(displayedSelection.getAttribute('value')).toEqual('peach');\n          });\n\n          it('updates the value property & attribute', async () => {\n            expect(el.getAttribute('value')).toEqual('peach');\n            expect(await el.getProperty('value')).toEqual('peach');\n          });\n\n          it('emits another change event', () => {\n            expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(3);\n            expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('peach');\n          });\n        });\n      });\n\n      describe('when letters are typed that do not match any values', () => {\n        beforeEach(async () => {\n          await page.keyboard.type('x');\n          await page.waitForTimeout(typeaheadTimeout);\n          await page.waitForChanges();\n        });\n\n        it('does not change the selection', async () => {\n          const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n          expect(displayedSelection).toEqualText('Peach');\n          expect(displayedSelection.getAttribute('value')).toEqual('peach');\n        });\n\n        it('does not change the value property & attribute', async () => {\n          expect(el.getAttribute('value')).toEqual('peach');\n          expect(await el.getProperty('value')).toEqual('peach');\n        });\n\n        it('does not emit another change event', () => {\n          expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(1);\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('peach');\n        });\n      });\n\n      describe('when letters are typed that match a disabled option', () => {\n        beforeEach(async () => {\n          await page.keyboard.type('ban');\n          await page.waitForTimeout(typeaheadTimeout);\n          await page.waitForChanges();\n        });\n\n        it('does not change the selection', async () => {\n          const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n          expect(displayedSelection).toEqualText('Peach');\n          expect(displayedSelection.getAttribute('value')).toEqual('peach');\n        });\n\n        it('does not change the value property & attribute', async () => {\n          expect(el.getAttribute('value')).toEqual('peach');\n          expect(await el.getProperty('value')).toEqual('peach');\n        });\n\n        it('does not emit another change event', () => {\n          expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(1);\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('peach');\n        });\n      });\n    });\n  });\n\n  describe('when the select has focus and is open', () => {\n    let rows;\n\n    beforeEach(async () => {\n      await page.keyboard.press('Tab');\n      await page.keyboard.press(' ');\n      await page.waitForChanges();\n      popover = await page.find(popoverSelector);\n      rows = await popover.findAll('market-row');\n    });\n\n    describe(\"when the first letters of an option's value are typed (within the timeout)\", () => {\n      beforeEach(async () => {\n        await page.keyboard.type('pea');\n        await page.waitForTimeout(typeaheadTimeout);\n        await page.waitForChanges();\n      });\n\n      it('focuses the first option that starts with those letters', async () => {\n        expect(await page.find('.pseudo-focus')).toEqual(rows[2]);\n        expect(rows[2].getAttribute('value')).toBe('peach');\n      });\n\n      it('does not update the displayed selection', async () => {\n        const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n        expect(displayedSelection).toBeNull();\n      });\n\n      it('does not update the value property & attribute', async () => {\n        expect(el.getAttribute('value')).toEqual('');\n        expect(await el.getProperty('value')).toEqual('');\n      });\n\n      it('does not emit the change event', () => {\n        expect(marketSelectValueDidChangeSpy).not.toHaveReceivedEvent();\n      });\n\n      describe('when the letters are typed again (within the timeout)', () => {\n        beforeEach(async () => {\n          await page.keyboard.type('pea');\n          await page.waitForTimeout(typeaheadTimeout);\n          await page.waitForChanges();\n        });\n\n        it('focuses the next option that starts with those letters', async () => {\n          expect(await page.find('.pseudo-focus')).toEqual(rows[3]);\n          expect(rows[3].getAttribute('value')).toBe('pear');\n        });\n\n        it('does not update the displayed selection', async () => {\n          const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n          expect(displayedSelection).toBeNull();\n        });\n\n        it('does not update the value property & attribute', async () => {\n          expect(el.getAttribute('value')).toEqual('');\n          expect(await el.getProperty('value')).toEqual('');\n        });\n\n        it('does not emit the change event', () => {\n          expect(marketSelectValueDidChangeSpy).not.toHaveReceivedEvent();\n        });\n\n        describe('when the final match is focused and the letters are typed again', () => {\n          beforeEach(async () => {\n            await page.keyboard.type('pea');\n            await page.waitForTimeout(typeaheadTimeout);\n            await page.waitForChanges();\n          });\n\n          it('wraps around the end of the list and focuses the first match again', async () => {\n            expect(await page.find('.pseudo-focus')).toEqual(rows[2]);\n            expect(rows[2].getAttribute('value')).toBe('peach');\n          });\n\n          it('does not update the displayed selection', async () => {\n            const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n            expect(displayedSelection).toBeNull();\n          });\n\n          it('does not update the value property & attribute', async () => {\n            expect(el.getAttribute('value')).toEqual('');\n            expect(await el.getProperty('value')).toEqual('');\n          });\n\n          it('does not emit the change event', () => {\n            expect(marketSelectValueDidChangeSpy).not.toHaveReceivedEvent();\n          });\n        });\n      });\n\n      describe('when letters are typed that do not match any values', () => {\n        beforeEach(async () => {\n          await page.keyboard.type('x');\n          await page.waitForTimeout(typeaheadTimeout);\n          await page.waitForChanges();\n        });\n\n        it('keeps focus on the same row', async () => {\n          expect(await page.find('.pseudo-focus')).toEqual(rows[2]);\n          expect(rows[2].getAttribute('value')).toBe('peach');\n        });\n      });\n\n      describe('when letters are typed that match a disabled option', () => {\n        beforeEach(async () => {\n          await page.keyboard.type('ban');\n          await page.waitForTimeout(typeaheadTimeout);\n          await page.waitForChanges();\n        });\n\n        it('keeps focus on the same row', async () => {\n          expect(await page.find('.pseudo-focus')).toEqual(rows[2]);\n          expect(rows[2].getAttribute('value')).toBe('peach');\n        });\n      });\n    });\n  });\n});\n"]}