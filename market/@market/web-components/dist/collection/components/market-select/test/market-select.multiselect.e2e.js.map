{"version":3,"file":"market-select.multiselect.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-select/test/market-select.multiselect.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage, E2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-select: multiselect mode', () => {\n  let page: E2EPage;\n  let el: E2EElement;\n  let popover: E2EElement;\n  let popoverSelector: string;\n  let marketSelectClosedSpy: EventSpy;\n  let marketSelectValueDidChangeSpy: EventSpy;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`\n      <market-select name=\"my-select\" multiselect>\n        <label>Label</label>\n        <market-list slot=\"list\" name=\"my-list\">\n          <market-row value=\"apple\">Apple</market-row>\n          <market-row disabled value=\"banana\">Banana</market-row>\n          <market-row value=\"orange\">Orange</market-row>\n          <market-row value=\"pear\">Pear</market-row>\n        </market-list>\n      </market-select>\n    `);\n\n    el = await page.find('market-select');\n    popoverSelector = `#${el.getAttribute('aria-controls')}`;\n    marketSelectClosedSpy = await el.spyOnEvent('marketSelectClosed');\n    marketSelectValueDidChangeSpy = await el.spyOnEvent('marketSelectValueDidChange');\n  });\n\n  it('renders with defaults', async () => {\n    expect(el).not.toBeNull();\n    expect(el).toHaveAttribute('multiselect');\n    expect(el).not.toHaveAttribute('readonly');\n    expect(el).not.toHaveAttribute('disabled');\n    expect(el).not.toHaveAttribute('focused');\n    expect(el).not.toHaveAttribute('invalid');\n    expect(el).not.toHaveAttribute('required');\n    expect(await el.getProperty('value')).toBe('');\n    expect(el.getAttribute('value')).toBe('');\n    expect(el.getAttribute('name')).toBe('my-select');\n    expect(el.getAttribute('aria-expanded')).toBe('false');\n\n    const caret = await el.find('pierce/svg.caret');\n    expect(caret).not.toBeNull();\n  });\n\n  it('does not display a selection', async () => {\n    const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n    expect(displayedSelection).toBeNull();\n  });\n\n  describe('when opened', () => {\n    beforeEach(async () => {\n      await el.callMethod('openList');\n      await page.waitForChanges();\n      popover = await page.find(popoverSelector);\n    });\n\n    it('renders the popover with a multiselect list', async () => {\n      expect(popover).not.toBeNull();\n      expect(await popover.isVisible()).toBe(true);\n\n      const list = await popover.find('market-list');\n      expect(list).not.toBeNull();\n      expect(list.getAttribute('role')).toBe('listbox');\n      expect(await list.getProperty('interactive')).toEqual(true);\n      expect(await list.getProperty('multiselect')).toEqual(true);\n\n      const rows = await list.findAll('market-row');\n      expect(rows.length).toEqual(4);\n    });\n  });\n\n  describe('API', () => {\n    describe('setting multiple values programmatically', () => {\n      beforeEach(async () => {\n        el.setProperty('value', 'orange,pear');\n        await page.waitForChanges();\n      });\n\n      it('updates the value attribute and property', async () => {\n        expect(el.getAttribute('value')).toBe('orange,pear');\n        expect(await el.getProperty('value')).toEqual('orange,pear');\n      });\n\n      it('does not emit a change event (like a native <select>)', () => {\n        expect(marketSelectValueDidChangeSpy).not.toHaveReceivedEvent();\n      });\n\n      it('updates the displayed selection', async () => {\n        const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n        expect(displayedSelection).not.toBeNull();\n        expect(displayedSelection).toEqualText('2 selected');\n      });\n    });\n  });\n\n  describe('mouse interaction', () => {\n    describe('when an option is clicked', () => {\n      let orangeRow: E2EElement;\n\n      beforeEach(async () => {\n        await el.click();\n        popover = await page.find(popoverSelector);\n        orangeRow = await popover.find('market-row[value=\"orange\"]');\n        await orangeRow.click();\n      });\n\n      it('updates the value property & attribute', async () => {\n        expect(el.getAttribute('value')).toBe('orange');\n        expect(await el.getProperty('value')).toEqual('orange');\n      });\n\n      it('emits the change event', () => {\n        expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(1);\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('orange');\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.newSelectedOption).toBeTruthy();\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.newDeselectedOption).toBeFalsy();\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.currentSelectedOptions.length).toEqual(1);\n      });\n\n      it('updates the displayed selection', async () => {\n        const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n        expect(displayedSelection).not.toBeNull();\n        expect(displayedSelection).toEqualText('Orange');\n        expect(displayedSelection.getAttribute('value')).toBe('orange');\n      });\n\n      it('does not close or remove the popover', async () => {\n        expect(el.getAttribute('aria-expanded')).toBe('true');\n        popover = await page.find(popoverSelector);\n        expect(popover).not.toBeNull();\n        expect(await popover.isVisible()).toBe(true);\n        expect(marketSelectClosedSpy).not.toHaveReceivedEvent();\n      });\n\n      describe('when a second option is clicked', () => {\n        beforeEach(async () => {\n          const appleRow = await popover.find('market-row[value=\"apple\"]');\n          await appleRow.click();\n        });\n\n        it('updates the value property & attribute', async () => {\n          expect(el.getAttribute('value')).toBe('orange,apple');\n          expect(await el.getProperty('value')).toEqual('orange,apple');\n        });\n\n        it('emits an additional change event', () => {\n          // first event was already fired, this is the second event!\n          expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(2);\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('orange,apple');\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.newSelectedOption).toBeTruthy();\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.newDeselectedOption).toBeFalsy();\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.currentSelectedOptions.length).toEqual(2);\n        });\n\n        it('updates the displayed selection', async () => {\n          const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n          expect(displayedSelection).not.toBeNull();\n          expect(displayedSelection.innerText).toStrictEqual('2 selected');\n        });\n\n        it('does not close or remove the popover', async () => {\n          expect(el.getAttribute('aria-expanded')).toBe('true');\n          popover = await page.find(popoverSelector);\n          expect(popover).not.toBeNull();\n          expect(await popover.isVisible()).toBe(true);\n          expect(marketSelectClosedSpy).not.toHaveReceivedEvent();\n        });\n\n        describe('when the first option is clicked again (deselected)', () => {\n          beforeEach(async () => {\n            await orangeRow.click();\n          });\n\n          it('updates the value property & attribute', async () => {\n            expect(el.getAttribute('value')).toBe('apple');\n            expect(await el.getProperty('value')).toEqual('apple');\n          });\n\n          it('emits an additional change event', () => {\n            // first two events already fired, this is the third event!\n            expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(3);\n            expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('apple');\n            expect(marketSelectValueDidChangeSpy.lastEvent.detail.newSelectedOption).toBeFalsy();\n            expect(marketSelectValueDidChangeSpy.lastEvent.detail.newDeselectedOption).toBeTruthy();\n            expect(marketSelectValueDidChangeSpy.lastEvent.detail.currentSelectedOptions.length).toEqual(1);\n          });\n\n          it('updates the displayed selection', async () => {\n            const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n            expect(displayedSelection).not.toBeNull();\n            expect(displayedSelection).toEqualText('Apple');\n            expect(displayedSelection.getAttribute('value')).toBe('apple');\n          });\n\n          it('does not close or remove the popover', async () => {\n            expect(el.getAttribute('aria-expanded')).toBe('true');\n            popover = await page.find(popoverSelector);\n            expect(popover).not.toBeNull();\n            expect(marketSelectClosedSpy).not.toHaveReceivedEvent();\n          });\n        });\n      });\n    });\n  });\n\n  describe('keyboard interaction', () => {\n    describe('when an option is selected', () => {\n      beforeEach(async () => {\n        // focus select\n        await page.keyboard.press('Tab');\n        await page.waitForChanges();\n        // open it\n        await page.keyboard.press(' ');\n        await page.waitForChanges();\n        // focus first option\n        await page.keyboard.press('ArrowDown');\n        await page.waitForChanges();\n        // select it\n        await page.keyboard.press(' ');\n        await page.waitForChanges();\n      });\n\n      it('updates the value property & attribute', async () => {\n        expect(el.getAttribute('value')).toEqual('apple');\n        expect(await el.getProperty('value')).toEqual('apple');\n      });\n\n      it('emits the change event', () => {\n        expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(1);\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('apple');\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.newSelectedOption).toBeTruthy();\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.newDeselectedOption).toBeFalsy();\n        expect(marketSelectValueDidChangeSpy.lastEvent.detail.currentSelectedOptions.length).toEqual(1);\n      });\n\n      it('updates the displayed selection', async () => {\n        const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n        expect(displayedSelection).toEqualText('Apple');\n        expect(displayedSelection.getAttribute('value')).toEqual('apple');\n      });\n\n      it('does not close or remove the popover', async () => {\n        expect(el.getAttribute('aria-expanded')).toBe('true');\n        popover = await page.find(popoverSelector);\n        expect(popover).not.toBeNull();\n        expect(await popover.isVisible()).toBe(true);\n        expect(marketSelectClosedSpy).not.toHaveReceivedEvent();\n      });\n\n      describe('when a second option is selected', () => {\n        beforeEach(async () => {\n          // focus next option\n          await page.keyboard.press('ArrowDown');\n          await page.waitForChanges();\n          // select it\n          await page.keyboard.press(' ');\n          await page.waitForChanges();\n        });\n\n        it('updates the value property & attribute', async () => {\n          expect(el.getAttribute('value')).toBe('apple,orange');\n          expect(await el.getProperty('value')).toEqual('apple,orange');\n        });\n\n        it('emits an additional change event', () => {\n          // first event was already fired, this is the second event!\n          expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(2);\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('apple,orange');\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.newSelectedOption).toBeTruthy();\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.newDeselectedOption).toBeFalsy();\n          expect(marketSelectValueDidChangeSpy.lastEvent.detail.currentSelectedOptions.length).toEqual(2);\n        });\n\n        it('updates the displayed selection', async () => {\n          const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n          expect(displayedSelection).not.toBeNull();\n          expect(displayedSelection.innerText).toStrictEqual('2 selected');\n        });\n\n        it('does not close or remove the popover', async () => {\n          expect(el.getAttribute('aria-expanded')).toBe('true');\n          popover = await page.find(popoverSelector);\n          expect(popover).not.toBeNull();\n          expect(await popover.isVisible()).toBe(true);\n          expect(marketSelectClosedSpy).not.toHaveReceivedEvent();\n        });\n\n        describe('when the second option is deselected', () => {\n          beforeEach(async () => {\n            // already focused, deselect it\n            await page.keyboard.press(' ');\n            await page.waitForChanges();\n          });\n\n          it('updates the value property & attribute', async () => {\n            expect(el.getAttribute('value')).toBe('apple');\n            expect(await el.getProperty('value')).toEqual('apple');\n          });\n\n          it('emits an additional change event', () => {\n            // first two events already fired, this is the third event!\n            expect(marketSelectValueDidChangeSpy).toHaveReceivedEventTimes(3);\n            expect(marketSelectValueDidChangeSpy.lastEvent.detail.value).toEqual('apple');\n            expect(marketSelectValueDidChangeSpy.lastEvent.detail.newSelectedOption).toBeFalsy();\n            expect(marketSelectValueDidChangeSpy.lastEvent.detail.newDeselectedOption).toBeTruthy();\n            expect(marketSelectValueDidChangeSpy.lastEvent.detail.currentSelectedOptions.length).toEqual(1);\n          });\n\n          it('updates the displayed selection', async () => {\n            const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n            expect(displayedSelection).not.toBeNull();\n            expect(displayedSelection).toEqualText('Apple');\n            expect(displayedSelection.getAttribute('value')).toBe('apple');\n          });\n\n          it('does not close or remove the popover', async () => {\n            expect(el.getAttribute('aria-expanded')).toBe('true');\n            popover = await page.find(popoverSelector);\n            expect(popover).not.toBeNull();\n            expect(marketSelectClosedSpy).not.toHaveReceivedEvent();\n          });\n        });\n      });\n    });\n  });\n\n  describe('localization', () => {\n    describe('with a selected translation provided', () => {\n      beforeEach(async () => {\n        el.innerHTML = `${el.innerHTML}<span slot=\"selected-translation\">fruits selected</span>`;\n        await page.waitForChanges();\n      });\n\n      describe('when multiple items are selected', () => {\n        beforeEach(async () => {\n          await el.click();\n          popover = await page.find(popoverSelector);\n          const appleRow = await popover.find('market-row[value=\"apple\"]');\n          const orangeRow = await popover.find('market-row[value=\"orange\"]');\n          await appleRow.click();\n          await orangeRow.click();\n        });\n\n        it('uses the provided translation in the displayed selection', async () => {\n          const displayedSelection = await el.find('market-row[slot=\"displayed-selection\"]');\n          expect(displayedSelection).not.toBeNull();\n          expect(displayedSelection.innerText).toStrictEqual('2 fruits selected');\n        });\n      });\n    });\n  });\n});\n"]}