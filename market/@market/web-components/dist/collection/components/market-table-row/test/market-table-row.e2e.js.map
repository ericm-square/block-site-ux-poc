{"version":3,"file":"market-table-row.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-table-row/test/market-table-row.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EPage, newE2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-table-row', () => {\n  // can verify this markup works and fires the right events  in the browser, so i'm not sure why it isn't working here\n  it.skip('emits the correct event when used as a header row', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-table-row header>\n        <market-table-column name=\"test\">Column</market-table-column>\n      </market-table-row>\n    `);\n    const headerLoaded = await page.spyOnEvent('marketTableHeaderLoaded');\n    await page.waitForChanges();\n\n    expect(headerLoaded).toHaveReceivedEventTimes(1);\n  });\n\n  it('emits the correct sticky events on changes to the stick-to property', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-table-row>\n        <market-table-cell>Cell content</market-table-cell>\n      </market-table-row>\n    `);\n    const row = await page.find('market-table-row');\n    const rowStuck = await page.spyOnEvent('marketTableRowStick');\n    const rowUnstuck = await page.spyOnEvent('marketTableRowUnstick');\n\n    row.setAttribute('stick-to', 'top');\n    await page.waitForChanges();\n\n    expect(rowStuck).toHaveReceivedEventTimes(1);\n    expect(rowStuck.lastEvent.detail.position).toBe('top');\n\n    row.setAttribute('stick-to', 'bottom');\n    await page.waitForChanges();\n\n    expect(rowStuck).toHaveReceivedEventTimes(2); // i seem to have broken this... but it should be this way\n    expect(rowStuck.lastEvent.detail.position).toBe('bottom');\n\n    row.removeAttribute('stick-to');\n    await page.waitForChanges();\n\n    expect(rowUnstuck).toHaveReceivedEventTimes(1);\n    expect(rowUnstuck.lastEvent.detail.position).toBe(undefined);\n  });\n\n  it('emits the correct sticky events when stuck/unstuck', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-table-row>\n        <market-table-cell>Cell content</market-table-cell>\n      </market-table-row>\n    `);\n    const row = await page.find('market-table-row');\n    const rowStuck = await page.spyOnEvent('marketTableRowStick');\n    const rowUnstuck = await page.spyOnEvent('marketTableRowUnstick');\n\n    await row.callMethod('stick', 'top');\n\n    expect(rowStuck).toHaveReceivedEventTimes(1);\n    expect(rowStuck.lastEvent.detail.position).toBe('top');\n\n    await row.callMethod('unstick');\n\n    expect(rowUnstuck).toHaveReceivedEventTimes(1);\n    expect(rowUnstuck.lastEvent.detail.position).toBe(undefined);\n  });\n\n  it('emits the correct event when clicked if interactive', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-table-row interactive></market-table-row>');\n\n    const el = await page.find('market-table-row');\n    const clickEvent = await page.spyOnEvent('marketTableRowClicked');\n\n    await el.click();\n\n    expect(clickEvent).toHaveReceivedEvent();\n  });\n\n  it('does not emit event when clicked if interactive and disabled', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-table-row interactive disabled></market-table-row>');\n\n    const el = await page.find('market-table-row');\n    const clickEvent = await page.spyOnEvent('marketTableRowClicked');\n\n    await el.click();\n\n    expect(clickEvent).toHaveReceivedEventTimes(0);\n  });\n\n  describe('interactive table row accessibility', () => {\n    let page: E2EPage;\n    let row: E2EElement;\n    let parent: E2EElement;\n    let clickEvent: EventSpy;\n\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <div class=\"parent\">\n          <market-table-row interactive>Apple</market-row>\n        </div>\n      `);\n\n      row = await page.find('market-table-row');\n      parent = await page.find('.parent');\n      clickEvent = await page.spyOnEvent('marketTableRowClicked');\n    });\n\n    it('can be tabbed in to', async () => {\n      await parent.focus();\n      await page.keyboard.press('Tab');\n      await page.waitForChanges();\n      expect(await page.find(':focus')).toEqual(row);\n    });\n\n    it('can be tabbed out of', async () => {\n      await row.focus();\n      expect(await page.find(':focus')).toEqual(row);\n\n      await page.keyboard.press('Tab');\n      await page.waitForChanges();\n      expect(await page.find(':focus')).not.toEqual(row);\n    });\n\n    it('hitting enter emits the click event', async () => {\n      await row.focus();\n      expect(await page.find(':focus')).toEqual(row);\n\n      await page.keyboard.press('Enter');\n      await page.waitForChanges();\n\n      expect(clickEvent).toHaveReceivedEventTimes(1);\n    });\n\n    it('hitting space emits the click event', async () => {\n      await row.focus();\n      expect(await page.find(':focus')).toEqual(row);\n\n      await page.keyboard.press(' ');\n      await page.waitForChanges();\n\n      expect(clickEvent).toHaveReceivedEventTimes(1);\n    });\n\n    it('does not intercept keyboard events of descendant elements', async () => {\n      const page = await newE2EPage();\n      await page.setContent(`\n        <market-table-row interactive>\n          <input type=\"text\" />\n        </market-table-row>\n      `);\n\n      const input = await page.find('input');\n      await input.focus();\n      await page.keyboard.type('A sentence with spaces.');\n      expect(await input.getProperty('value')).toEqual('A sentence with spaces.');\n    });\n\n    it('does not intercept inner interactive elements', async () => {\n      const page = await newE2EPage();\n      await page.setContent(`\n        <market-table-row interactive>\n          <button>Click Me</button>\n          <a href=\"#\">Click Me</a>\n          <market-button>Click Me</market-button>\n          <market-link>Click Me</market-link>\n          <market-checkbox><market-checkbox/>\n        </market-table-row>\n      `);\n\n      const button = await page.find('button');\n      await button.click();\n      const link = await page.find('a');\n      await link.click();\n      const marketButton = await page.find('market-button');\n      await marketButton.click();\n      const marketLink = await page.find('market-link');\n      await marketLink.click();\n      const marketCheckbox = await page.find('market-checkbox');\n      await marketCheckbox.click();\n      expect(clickEvent).toHaveReceivedEventTimes(0);\n    });\n  });\n\n  describe('table row with slotted checkbox', () => {\n    let page: E2EPage;\n    let row: E2EElement;\n    let checkbox: E2EElement;\n    let clickEvent: EventSpy;\n\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <market-table-row interactive>\n          <market-table-cell slot=\"control\">\n            <market-checkbox/>\n          </market-table-cell>\n          <market-table-cell>\n            Cell content\n          </market-table-cell>\n        </market-table-row>\n      `);\n\n      row = await page.find('market-table-row');\n      checkbox = await page.find('market-checkbox');\n      clickEvent = await page.spyOnEvent('marketTableRowClicked');\n    });\n\n    it('default selected value renders unchecked checkbox', () => {\n      expect(checkbox).not.toHaveAttribute('checked');\n      expect(row).toEqualAttribute('aria-selected', 'false');\n    });\n\n    it('selected = true renders checked checkbox', async () => {\n      const page = await newE2EPage();\n      await page.setContent(`\n        <market-table-row selected=\"true\">\n          <market-table-cell slot=\"control\">\n            <market-checkbox/>\n          </market-table-cell>\n          <market-table-cell>\n            Cell content\n          </market-table-cell>\n        </market-table-row>\n      `);\n      row = await page.find('market-table-row');\n      checkbox = await page.find('market-checkbox');\n\n      expect(checkbox).toHaveAttribute('checked');\n      expect(row).toEqualAttribute('aria-selected', 'true');\n    });\n\n    it('clicking checkbox toggles selected value', async () => {\n      await checkbox.click();\n      await page.waitForChanges();\n      expect(checkbox).toHaveAttribute('checked');\n      expect(row).toEqualAttribute('aria-selected', 'true');\n\n      await checkbox.click();\n      await page.waitForChanges();\n      expect(checkbox).not.toHaveAttribute('checked');\n      expect(row).toEqualAttribute('aria-selected', 'false');\n    });\n\n    it('clicking non slotted checkbox does not update selected', async () => {\n      const page = await newE2EPage();\n      await page.setContent(`\n        <market-table-row>\n          <market-table-cell slot=\"control\">\n            <market-checkbox/>\n          </market-table-cell>\n          <market-table-cell>\n            Cell content\n          </market-table-cell>\n          <market-checkbox id=\"not-slotted\"/>\n        </market-table-row>\n      `);\n      checkbox = await page.find('market-table-cell market-checkbox');\n      const notSlottedCheckbox = await page.find('#not-slotted');\n\n      await notSlottedCheckbox.click();\n      expect(checkbox).not.toHaveAttribute('checked');\n      expect(row).toEqualAttribute('aria-selected', 'false');\n    });\n\n    it('clicking interactive row does not toggle checkbox', async () => {\n      await row.click();\n      await page.waitForChanges();\n      expect(clickEvent).toHaveReceivedEventTimes(1);\n      expect(checkbox).not.toHaveAttribute('checked');\n      expect(row).toEqualAttribute('aria-selected', 'false');\n    });\n\n    it('disabled row has disabled checkbox', async () => {\n      const page = await newE2EPage();\n      await page.setContent(`\n        <market-table-row disabled>\n          <market-table-cell slot=\"control\">\n            <market-checkbox/>\n          </market-table-cell>\n          <market-table-cell>\n            Cell content\n          </market-table-cell>\n        </market-table-row>\n      `);\n      checkbox = await page.find('market-checkbox');\n      expect(checkbox).toHaveAttribute('disabled');\n    });\n  });\n});\n"]}