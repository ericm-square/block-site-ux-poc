{"version":3,"file":"market-table-cell.e2e.js","sourceRoot":"","sources":["../../../../../src/components/market-table-cell/test/market-table-cell.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAW,UAAU,EAAwB,MAAM,uBAAuB,CAAC;AAElF,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,qDAAqD,CAAC,CAAC;QAE7E,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACrD,MAAM,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE,KAAK,IAAI,EAAE;QAC7E,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;;;;;KASrB,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACtD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAElD,MAAM,CAAC,MAAM,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAClD,MAAM,CAAC,MAAM,CAAC,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAEjD,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;QAC3E,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;;;;KAQrB,CAAC,CAAC;QAEH,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAChD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QAEtD,MAAM,CAAC,GAAG,CAAC,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;QAEzD,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,cAAc,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YACvC,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE;YAC3B,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE;YAC3B,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE;SAC5B,CAAC,CAAC;QAEH,2FAA2F;QAC3F,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnD,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,qDAAqD,CAAC,CAAC;QAC7E,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAElD,MAAM,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAC5C,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;QAErD,MAAM,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QAC7C,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;QAEtD,MAAM,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;QAC1C,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,qDAAqD,CAAC,CAAC;QAE7E,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAChD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;QAEnE,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QAEjB,MAAM,CAAC,UAAU,CAAC,CAAC,mBAAmB,EAAE,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;QAC5E,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,8DAA8D,CAAC,CAAC;QAEtF,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAChD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;QAEnE,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QAEjB,MAAM,CAAC,UAAU,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,sCAAsC,EAAE,GAAG,EAAE;QACpD,IAAI,IAAa,CAAC;QAClB,IAAI,IAAgB,CAAC;QACrB,IAAI,MAAkB,CAAC;QACvB,IAAI,UAAoB,CAAC;QAEzB,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;YAC1B,MAAM,IAAI,CAAC,UAAU,CAAC;;;;OAIrB,CAAC,CAAC;YAEH,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAC5C,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACpC,UAAU,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;YACnC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;YACpC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;YACnB,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAEhD,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;YACnB,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAEhD,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAE5B,MAAM,CAAC,UAAU,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;YACnB,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAEhD,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC/B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAE5B,MAAM,CAAC,UAAU,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;YACzE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;YAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;OAIrB,CAAC,CAAC;YAEH,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvC,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;YACpB,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YACpD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { E2EPage, newE2EPage, E2EElement, EventSpy } from '@stencil/core/testing';\n\ndescribe('market-table-cell', () => {\n  it('renders', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-table-cell>Cell content</market-table-cell>');\n\n    const element = await page.find('market-table-cell');\n    expect(element).toHaveAttribute('hydrated');\n  });\n\n  it('inherits properties from header market-table-column correctly', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-table>\n        <market-table-row slot=\"header\">\n          <market-table-column name=\"fruit\" align=\"right\">Fruit</market-table-column>\n        </market-table-row>\n        <market-table-row>\n          <market-table-cell>Mango</market-table-cell>\n        </market-table-row>\n      </market-table>\n    `);\n\n    const column = await page.find('market-table-column');\n    const cell = await page.find('market-table-cell');\n\n    expect(column).toEqualAttribute('align', 'right');\n    expect(column).toEqualAttribute('name', 'fruit');\n\n    await page.waitForChanges();\n\n    expect(cell).toEqualAttribute('align', 'right');\n    expect(cell).toEqualAttribute('column', 'fruit');\n  });\n\n  it('inherits indentation from parent market-table-row correctly', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <market-table>\n        <market-table-row leading-indentation=\"1\">\n          <market-table-cell>One</market-table-cell>\n          <market-table-cell>Two</market-table-cell>\n          <market-table-cell>Three</market-table-cell>\n        </market-table-row>\n      </market-table>\n    `);\n\n    const row = await page.find('market-table-row');\n    const cells = await page.findAll('market-table-cell');\n\n    expect(row).toEqualAttribute('leading-indentation', '1');\n\n    await page.waitForChanges();\n\n    const computedStyles = await Promise.all([\n      cells[0].getComputedStyle(),\n      cells[1].getComputedStyle(),\n      cells[2].getComputedStyle(),\n    ]);\n\n    // note that these values will change if there are indentation-related design token changes\n    expect(computedStyles[0].paddingLeft).toBe('48px');\n    expect(computedStyles[1].paddingLeft).toBe('8px');\n    expect(computedStyles[2].paddingLeft).toBe('8px');\n  });\n\n  it('can stick and unstick itself', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-table-cell>Cell content</market-table-cell>');\n    const cell = await page.find('market-table-cell');\n\n    await cell.callMethod('_stickSelf', 'left');\n    await page.waitForChanges();\n\n    expect(cell).toEqualAttribute('slot', 'sticky-left');\n\n    await cell.callMethod('_stickSelf', 'right');\n    await page.waitForChanges();\n\n    expect(cell).toEqualAttribute('slot', 'sticky-right');\n\n    await cell.callMethod('_unstickSelf', '');\n    await page.waitForChanges();\n\n    expect(cell).not.toHaveAttribute('slot');\n  });\n\n  it('emits the correct event when clicked if interactive', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-table-cell interactive></market-table-cell>');\n\n    const el = await page.find('market-table-cell');\n    const clickEvent = await page.spyOnEvent('marketTableCellClicked');\n\n    await el.click();\n\n    expect(clickEvent).toHaveReceivedEvent();\n  });\n\n  it('does not emit event when clicked if interactive and disabled', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<market-table-cell interactive disabled></market-table-cell>');\n\n    const el = await page.find('market-table-cell');\n    const clickEvent = await page.spyOnEvent('marketTableCellClicked');\n\n    await el.click();\n\n    expect(clickEvent).toHaveReceivedEventTimes(0);\n  });\n\n  describe('interactive table cell accessibility', () => {\n    let page: E2EPage;\n    let cell: E2EElement;\n    let parent: E2EElement;\n    let clickEvent: EventSpy;\n\n    beforeEach(async () => {\n      page = await newE2EPage();\n      await page.setContent(`\n        <div class=\"parent\">\n          <market-table-cell interactive>Apple</market-table-cell>\n        </div>\n      `);\n\n      cell = await page.find('market-table-cell');\n      parent = await page.find('.parent');\n      clickEvent = await page.spyOnEvent('marketTableCellClicked');\n    });\n\n    it('can be tabbed in to', async () => {\n      await parent.focus();\n      await page.keyboard.press('Tab');\n      await page.waitForChanges();\n      expect(await page.find(':focus')).toEqual(cell);\n    });\n\n    it('can be tabbed out of', async () => {\n      await cell.focus();\n      expect(await page.find(':focus')).toEqual(cell);\n\n      await page.keyboard.press('Tab');\n      await page.waitForChanges();\n      expect(await page.find(':focus')).not.toEqual(cell);\n    });\n\n    it('hitting enter emits the click event', async () => {\n      await cell.focus();\n      expect(await page.find(':focus')).toEqual(cell);\n\n      await page.keyboard.press('Enter');\n      await page.waitForChanges();\n\n      expect(clickEvent).toHaveReceivedEventTimes(1);\n    });\n\n    it('hitting space emits the click event', async () => {\n      await cell.focus();\n      expect(await page.find(':focus')).toEqual(cell);\n\n      await page.keyboard.press(' ');\n      await page.waitForChanges();\n\n      expect(clickEvent).toHaveReceivedEventTimes(1);\n    });\n\n    it('does not intercept keyboard events of descendant elements', async () => {\n      const page = await newE2EPage();\n      await page.setContent(`\n        <market-table-cell interactive>\n          <input type=\"text\" />\n        </market-table-cell>\n      `);\n\n      const input = await page.find('input');\n      await input.focus();\n      await page.keyboard.type('A sentence with spaces.');\n      expect(await input.getProperty('value')).toEqual('A sentence with spaces.');\n    });\n  });\n});\n"]}