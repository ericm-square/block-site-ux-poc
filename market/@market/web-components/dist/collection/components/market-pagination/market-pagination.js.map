{"version":3,"file":"market-pagination.js","sourceRoot":"","sources":["../../../../src/components/market-pagination/market-pagination.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAgB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAE/F,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAG5D;;;;;;;GAOG;AAOH,MAAM,OAAO,gBAAgB;;;wBAW2B,KAAK;;;;;;;IAuC3D;;OAEG;IAEH,cAAc,CAAC,CAA0D;QACvE,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAED;;OAEG;IAEH,YAAY,CAAC,CAA8D;QACzE,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM;QACJ,MAAM,+BAA+B,GAAG,mBAAmB,CAAC,6BAA6B,CAAC,CAAC;QAC3F,MAAM,0BAA0B,GAAG,mBAAmB,CAAC,uBAAuB,CAAC,CAAC;QAEhF,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAC,mBAAmB;YAC5B,IAAI,CAAC,eAAe,IAAI,CACvB,EAAC,+BAA+B,qDAC9B,KAAK,EAAE,IAAI,CAAC,QAAQ,EACpB,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBAEvB,6DAAM,IAAI,EAAC,iBAAiB,EAAC,IAAI,EAAC,iBAAiB,uBAE5C;gBACP,6DAAM,IAAI,EAAC,oBAAoB,EAAC,IAAI,EAAC,oBAAoB,IACtD,IAAI,CAAC,QAAQ,CACT,CACyB,CACnC;YAED,EAAC,0BAA0B,qDACzB,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,eAAe,EAAE,IAAI,CAAC,eAAe;gBAErC,6DAAM,IAAI,EAAC,WAAW,EAAC,IAAI,EAAC,WAAW,WAEhC;gBACP,6DAAM,IAAI,EAAC,cAAc,EAAC,IAAI,EAAC,cAAc;oBAC1C,IAAI,CAAC,WAAW;;oBAAM,IAAI,CAAC,UAAU,CACjC,CACoB,CACxB,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, Event, EventEmitter, h, Host, Listen, Prop } from '@stencil/core';\n\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { TMarketInternalPaginationNavigationEventDetail, TMarketPaginationPageSizeChangeEventDetail } from './events';\n\n/**\n * @slot page-size-label - localized string to label the page size dropdown (defaults to English \"Results per page\")\n * @slot page-size-feedback - localized string to label the current page size (defaults to value of {this.pageSize})\n * @slot nav-label - localized string to label the page dropdown (defaults to English \"Page\")\n * @slot nav-feedback - localized string to label the current page of total pages\n *      (defaults to English \"{this.currentPage} of {this.totalPages}\").\n *      The #s for current page/total pages need to be passed in as part of the string.\n */\n\n@Component({\n  tag: 'market-pagination',\n  styleUrl: 'market-pagination.css',\n  shadow: true,\n})\nexport class MarketPagination {\n  @Element() el: HTMLMarketPaginationElement;\n\n  /**\n   * The current page being viewed.\n   */\n  @Prop() readonly currentPage!: number;\n\n  /**\n   * Functionally and visually disables all navigation buttons\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * The total number of pages.\n   */\n  @Prop() readonly totalPages!: number;\n\n  /**\n   * Allow the user to navigate to the next page\n   */\n  @Prop() readonly hasNextPage!: boolean;\n\n  /**\n   * Allow the user to navigate to the previous page\n   */\n  @Prop() readonly hasPreviousPage!: boolean;\n\n  /**\n   * The number of results displayed per page.\n   */\n  @Prop() readonly pageSize: string;\n\n  /**\n   * Options for page sizes (comma separated list of numbers). If omitted, will not display the page size subcomponent.\n   */\n  @Prop() readonly pageSizeOptions: string;\n\n  /**\n   * Fired whenever the page size is changed.\n   */\n  @Event({ bubbles: true, composed: true })\n  marketPaginationPageSizeChange: EventEmitter<TMarketPaginationPageSizeChangeEventDetail>;\n\n  /**\n   * Fired whenever the menu selection is changed.\n   */\n  @Event({ bubbles: true, composed: true })\n  marketPaginationNavigation: EventEmitter<TMarketInternalPaginationNavigationEventDetail>;\n\n  /**\n   * Rebroadcast up events from market-pagination-page-size.\n   */\n  @Listen('marketInternalPaginationPageSizeChange')\n  changePageSize(e: CustomEvent<TMarketPaginationPageSizeChangeEventDetail>) {\n    e.stopPropagation();\n    const { detail } = e;\n    this.marketPaginationPageSizeChange.emit(detail);\n  }\n\n  /**\n   * Rebroadcast up events from market-pagination-nav.\n   */\n  @Listen('marketInternalPaginationNavigation')\n  navigatePage(e: CustomEvent<TMarketInternalPaginationNavigationEventDetail>) {\n    e.stopPropagation();\n    const { detail } = e;\n    this.marketPaginationNavigation.emit(detail);\n  }\n\n  render() {\n    const MarketPaginationPageSizeTagName = getNamespacedTagFor('market-pagination-page-size');\n    const MarketPaginationNavTagName = getNamespacedTagFor('market-pagination-nav');\n\n    return (\n      <Host class=\"market-pagination\">\n        {this.pageSizeOptions && (\n          <MarketPaginationPageSizeTagName\n            value={this.pageSize}\n            pageSizeOptions={this.pageSizeOptions}\n            disabled={this.disabled}\n          >\n            <slot name=\"page-size-label\" slot=\"page-size-label\">\n              Results per page\n            </slot>\n            <slot name=\"page-size-feedback\" slot=\"page-size-feedback\">\n              {this.pageSize}\n            </slot>\n          </MarketPaginationPageSizeTagName>\n        )}\n\n        <MarketPaginationNavTagName\n          currentPage={this.currentPage}\n          disabled={this.disabled}\n          totalPages={this.totalPages}\n          pageSize={this.pageSize}\n          hasNextPage={this.hasNextPage}\n          hasPreviousPage={this.hasPreviousPage}\n        >\n          <slot name=\"nav-label\" slot=\"nav-label\">\n            Page\n          </slot>\n          <slot name=\"nav-feedback\" slot=\"nav-feedback\">\n            {this.currentPage} of {this.totalPages}\n          </slot>\n        </MarketPaginationNavTagName>\n      </Host>\n    );\n  }\n}\n"]}