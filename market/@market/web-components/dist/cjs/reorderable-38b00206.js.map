{"file":"reorderable-38b00206.js","mappings":"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","names":["isDraggable","isMarketTableV2Group","isMarketTableV2Row","asyncRequestAnimationFrame"],"sources":["src/utils/reorderable.ts"],"sourcesContent":["import { EventEmitter } from '@stencil/core';\nimport { isDraggable, TMarketDragEventDetail, MarketDraggableElement } from './draggable';\nimport { isMarketTableV2Row } from '../components/tables-v2/market-table-v2-row/types';\nimport { isMarketTableV2Group } from '../components/tables-v2/market-table-v2-group/types';\nimport { asyncRequestAnimationFrame } from './raf';\n\nexport type TMarketReorderableOptions = 'off' | 'internal' | 'external';\n\nexport interface MarketReorderableElement extends HTMLElement {\n  reorderable: TMarketReorderableOptions;\n}\n\nexport function isReorderable(value: unknown): value is MarketReorderableElement {\n  return Boolean(value && ['internal', 'external'].includes((value as MarketReorderableElement).reorderable));\n}\n\nexport type TMarketReorderEventDetail = {\n  item: MarketDraggableElement;\n  oldIndex: number;\n  newIndex: number;\n};\n\nexport const TABLE_GROUP_EXPAND_TIMEOUT_DURATION = 300;\n\n/*\n  This util class abstracts & encapsulates reorderable functionality for a component.\n\n  In the constructor:\n  - `el` is the component element to apply reordering functionality to\n  - `accepts` is an array of CSS selectors that are valid draggable elements\n  - `event` is the stencil EventEmitter to fire when a reorder event occurs\n\n  Intended to be wired up via drag events fired by a dragged object like so:\n  \n  ```html\n  <Host\n    onMarketDragMove={(e: CustomEvent<TMarketDragEventDetail>) => this.onDragMove(e)}\n    onMarketDragLeave={() => this.onDragLeave()}\n    onMarketDragEnd={(e: CustomEvent<TMarketDragEventDetail>) => this.onDragEnd(e)}\n    onMarketDragDrop={(e: CustomEvent<TMarketDragEventDetail>) => this.onDragDrop(e)}\n  >\n    ...\n  </Host>\n  ```\n\n  ```js\n  this.reorder = new Reorderable({\n    el: this.el,\n    accepts: ['market-row'],\n    event: marketListItemsReordered,\n  });\n  onDragMove(e: CustomEvent<TMarketDragEventDetail>) {\n    this.reorder.dragMove(e);\n  }\n  onDragLeave() {\n    this.reorder.dragLeave();\n  }\n  onDragEnd(e: CustomEvent<TMarketDragEventDetail>) {\n    this.reorder.dragEnd(e);\n  }\n  onDragDrop(e: CustomEvent<TMarketDragEventDetail>) {\n    this.reorder.dragDrop(e);\n  }\n  ```\n\n  ```css \n  // the drag cursor inserted to show current drop location\n  ::slotted(.market-drag-cursor) { ... }\n  ```\n*/\n\nexport class Reorderable {\n  el: MarketReorderableElement;\n  accepts: Array<string>;\n  event: EventEmitter<TMarketReorderEventDetail>;\n  mode: 'default' | 'framework';\n  tableGroupExpandTimeout: ReturnType<typeof setTimeout>;\n\n  // static instance var means only one cursor shared across all Reorderable instances\n  static cursor = this.createCursor();\n  static createCursor() {\n    const cursor = document.createElement('div');\n    cursor.classList.add('market-drag-cursor');\n    return cursor;\n  }\n\n  constructor({\n    el,\n    accepts,\n    event,\n    mode,\n  }: {\n    el: MarketReorderableElement;\n    accepts: Array<string>;\n    event: EventEmitter;\n    mode: 'default' | 'framework';\n  }) {\n    this.el = el;\n    this.accepts = accepts;\n    this.event = event;\n    this.mode = mode;\n  }\n\n  private isValidDrag(dragged: HTMLElement, source: HTMLElement, target: HTMLElement) {\n    const { el, accepts } = this;\n    const reorderableSource = source?.closest('[reorderable=\"internal\"], [reorderable=\"external\"]');\n    const reorderableTarget = target?.closest('[reorderable=\"internal\"], [reorderable=\"external\"]');\n\n    // begin with type checks...\n    if (!isDraggable(dragged)) return false;\n    if (!isReorderable(reorderableSource)) return false;\n    if (!isReorderable(reorderableTarget)) return false;\n\n    // is this an accepted draggable item?\n    if (dragged.closest(accepts.join(',')) !== dragged) return false;\n\n    // is this element either the source or destination?\n    if (el !== reorderableSource && el !== reorderableTarget) return false;\n\n    // if source & destination elements are different...\n    if (reorderableSource !== reorderableTarget) {\n      // are they both reorderable externally?\n      const bothExternal = reorderableSource.reorderable === 'external' && reorderableTarget.reorderable === 'external';\n      // or do they have a common reorderable ancestor?\n      const closestReorderable = getCommonAncestor(reorderableSource, reorderableTarget).closest(\n        '[reorderable=\"internal\"], [reorderable=\"external\"]',\n      );\n      if (!bothExternal && !closestReorderable) return false;\n    }\n\n    // looks like we're good!\n    return true;\n  }\n\n  /**\n   * Fired on a target element when an item is dragged over the target.\n   */\n  dragMove(e: CustomEvent<TMarketDragEventDetail>) {\n    const { el, accepts, tableGroupExpandTimeout } = this;\n    const { y, el: dragged, source, target } = e.detail;\n    const { cursor } = Reorderable;\n\n    // check drag validity\n    if (!this.isValidDrag(dragged, source, target)) return;\n\n    // clear the table group timeout\n    clearTimeout(tableGroupExpandTimeout);\n\n    // remove cursor parent class\n    cursor.parentElement?.classList.remove('market-drag-cursor-parent');\n\n    // if this element is the drag target itself (not another child)\n    if (target === el) {\n      el.append(cursor);\n      el.classList.add('market-drag-cursor-parent');\n      return;\n    }\n\n    // otherwise, find the nearest child item target\n    const targetSibling = target.closest(accepts.join(',')) as HTMLElement;\n\n    // do nothing if no target sibling\n    if (!targetSibling) return;\n\n    // do nothing if the target sibling is the placeholder\n    if (targetSibling === dragged) return;\n\n    // determine where to insert cursor based on mouse position\n    if (isMarketTableV2Group(targetSibling)) {\n      // special case for table groups; look at the parent row\n      const parent = [...targetSibling.children].find((el) => isMarketTableV2Row(el) && el.slot === 'parent');\n\n      const { top, height } = parent.getBoundingClientRect();\n      if (targetSibling.collapsible && targetSibling.collapsed) {\n        const oneThird = Math.round(top + height / 3);\n        const twoThirds = Math.round(top + (height * 2) / 3);\n        if (y < oneThird) {\n          // insert cursor before the group\n          targetSibling.before(cursor);\n        } else if (y > twoThirds) {\n          // insert cursor after the group\n          targetSibling.after(cursor);\n        } else {\n          // insert cursor inside the group after the parent\n          parent.after(cursor);\n          const children = [...targetSibling.children].filter(\n            (el) => (isMarketTableV2Row(el) || isMarketTableV2Group(el)) && !el.slot,\n          );\n          // set a timeout to expand the group if hovered\n          if (children.length > 0) {\n            this.tableGroupExpandTimeout = setTimeout(async () => {\n              await targetSibling.setCollapsed(false);\n              await asyncRequestAnimationFrame();\n              parent.after(cursor);\n            }, TABLE_GROUP_EXPAND_TIMEOUT_DURATION);\n          }\n        }\n      } else {\n        const halfway = Math.round(top + height / 2);\n        if (y < halfway) {\n          // insert cursor before the group\n          targetSibling.before(cursor);\n        } else {\n          // insert cursor inside the group after the parent\n          parent.after(cursor);\n        }\n      }\n    } else {\n      const { top, height } = targetSibling.getBoundingClientRect();\n      const halfway = Math.round(top + height / 2);\n      if (y < halfway) {\n        targetSibling.before(cursor);\n      } else {\n        targetSibling.after(cursor);\n      }\n    }\n\n    // mark the cursor's parent\n    cursor.parentElement?.classList.add('market-drag-cursor-parent');\n  }\n\n  /**\n   * Fired on a target element when a dragged item leaves the target\n   */\n  dragLeave() {\n    const { tableGroupExpandTimeout } = this;\n    const { cursor } = Reorderable;\n\n    // remove the cursor and parent class\n    cursor.parentElement?.classList.remove('market-drag-cursor-parent');\n    cursor.remove();\n\n    // clear the table group timeout\n    clearTimeout(tableGroupExpandTimeout);\n  }\n\n  /**\n   * Fired on a dragged item when it is released.\n   * Useful to determine if an item was dropped externally.\n   */\n  dragEnd(e: CustomEvent<TMarketDragEventDetail>) {\n    const { el, accepts, event, tableGroupExpandTimeout } = this;\n    const { el: dragged, source } = e.detail;\n    const { cursor } = Reorderable;\n\n    // clear the table group timeout\n    clearTimeout(tableGroupExpandTimeout);\n\n    // instead of using target from the event detail, use cursor's parent\n    const target = cursor.parentElement as MarketReorderableElement;\n\n    // check for drag validity\n    if (!this.isValidDrag(dragged, source, target)) return;\n\n    // do nothing if the source and target are the same reorderable\n    const reorderableSource = source?.closest('[reorderable=\"internal\"], [reorderable=\"external\"]');\n    const reorderableTarget = target?.closest('[reorderable=\"internal\"], [reorderable=\"external\"]');\n    if (reorderableSource === reorderableTarget) return;\n\n    // we now know the element is being dragged out of its reorderable parent,\n    // so we stop propagation on original event so reorder event isn't duped.\n    e.stopImmediatePropagation();\n\n    // note: dragging externally means new index = -1\n    const items = getReorderableItems(el, accepts);\n    const oldIndex = items.indexOf(dragged);\n    const newIndex = -1;\n\n    // emit the reorder event and check for prevent default\n    const { defaultPrevented } = event.emit({\n      item: dragged,\n      oldIndex,\n      newIndex,\n    });\n\n    // if reorder event was prevented, prevent the drop event\n    if (defaultPrevented) {\n      e.preventDefault();\n      cursor.remove();\n    }\n  }\n\n  /**\n   * Fired on a target element when a dragged item is released over the target.\n   */\n  async dragDrop(e: CustomEvent<TMarketDragEventDetail>) {\n    const { el, accepts, event, mode, tableGroupExpandTimeout } = this;\n    const { el: dragged, source } = e.detail;\n    const { cursor } = Reorderable;\n\n    // clear the table group timeout\n    clearTimeout(tableGroupExpandTimeout);\n\n    // if this is not the cursor's parent, do nothing and let the event bubble up\n    const reorderableTarget = cursor.parentElement as MarketReorderableElement;\n    if (el !== reorderableTarget) return;\n\n    // check for drag validity\n    if (!this.isValidDrag(dragged, source, reorderableTarget)) return;\n\n    // prevent the event from further bubbling up\n    e.stopImmediatePropagation();\n\n    // remove cursor parent class\n    reorderableTarget?.classList.remove('market-drag-cursor-parent');\n\n    // if the cursor is a sibling of the dragged element, do nothing\n    if ([cursor.previousElementSibling, cursor.nextElementSibling].includes(dragged)) {\n      cursor.remove();\n      return;\n    }\n\n    // note: if item is external, then old index is -1\n    const items = getReorderableItems(reorderableTarget, accepts);\n    const oldIndex = items.indexOf(dragged);\n\n    // find new index\n    const itemsWithoutDraggedEl = [...items];\n    if (oldIndex >= 0) {\n      itemsWithoutDraggedEl.splice(oldIndex, 1);\n    }\n    const newIndex = itemsWithoutDraggedEl.indexOf(cursor.previousElementSibling as MarketDraggableElement) + 1;\n\n    // same index means no reorder event\n    if (newIndex === oldIndex) {\n      cursor.remove();\n      return;\n    }\n\n    // create a temp div to hold the element's original position\n    const originalPosition = document.createElement('div');\n\n    // insert the dragged element at the cursor's position\n    dragged.replaceWith(originalPosition);\n    cursor.replaceWith(dragged);\n\n    // await the drop completion event\n    await new Promise((resolve) => dragged.addEventListener('marketDragComplete', resolve, { once: true }));\n\n    // in framework mode, restore the original position before firing event\n    if (mode === 'framework') originalPosition.replaceWith(dragged);\n\n    // fire the reorder event and check for prevent default\n    const { defaultPrevented } = event.emit({\n      item: dragged,\n      oldIndex,\n      newIndex,\n    });\n\n    // in default mode, restore the original position if event was prevented\n    if (defaultPrevented && mode === 'default') originalPosition.replaceWith(dragged);\n\n    // cleanup: remove the original position if still in DOM\n    originalPosition.remove();\n  }\n\n  // clean up var refs\n  destroy() {\n    Reorderable.cursor.remove();\n\n    clearTimeout(this.tableGroupExpandTimeout);\n\n    this.el = null;\n    this.accepts = null;\n    this.event = null;\n    this.mode = null;\n    this.tableGroupExpandTimeout = null;\n  }\n}\n\nfunction getReorderableItems(el: MarketReorderableElement, accepts: Array<string>): MarketDraggableElement[] {\n  const items = [];\n  const scopedSelectors = accepts.map((selector) => `:scope > ${selector}`);\n  el.querySelectorAll(scopedSelectors.join(',')).forEach((item) => {\n    if (isDraggable(item)) items.push(item);\n  });\n  return items;\n}\n\nfunction getCommonAncestor(node1: HTMLElement, node2: HTMLElement): HTMLElement {\n  let node: HTMLElement = node1;\n  while (node) {\n    if (node.contains(node2)) {\n      return node;\n    }\n    node = node.parentElement;\n  }\n  return null;\n}\n"],"version":3}