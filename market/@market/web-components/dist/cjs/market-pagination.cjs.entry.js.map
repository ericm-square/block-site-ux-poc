{"file":"market-pagination.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,mBAAmB,GAAG,g1BAAg1B,CAAC;AAC72B,+BAAe,mBAAmB;;MCkBrB,gBAAgB;;;;;;wBAW2B,KAAK;;;;;;;;;;IA2C3D,cAAc,CAAC,CAA0D;QACvE,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAClD;;;;IAMD,YAAY,CAAC,CAA8D;QACzE,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC9C;IAED,MAAM;QACJ,MAAM,+BAA+B,GAAGA,2BAAmB,CAAC,6BAA6B,CAAC,CAAC;QAC3F,MAAM,0BAA0B,GAAGA,2BAAmB,CAAC,uBAAuB,CAAC,CAAC;QAEhF,QACEC,QAACC,UAAI,qDAAC,KAAK,EAAC,mBAAmB,IAC5B,IAAI,CAAC,eAAe,KACnBD,QAAC,+BAA+B,qDAC9B,KAAK,EAAE,IAAI,CAAC,QAAQ,EACpB,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAEvBA,mEAAM,IAAI,EAAC,iBAAiB,EAAC,IAAI,EAAC,iBAAiB,uBAE5C,EACPA,mEAAM,IAAI,EAAC,oBAAoB,EAAC,IAAI,EAAC,oBAAoB,IACtD,IAAI,CAAC,QAAQ,CACT,CACyB,CACnC,EAEDA,QAAC,0BAA0B,qDACzB,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,eAAe,EAAE,IAAI,CAAC,eAAe,IAErCA,mEAAM,IAAI,EAAC,WAAW,EAAC,IAAI,EAAC,WAAW,WAEhC,EACPA,mEAAM,IAAI,EAAC,cAAc,EAAC,IAAI,EAAC,cAAc,IAC1C,IAAI,CAAC,WAAW,UAAM,IAAI,CAAC,UAAU,CACjC,CACoB,CACxB,EACP;KACH;;;;;;;","names":["getNamespacedTagFor","h","Host"],"sources":["src/components/market-pagination/market-pagination.css?tag=market-pagination&encapsulation=shadow","src/components/market-pagination/market-pagination.tsx"],"sourcesContent":[":host {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n.market-button-dropdown {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  .market-filter-button {\n    display: block;\n  }\n}\n\n.market-pagination-page-size + .market-pagination-nav {\n  margin-top: var(--pagination-nav-vertical-margin);\n\n  @media only screen and (min-width: 600px) {\n    margin-top: 0;\n    margin-left: var(--pagination-nav-horizontal-margin);\n  }\n}\n\n.market-pagination-nav nav {\n  display: flex;\n  justify-content: space-between;\n  column-gap: var(--pagination-nav-content-spacing);\n\n  .market-button-dropdown {\n    flex-grow: 1;\n  }\n}\n\n@media only screen and (min-width: 600px) {\n  :host {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  .market-pagination-nav:only-child {\n    margin-left: auto;\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Listen, Prop } from '@stencil/core';\n\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { TMarketInternalPaginationNavigationEventDetail, TMarketPaginationPageSizeChangeEventDetail } from './events';\n\n/**\n * @slot page-size-label - localized string to label the page size dropdown (defaults to English \"Results per page\")\n * @slot page-size-feedback - localized string to label the current page size (defaults to value of {this.pageSize})\n * @slot nav-label - localized string to label the page dropdown (defaults to English \"Page\")\n * @slot nav-feedback - localized string to label the current page of total pages\n *      (defaults to English \"{this.currentPage} of {this.totalPages}\").\n *      The #s for current page/total pages need to be passed in as part of the string.\n */\n\n@Component({\n  tag: 'market-pagination',\n  styleUrl: 'market-pagination.css',\n  shadow: true,\n})\nexport class MarketPagination {\n  @Element() el: HTMLMarketPaginationElement;\n\n  /**\n   * The current page being viewed.\n   */\n  @Prop() readonly currentPage!: number;\n\n  /**\n   * Functionally and visually disables all navigation buttons\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * The total number of pages.\n   */\n  @Prop() readonly totalPages!: number;\n\n  /**\n   * Allow the user to navigate to the next page\n   */\n  @Prop() readonly hasNextPage!: boolean;\n\n  /**\n   * Allow the user to navigate to the previous page\n   */\n  @Prop() readonly hasPreviousPage!: boolean;\n\n  /**\n   * The number of results displayed per page.\n   */\n  @Prop() readonly pageSize: string;\n\n  /**\n   * Options for page sizes (comma separated list of numbers). If omitted, will not display the page size subcomponent.\n   */\n  @Prop() readonly pageSizeOptions: string;\n\n  /**\n   * Fired whenever the page size is changed.\n   */\n  @Event({ bubbles: true, composed: true })\n  marketPaginationPageSizeChange: EventEmitter<TMarketPaginationPageSizeChangeEventDetail>;\n\n  /**\n   * Fired whenever the menu selection is changed.\n   */\n  @Event({ bubbles: true, composed: true })\n  marketPaginationNavigation: EventEmitter<TMarketInternalPaginationNavigationEventDetail>;\n\n  /**\n   * Rebroadcast up events from market-pagination-page-size.\n   */\n  @Listen('marketInternalPaginationPageSizeChange')\n  changePageSize(e: CustomEvent<TMarketPaginationPageSizeChangeEventDetail>) {\n    e.stopPropagation();\n    const { detail } = e;\n    this.marketPaginationPageSizeChange.emit(detail);\n  }\n\n  /**\n   * Rebroadcast up events from market-pagination-nav.\n   */\n  @Listen('marketInternalPaginationNavigation')\n  navigatePage(e: CustomEvent<TMarketInternalPaginationNavigationEventDetail>) {\n    e.stopPropagation();\n    const { detail } = e;\n    this.marketPaginationNavigation.emit(detail);\n  }\n\n  render() {\n    const MarketPaginationPageSizeTagName = getNamespacedTagFor('market-pagination-page-size');\n    const MarketPaginationNavTagName = getNamespacedTagFor('market-pagination-nav');\n\n    return (\n      <Host class=\"market-pagination\">\n        {this.pageSizeOptions && (\n          <MarketPaginationPageSizeTagName\n            value={this.pageSize}\n            pageSizeOptions={this.pageSizeOptions}\n            disabled={this.disabled}\n          >\n            <slot name=\"page-size-label\" slot=\"page-size-label\">\n              Results per page\n            </slot>\n            <slot name=\"page-size-feedback\" slot=\"page-size-feedback\">\n              {this.pageSize}\n            </slot>\n          </MarketPaginationPageSizeTagName>\n        )}\n\n        <MarketPaginationNavTagName\n          currentPage={this.currentPage}\n          disabled={this.disabled}\n          totalPages={this.totalPages}\n          pageSize={this.pageSize}\n          hasNextPage={this.hasNextPage}\n          hasPreviousPage={this.hasPreviousPage}\n        >\n          <slot name=\"nav-label\" slot=\"nav-label\">\n            Page\n          </slot>\n          <slot name=\"nav-feedback\" slot=\"nav-feedback\">\n            {this.currentPage} of {this.totalPages}\n          </slot>\n        </MarketPaginationNavTagName>\n      </Host>\n    );\n  }\n}\n"],"version":3}