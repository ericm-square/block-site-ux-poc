{"file":"market-row.js","mappings":"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","names":["MarketRow","ROW_SMALL_SIZE_CARET_ICON_ASSET","ROW_MEDIUM_SIZE_CARET_ICON_ASSET"],"sources":["../../node_modules/lodash-es/isEmpty.js","src/components/market-row/utils.ts","src/components/market-row/styles/market-row.css?tag=market-row&encapsulation=shadow","src/components/market-row/market-row.tsx"],"sourcesContent":["import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLike from './isArrayLike.js';\nimport isBuffer from './isBuffer.js';\nimport isPrototype from './_isPrototype.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isEmpty;\n","import { isCheckboxElement, isRadioElement, isToggleElement } from '../../utils/element-type-guard';\n\nimport { TMarketRowValidControlElement } from './types';\n\n/**\n * @param {unknown} el - Element to be checked\n * @returns {boolean} Whether `el` is a `TMarketRowValidControlElement`\n */\nexport function isValidRowControl(el: unknown): el is TMarketRowValidControlElement {\n  return isCheckboxElement(el) || isRadioElement(el) || isToggleElement(el);\n}\n","@import \"./market-row.base.css\";\n@import \"./market-row.drag.css\";\n@import \"./market-row.small.css\";\n@import \"./market-row.medium.css\";\n@import \"./market-row.interactive.css\";\n@import \"./market-row.destructive.css\";\n","import { Component, Element, Event, EventEmitter, h, Host, Method, Prop, State, Watch } from '@stencil/core';\nimport { isEmpty } from 'lodash-es';\nimport {\n  ROW_MEDIUM_SIZE_CARET_ICON_ASSET,\n  ROW_SMALL_SIZE_CARET_ICON_ASSET,\n} from '@market/market-theme/js/cjs/index.js';\n\nimport { classNames } from '../../utils/classnames';\nimport { Draggable } from '../../utils/draggable';\nimport { TMarketDragCoords } from '../../utils/gesture/types';\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { asyncRequestAnimationFrame } from '../../utils/raf';\n\nimport { TMarketRowDeselectedEventDetail, TMarketRowSelectedEventDetail } from './events';\nimport { TMarketRowValidControlElement } from './types';\nimport { isValidRowControl } from './utils';\n\n/**\n * @slot label - Text label for the row\n * @slot subtext - Secondary text for the row\n * @slot side-label - Additional text label to display on the side of the row\n * @slot side-subtext - Secondary text to display on the side of the row\n * @slot control - An interactive control, intended for use with `<market-checkbox>`, `<market-radio>`, or `<market-toggle>`.\n * The row's `selected` prop will set the control's selection state.\n * @slot leading-accessory - An icon set on the left side of the row; intended for use with `<market-accessory>`\n * @slot trailing-accessory - An icon set on the right side of the row; intended for use with `<market-accessory>`\n * @slot - Default slot can take any content, intended as an \"escape hatch\" for\n * scenarios where rows need to contain more complex HTML content stylable from\n * the light DOM.\n *\n * @part container - Wraps the main and side areas (see below). The outer padding of the row is specified on this element.\n * @part main - Wraps the label and subtext slots, can be used for styling purposes as needed.\n * @part side - Wraps the side-label and side-subtext slots, can be used for styling purposes as needed.\n * @part drag-handle - the drag handle when `dragEnabled` is true.\n */\n@Component({\n  tag: 'market-row',\n  shadow: {\n    delegatesFocus: true,\n  },\n  styleUrl: './styles/market-row.css',\n})\nexport class MarketRow {\n  @State() slottedControlEl: TMarketRowValidControlElement;\n\n  @Element() el: HTMLMarketRowElement;\n\n  /**\n   * Whether the row is currently selected. Used by `<market-list>` and `<market-select>`.\n   * Also sets the selection state for slotted controls (`<market-checkbox>`, `<market-radio>`, or `<market-toggle>`),\n   * if present.\n   */\n  @Prop({ mutable: true, reflect: true }) selected: boolean = false;\n\n  /**\n   * The value for the row.\n   */\n  @Prop({ reflect: true }) readonly value: string;\n\n  /**\n   * Whether the row is disabled.\n   * Also disables slotted controls (`<market-checkbox>`, `<market-radio>`, or `<market-toggle>`), if present.\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Determines the form factor of the row.\n   */\n  @Prop({ reflect: true }) readonly size: 'small' | 'medium' = 'medium';\n\n  /**\n   * Whether or not the row is interactive. Results in rows receiving hover\n   * and active styling when hovered/clicked.\n   *\n   * Automatically set to `true` when using the drill variant\n   * or passing in a slotted control (checkbox/radio/toggle).<br>\n   *\n   * Automatically be set to reflect the list's `interactive`\n   * value if used inside of `<market-list>`.\n   */\n  @Prop({ reflect: true, mutable: true }) interactive: boolean = false;\n\n  /**\n   * When set to `true`, rows will not persist selected state on click.\n   * Only takes effect when `interactive` is true.\n   */\n  @Prop({ reflect: true, mutable: true }) transient: boolean = false;\n\n  /**\n   * By default, row selection is toggled on click. There are some cases, such\n   * as selects, where we instead want the row to stay active on subsequent\n   * clicks. Setting `togglable` to `false` enables this behavior. Can be set\n   * by `<market-list>` and `<market-select>`.\n   */\n  @Prop() readonly togglable: boolean = true;\n\n  /**\n   * The style of row you want to use. The default is \"regular\", which allows\n   * you to optionally slot a checkbox, radio, or (in the future) toggle control.\n   * The other option is \"drill\", which functions more like a link that you can\n   * use to drill through a series of action card sets.\n   */\n  @Prop() readonly variant: 'regular' | 'drill' = 'regular';\n\n  /**\n   * Gives the row destructive styling.\n   */\n  @Prop({ reflect: true }) readonly destructive: boolean = false;\n\n  /**\n   * Whether the slotted control appears to the left or right of the main content.\n   */\n  @Prop() readonly controlPosition: 'trailing' | 'leading' = 'trailing';\n\n  /**\n   * A link that this row should navigate to on click.\n   * If this property is set, an anchor tag will be rendered.\n   */\n  @Prop() readonly href: string | undefined;\n\n  /**\n   * Specifies where to display the linked URL.\n   * Only applies when an `href` is provided.\n   * See [here](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target) for details on accepted values.\n   */\n  @Prop() readonly target: '_blank' | '_self' | '_parent' | '_top' | undefined;\n\n  /**\n   * Whether the row is drag & drop enabled\n   */\n  @Prop({ reflect: true }) readonly dragEnabled: boolean = false;\n\n  /**\n   * Whether the drag handle appears to the left or right.\n   */\n  @Prop({ reflect: true }) readonly dragHandlePosition: 'leading' | 'trailing' = 'trailing';\n\n  /**\n   * Fired whenever a row is selected.\n   */\n  @Event({ bubbles: true, composed: true }) marketRowSelected: EventEmitter<TMarketRowSelectedEventDetail>;\n\n  /**\n   * Fired whenever a row is deselected.\n   */\n  @Event({ bubbles: true, composed: true }) marketRowDeselected: EventEmitter<TMarketRowDeselectedEventDetail>;\n\n  @State() hasSideText: boolean = false;\n\n  /**\n   * If a control gets slotted in, set the value to match that of the row\n   */\n  @Watch('selected')\n  selectedWatcher(newValue: boolean) {\n    // prevent the row from being selected if it is transient\n    const selected = newValue && this.transient ? false : newValue;\n    this.selected = selected;\n    this.slottedControlEl?.setSelection(selected);\n  }\n\n  /**\n   * If a control gets slotted in, set the value to match that of the row\n   */\n  @Watch('disabled')\n  disabledWatcher(newValue: typeof this.disabled) {\n    this.slottedControlEl?.setDisabled(newValue);\n  }\n\n  /**\n   * Link rows should not be selectable\n   */\n  @Watch('href')\n  hrefWatcher(newValue: typeof this.href) {\n    if (!isEmpty(newValue)) {\n      this.transient = true;\n    }\n  }\n\n  /**\n   * Drill rows are interactive and transient\n   */\n  @Watch('variant')\n  variantWatcher(newValue: typeof this.variant) {\n    if (newValue === 'drill') {\n      this.interactive = true;\n      this.transient = true;\n    }\n  }\n\n  /**\n   * @internal\n   * @private\n   *\n   * Used for setting the selection state to true without emiting the `marketRowSelected` event.\n   */\n  @Method()\n  async silentlySelect() {\n    this.selected = true;\n    return Promise.resolve();\n  }\n\n  /**\n   * @internal\n   * @private\n   *\n   * Used for setting the selection state to false without emiting the `marketRowDeselected` event.\n   */\n  @Method()\n  async silentlyDeselect() {\n    this.selected = false;\n    return Promise.resolve();\n  }\n\n  /**\n   * @internal\n   * @private\n   *\n   * Used for manually setting `selected` to true. Generally speaking, it\n   * is preferable to avoid using this method and allow `market-row` to\n   * manage its own selection state based on user interaction. It should only\n   * be used for parent components that need to manage a group of rows, such as\n   * `market-list`.\n   */\n  @Method()\n  select() {\n    this.selected = true;\n    const { defaultPrevented } = this.marketRowSelected.emit({ value: this.value });\n    if (defaultPrevented) {\n      this.selected = false;\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * @internal\n   * @private\n   *\n   * Used for manually setting `selected` to false. Generally speaking, it\n   * is preferable to avoid using this method and allow `market-row` to\n   * manage its own selection state based on user interaction. It should only\n   * be used for parent components that need to manage a group of rows, such as\n   * `market-list`.\n   */\n  @Method()\n  deselect() {\n    this.selected = false;\n    const { defaultPrevented } = this.marketRowDeselected.emit({ value: this.value });\n    if (defaultPrevented) {\n      this.selected = true;\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * @internal\n   * @private\n   *\n   * Used for toggling the row's selected state.\n   */\n  @Method()\n  toggle() {\n    return !this.selected ? this.select() : this.deselect();\n  }\n\n  handleControlSlotChange() {\n    this.querySlots();\n    if (this.slottedControlEl) {\n      this.interactive = true;\n      this.selectedWatcher(this.selected);\n      this.disabledWatcher(this.disabled);\n\n      const slottedControlLabel = this.el.querySelector('[slot=\"label\"]')?.textContent;\n      this.slottedControlEl.setAttribute('aria-label', slottedControlLabel);\n    }\n  }\n\n  setControlActive(value: boolean) {\n    this.slottedControlEl?.setActive?.(value);\n  }\n\n  setControlHover(value: boolean) {\n    this.slottedControlEl?.setHover?.(value);\n  }\n\n  async handleClick(e: MouseEvent) {\n    // clicks on links inside row content shouldn't select the row itself\n    if (\n      this.disabled ||\n      this.transient ||\n      !this.interactive ||\n      (e.target as Element).tagName === 'A' ||\n      (e.target as Element).tagName === 'BUTTON' ||\n      (e.target as Element).tagName === getNamespacedTagFor('market-button').toUpperCase() ||\n      (e.target as Element).tagName === getNamespacedTagFor('market-link').toUpperCase()\n    ) {\n      return;\n    }\n\n    if (this.togglable) {\n      await this.toggle();\n    } else if (!this.selected) {\n      await this.select();\n    }\n\n    // fixes a weird UI bug where the row keeps its focus when clicked using a mouse\n    if (e.type === 'click' && (e as PointerEvent).pointerType === 'mouse') {\n      this.el.blur();\n    }\n  }\n\n  handleKeydown(e: KeyboardEvent) {\n    // don't intercept keydown of descendant elements\n    // e.g. when typing into nested input fields (gross)\n    if (e.target !== this.el) {\n      return;\n    }\n\n    if (e.key === ' ') {\n      e.preventDefault(); // spacebar should not scroll page\n      this.el.click();\n    }\n\n    if (e.key === 'Enter') {\n      this.el.click();\n    }\n  }\n\n  // market drag utils\n  drag: Draggable;\n\n  async onDragStart(e: CustomEvent<TMarketDragCoords>) {\n    e.stopPropagation();\n    const { el, dragHandlePosition } = this;\n    const coords: TMarketDragCoords = e.detail;\n    const anchor = dragHandlePosition === 'leading' ? 'left' : 'right';\n    const drag = new Draggable(el, { anchor });\n    this.drag = drag;\n    await drag.start(coords);\n  }\n\n  onDragMove(e: CustomEvent<TMarketDragCoords>) {\n    e.stopPropagation();\n    const coords: TMarketDragCoords = e.detail;\n    this.drag.move(coords);\n  }\n\n  async onDragEnd(e: CustomEvent<TMarketDragCoords>) {\n    e.stopPropagation();\n    const coords: TMarketDragCoords = e.detail;\n    await this.drag.end(coords);\n    this.drag.destroy();\n  }\n\n  checkIfSideTextIsPresent() {\n    const sideTextEl = this.el.querySelector('[slot=\"side-label\"], [slot=\"side-subtext\"]');\n    this.hasSideText = Boolean(sideTextEl);\n  }\n\n  querySlots() {\n    this.slottedControlEl = [...this.el.querySelectorAll('[slot=\"control\"]')].find(isValidRowControl);\n    this.checkIfSideTextIsPresent();\n  }\n\n  determineRowRole() {\n    // Should only apply an a11y role if the row acts as a button.\n    // Links are covered with the anchor tag, and option roles are handled by market-list.\n    if (this.interactive && this.transient && !this.href) {\n      return 'button';\n    }\n    return undefined;\n  }\n\n  connectedCallback() {\n    this.querySlots();\n\n    this.selectedWatcher(this.selected);\n    this.disabledWatcher(this.disabled);\n    this.hrefWatcher(this.href);\n    this.variantWatcher(this.variant);\n  }\n\n  componentWillLoad() {\n    this.checkIfSideTextIsPresent();\n  }\n\n  async componentDidUpdate() {\n    // remove preload class (used to manage slotted control transitions)\n    if (this.el.classList.contains('preload')) {\n      await asyncRequestAnimationFrame();\n      this.el.classList.remove('preload');\n    }\n  }\n\n  render() {\n    const {\n      controlPosition,\n      disabled,\n      href,\n      interactive,\n      selected,\n      slottedControlEl,\n      target,\n      variant,\n      hasSideText,\n      dragEnabled,\n      dragHandlePosition,\n      size,\n      el,\n    } = this;\n\n    /*\n     * a11y: If the row has a slotted control, we want to tab directly to the inner control element.\n     * Doing this ensures we don't violate the \"no nested interactive\" rule:\n     * https://dequeuniversity.com/rules/axe/html/4.3/nested-interactive\n     */\n    const tabindex = interactive && !disabled && !slottedControlEl ? '0' : null;\n    const ContainerTag: string = href === undefined ? 'div' : 'a';\n    const ContainerTagAttrs = ContainerTag === 'a' ? { href, target } : {};\n    ContainerTagAttrs['role'] = this.determineRowRole();\n    const leadingControl = controlPosition === 'leading';\n\n    const MarketDragHandleTagName = getNamespacedTagFor('market-drag-handle');\n    const MarketIconTagName = getNamespacedTagFor('market-icon');\n    const drillIconName = size === 'small' ? ROW_SMALL_SIZE_CARET_ICON_ASSET : ROW_MEDIUM_SIZE_CARET_ICON_ASSET;\n\n    return (\n      <Host\n        tabindex={tabindex}\n        aria-selected={el.role === 'option' ? Boolean(selected).toString() : undefined}\n        class={classNames('market-row', 'preload', {\n          'has-slotted-control': typeof slottedControlEl !== 'undefined',\n          'has-leading-control': leadingControl,\n        })}\n        onMouseDown={() => this.setControlActive(true)}\n        onMouseUp={() => this.setControlActive(false)}\n        onMouseEnter={() => this.setControlHover(true)}\n        onMouseLeave={() => this.setControlHover(false)}\n        onClick={(e: MouseEvent) => this.handleClick(e)}\n        onKeydown={(e: KeyboardEvent) => this.handleKeydown(e)}\n        onMarketDragHandleDragStart={(e: CustomEvent<TMarketDragCoords>) => this.onDragStart(e)}\n        onMarketDragHandleDragMove={(e: CustomEvent<TMarketDragCoords>) => this.onDragMove(e)}\n        onMarketDragHandleDragEnd={(e: CustomEvent<TMarketDragCoords>) => this.onDragEnd(e)}\n      >\n        <ContainerTag part=\"container\" class=\"container\" tabindex={tabindex} {...ContainerTagAttrs}>\n          {dragEnabled && dragHandlePosition === 'leading' && (\n            <MarketDragHandleTagName part=\"drag-handle\"></MarketDragHandleTagName>\n          )}\n          {leadingControl && <slot name=\"control\" onSlotchange={() => this.handleControlSlotChange()}></slot>}\n          <slot name=\"leading-accessory\"></slot>\n          <div class=\"main\" part=\"main\">\n            <slot name=\"label\"></slot>\n            <slot name=\"subtext\"></slot>\n            <slot></slot>\n          </div>\n          <div part=\"side\" class={classNames('side', { hidden: !hasSideText })}>\n            <slot name=\"side-label\" onSlotchange={() => this.checkIfSideTextIsPresent()}></slot>\n            <slot name=\"side-subtext\" onSlotchange={() => this.checkIfSideTextIsPresent()}></slot>\n          </div>\n          <slot name=\"trailing-accessory\"></slot>\n          {variant === 'regular' && !leadingControl && (\n            <slot name=\"control\" onSlotchange={() => this.handleControlSlotChange()}></slot>\n          )}\n\n          {variant === 'drill' && <MarketIconTagName class=\"drill-icon\" name={drillIconName}></MarketIconTagName>}\n          {dragEnabled && dragHandlePosition === 'trailing' && (\n            <MarketDragHandleTagName part=\"drag-handle\"></MarketDragHandleTagName>\n          )}\n        </ContainerTag>\n      </Host>\n    );\n  }\n}\n"],"version":3}