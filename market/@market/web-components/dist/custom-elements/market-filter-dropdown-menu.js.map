{"file":"market-filter-dropdown-menu.js","mappings":"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","names":["MarketFilterDropdownMenu"],"sources":["src/components/market-filter-group/subcomponents/market-filter-dropdown-menu/market-filter-dropdown-menu.css?tag=market-filter-dropdown-menu&encapsulation=shadow","src/components/market-filter-group/subcomponents/market-filter-dropdown-menu/market-filter-dropdown-menu.tsx"],"sourcesContent":["@import \"../../../../styles/mixins/component-base.css\";\n@import \"../../../../styles/mixins/typography.css\";\n\n::slotted([slot=\"filter-title\"]) {\n  @extend %heading-20;\n}\n\n/**\n * Temporary container so we don't \"flash\" filters that are being moved around\n * But we don't want to set `display: none` nor `width: 0`\n * since we need to measure the filters' widths\n */\n.overflow-filters {\n  overflow: hidden;\n  height: 0;\n}\n\n.popover {\n  display: flex;\n  flex-direction: column;\n}\n\n.selection-header::part(heading) {\n  /* TODO: add design token */\n  --filter-overflow-heading-margin-top-size: var(--core-metrics-spacing-200);\n\n  margin-top: var(--filter-overflow-heading-margin-top-size);\n}\n\n/* width + negative left and right margin added to offset the native scrollbars */\n.filter-options-container {\n  /* TODO: add design token */\n  --filter-overflow-filter-options-container-margin-top-size: var(--core-metrics-spacing-100);\n\n  display: flex;\n  flex: 1;\n  overflow-y: auto;\n  width:\n    calc(\n      100% +\n      var(--modal-popover-wide-viewport-padding-left-size) +\n      var(--modal-popover-wide-viewport-padding-right-size)\n    );\n  margin:\n    var(--filter-overflow-filter-options-container-margin-top-size)\n    calc(var(--modal-popover-wide-viewport-padding-right-size) * -1)\n    calc(var(--modal-popover-wide-viewport-padding-bottom-size) * -1)\n    calc(var(--modal-popover-wide-viewport-padding-left-size) * -1);\n  padding-left: var(--modal-popover-wide-viewport-padding-left-size);\n\n  ::slotted(.market-list[slot=\"filter-options\"]) {\n    width: calc(100% - var(--modal-popover-wide-viewport-padding-right-size));\n\n    /* acts as the bottom padding within the scrollable content */\n    &::after {\n      content: \"\";\n      display: block;\n      width: 100%;\n      height: var(--core-metrics-spacing-100);\n    }\n  }\n\n  ::slotted(.market-date-picker[slot=\"filter-options\"]) {\n    width: auto;\n    min-width: var(--date-picker-minimum-width);\n    padding-right: var(--modal-popover-wide-viewport-padding-right-size);\n\n    /* acts as the bottom padding within the scrollable content */\n    &::after {\n      content: \"\";\n      display: block;\n      width: 100%;\n      height: var(--core-metrics-spacing-300);\n    }\n  }\n\n  ::slotted(.market-date-picker[slot=\"filter-options\"][display-menu]) {\n    height: calc(100%);\n  }\n}\n","import { Component, Element, Fragment, Host, h, Listen, Prop, State } from '@stencil/core';\n\nimport { classNames } from '../../../../utils/classnames';\nimport { getNamespacedTagFor } from '../../../../utils/namespace';\nimport { TMarketDateRangeChangedEventDetail } from '../../../market-date-picker/events';\nimport { TMarketListSelectionsDidChangeEventDetail } from '../../../market-list/events';\nimport { isValueEmpty } from '../../../market-list/utils';\n\n/**\n * @slot search - Search input, using `<market-input-search>`\n * @slot filters - Filters, using `<market-filter>`\n * @slot settings - Filter settings, using `<market-filter>`\n * @slot visible-filters - INTERNAL ONLY: Used by `<market-filter-group>` when programmatically arranging visible vs overflow\n * buttons based on available space.\n */\n@Component({\n  tag: 'market-filter-dropdown-menu',\n  styleUrl: 'market-filter-dropdown-menu.css',\n  shadow: true,\n})\nexport class MarketFilterDropdownMenu {\n  @Element() el: HTMLMarketFilterDropdownMenuElement;\n\n  /**\n   * The `<market-filter>` elements\n   */\n  private filterEls: HTMLMarketFilterElement[];\n\n  /**\n   * The filter rows\n   */\n  private filterRowEls: HTMLMarketRowElement[];\n\n  /**\n   * String for setting filter button size\n   */\n  @Prop({ reflect: true }) readonly size: 'medium' | 'small' = 'medium';\n\n  /**\n   * Display the number of filters with a selected value as feedback\n   */\n  @State() private filtersWithSelectedValue: number;\n\n  /**\n   * Active filter's `name` prop\n   */\n  @State() private hasSelectedFilter: boolean;\n\n  /**\n   * Is market-dropdown active\n   */\n  @State() private isDropdownActive: boolean;\n\n  /**\n   * Handle `marketDropdownOpened` emitted by `<market-dropdown>`\n   */\n  @Listen('marketDropdownOpened')\n  handleDropdownOpened(e: CustomEvent<void>) {\n    if (e.target !== this.el) return;\n    this.deselectFilter();\n    this.isDropdownActive = true;\n  }\n\n  /**\n   * Handle `marketDropdownClosed` emitted by `<market-dropdown>`\n   */\n  @Listen('marketDropdownClosed')\n  handleDropdownClosed(e: CustomEvent<void>) {\n    if (e.target !== this.el) return;\n    this.isDropdownActive = false;\n  }\n\n  /**\n   * Handle `marketHeaderNavigate` emitted by `<market-button>` when clicking the back button\n   */\n  @Listen('marketHeaderNavigate')\n  handleHeaderNavigate() {\n    this.deselectFilter();\n  }\n\n  /**\n   * Deselect filter\n   */\n  private deselectFilter() {\n    this.hasSelectedFilter = false;\n  }\n\n  /**\n   * Handle overflow-filters slot change\n   */\n  private handleOverflowFiltersSlotChange() {\n    this.filterEls = this.el\n      .querySelector<HTMLSlotElement>('[slot=\"overflow-filters\"]')\n      .assignedNodes() as HTMLMarketFilterElement[];\n\n    // create <market-row>s; and calculate how many filters have set `values`\n    this.createRowsFromFilters();\n    this.calculateFiltersWithSelectedValue();\n  }\n\n  /**\n   * Create rows from filter slots\n   */\n  private createRowsFromFilters() {\n    // no more filters, remove rows if they exist\n    if (!this.filterEls?.length) {\n      this.filterRowEls?.forEach((filterRowEl) => {\n        filterRowEl.remove();\n      });\n      return;\n    }\n\n    const filterRowElsByValue: { [value: string]: HTMLMarketRowElement } = (this.filterRowEls ?? []).reduce(\n      (result, rowEl) => {\n        result[rowEl.value] = rowEl;\n        return result;\n      },\n      {},\n    );\n    const filterNames = new Set<string>();\n    const rowsByName: { [key: string]: HTMLMarketRowElement } = {};\n\n    this.filterEls.forEach((filterEl) => {\n      const name = filterEl.name;\n      filterNames.add(name);\n\n      const currentRowEl = filterRowElsByValue[name];\n      if (currentRowEl) {\n        // recycle filter row with the same name if it exists\n        rowsByName[name] = currentRowEl;\n      } else {\n        // create new row element\n        const newRowEl = document.createElement(getNamespacedTagFor('market-row')) as HTMLMarketRowElement;\n        newRowEl.variant = 'drill';\n        newRowEl.interactive = true;\n        newRowEl.transient = true;\n        newRowEl.value = name;\n        newRowEl.size = this.size;\n        newRowEl.addEventListener('click', async () => {\n          await this.handleFilterSelection(newRowEl);\n        });\n        rowsByName[name] = newRowEl;\n      }\n\n      // create the row label\n      const label = rowsByName[name]?.querySelector('label');\n      label?.remove();\n      const filterLabelEl = filterEl.querySelector('label');\n      if (filterLabelEl) {\n        rowsByName[name].appendChild(filterLabelEl.cloneNode(true));\n      }\n\n      // disable the row if the filter is disabled\n      if (filterEl.disabled) {\n        rowsByName[name].disabled = true;\n      }\n\n      // assign the slot\n      rowsByName[name].setAttribute('slot', 'filter-row');\n    });\n\n    // remove rows that should not exist anymore\n    this.filterRowEls?.forEach((filterRowEl) => {\n      if (!filterNames.has(filterRowEl.value)) {\n        filterRowEl.remove();\n      }\n    });\n\n    // add the new rows to the DOM\n    this.filterRowEls = [...this.filterEls].map(({ name }) => rowsByName[name]);\n    this.filterRowEls.forEach((filterRowEl) => {\n      filterRowEl.setAttribute('slot', 'filter-rows');\n      this.el.appendChild(filterRowEl);\n    });\n  }\n\n  /**\n   * When a filter is selected, the popover content will show\n   * the selected filter's title and list selection\n   */\n  private async handleFilterSelection(rowEl: HTMLMarketRowElement) {\n    const value = rowEl.value;\n    this.hasSelectedFilter = true;\n\n    const filterEl: HTMLMarketFilterElement = this.filterEls.find((filterEl) => filterEl.name === value);\n\n    // clone the label\n    const labelEl = filterEl.querySelector('label');\n    const clonedLabelEl = labelEl.cloneNode(true) as HTMLLabelElement;\n    clonedLabelEl.setAttribute('slot', 'filter-title');\n\n    this.el.querySelector('[slot=\"filter-title\"]')?.remove();\n    this.el.appendChild(clonedLabelEl);\n\n    switch (await filterEl.getFilterType()) {\n      case 'date': {\n        // clone the date picker\n        const datePickerEl = filterEl.querySelector<HTMLMarketDatePickerDateElement>(\n          getNamespacedTagFor('market-date-picker'),\n        );\n        const clonedDatePickerEl = datePickerEl.cloneNode(true) as HTMLMarketDatePickerElement;\n        clonedDatePickerEl.setAttribute('slot', 'filter-options');\n        clonedDatePickerEl.addEventListener(\n          'marketDateRangeChanged',\n          (e: CustomEvent<TMarketDateRangeChangedEventDetail>) => {\n            this.handleDatePickerFilterSelection(e, filterEl);\n          },\n        );\n\n        this.el.querySelector('[slot=\"filter-options\"]')?.remove();\n        this.el.appendChild(clonedDatePickerEl);\n        break;\n      }\n      case 'list': {\n        // clone the list\n        const listEl = filterEl.querySelector<HTMLMarketListElement>(getNamespacedTagFor('market-list'));\n        const clonedListEl = listEl.cloneNode(true) as HTMLMarketListElement;\n        clonedListEl.setAttribute('slot', 'filter-options');\n        clonedListEl.addEventListener(\n          'marketListSelectionsDidChange',\n          (e: CustomEvent<TMarketListSelectionsDidChangeEventDetail>) => {\n            this.handleListFilterSelection(e, filterEl, listEl);\n          },\n        );\n\n        clonedListEl.setAttribute('interactive', '');\n        listEl.multiselect && clonedLabelEl.setAttribute('multiselect', '');\n\n        this.el.querySelector('[slot=\"filter-options\"]')?.remove();\n        this.el.appendChild(clonedListEl);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  private async handleDatePickerFilterSelection(\n    e: CustomEvent<TMarketDateRangeChangedEventDetail>,\n    filterEl: HTMLMarketFilterElement,\n  ) {\n    const { startDate, endDate } = e.detail;\n\n    await filterEl.__setAndEmitDatePickerValue({ startDate, endDate });\n\n    // after selecting, recalculate what we display as feedback\n    this.calculateFiltersWithSelectedValue();\n  }\n\n  private async handleListFilterSelection(\n    e: CustomEvent<TMarketListSelectionsDidChangeEventDetail>,\n    filterEl: HTMLMarketFilterElement,\n    listEl: HTMLMarketListElement,\n  ) {\n    // set the filter value, then automatically deselect if the list is not multiselect\n    const { currentSelectionValues } = e.detail;\n\n    await filterEl.__setAndEmitListValue(currentSelectionValues);\n    if (!listEl.multiselect) {\n      this.deselectFilter();\n    }\n\n    // after selecting, recalculate what we display as feedback\n    this.calculateFiltersWithSelectedValue();\n  }\n\n  /**\n   * Count how many filters with selected value\n   * and that count is displayed as feedback.\n   */\n  private calculateFiltersWithSelectedValue() {\n    this.filtersWithSelectedValue = [...(this.filterEls || [])].reduce((count, filterEl) => {\n      const list = filterEl.querySelector<HTMLMarketListElement>(getNamespacedTagFor('market-list'));\n      if (!isValueEmpty(list?.value)) {\n        return count + 1;\n      }\n      const datePicker = filterEl.querySelector<HTMLMarketDatePickerElement>(getNamespacedTagFor('market-date-picker'));\n      if (datePicker?.selectedStartDate) {\n        return count + 1;\n      }\n      return count;\n    }, 0);\n  }\n\n  componentDidLoad() {\n    this.handleOverflowFiltersSlotChange();\n  }\n\n  render() {\n    const { filtersWithSelectedValue, handleOverflowFiltersSlotChange, hasSelectedFilter, isDropdownActive, size } =\n      this;\n\n    const MarketButtonTagName = getNamespacedTagFor('market-button');\n    const MarketDropdownTagName = getNamespacedTagFor('market-dropdown');\n    const MarketFilterButtonTagName = getNamespacedTagFor('market-filter-button');\n    const MarketHeaderTagName = getNamespacedTagFor('market-header');\n    const MarketListTagName = getNamespacedTagFor('market-list');\n    const MarketPopoverTagName = getNamespacedTagFor('market-popover');\n    const MarketAccessoryTagName = getNamespacedTagFor('market-accessory');\n\n    return (\n      <Host class={classNames('market-filter-dropdown-menu', { 'show-options': hasSelectedFilter })}>\n        <MarketDropdownTagName interaction=\"persistent\" popoverPlacement=\"bottom-end\">\n          <MarketFilterButtonTagName active={isDropdownActive} iconOnly size={size} slot=\"trigger\">\n            {filtersWithSelectedValue && <span slot=\"feedback\">{filtersWithSelectedValue}</span>}\n          </MarketFilterButtonTagName>\n          <MarketPopoverTagName class=\"popover\" slot=\"popover\">\n            {!hasSelectedFilter ? (\n              <MarketListTagName class=\"filter-list\" interactive>\n                <slot name=\"filter-rows\"></slot>\n              </MarketListTagName>\n            ) : (\n              <Fragment>\n                <MarketHeaderTagName class=\"selection-header\">\n                  <MarketButtonTagName rank=\"secondary\" size=\"small\" slot=\"navigation\">\n                    <MarketAccessoryTagName slot=\"icon\">\n                      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                          fill-rule=\"evenodd\"\n                          clip-rule=\"evenodd\"\n                          d=\"M4.29289 11.293C3.90237 11.6835 3.90237 12.3167 4.29289 12.7072L11.2929 19.7072L12.7071 18.293L7.41421 13.0001L19 13.0001V11.0001L7.41421 11.0001L12.7071 5.70718L11.2929 4.29297L4.29289 11.293Z\"\n                        />\n                      </svg>\n                    </MarketAccessoryTagName>\n                  </MarketButtonTagName>\n                  <slot name=\"filter-title\"></slot>\n                </MarketHeaderTagName>\n                <div class=\"filter-options-container\">\n                  <slot name=\"filter-options\"></slot>\n                </div>\n              </Fragment>\n            )}\n          </MarketPopoverTagName>\n        </MarketDropdownTagName>\n        {/**\n         * This is an invisible container where overflow filters are initially.\n         * Then they are \"moved\" to [slot=\"filter-rows\"] as <market-row>s\n         */}\n        <div class=\"overflow-filters\">\n          <slot name=\"overflow-filters\" onSlotchange={handleOverflowFiltersSlotChange.bind(this)}></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}