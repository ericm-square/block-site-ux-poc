{"file":"market-table-cell.js","mappings":"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","names":["MarketTableCell"],"sources":["src/components/market-table-cell/market-table-cell.css?tag=market-table-cell&encapsulation=shadow","src/components/market-table-cell/market-table-cell.tsx"],"sourcesContent":["/* TODO: add design tokens for table components */\n\n@import \"../../styles/mixins/tables.css\";\n\n:host {\n  --transition-duration: 0.2s; /* TODO: design token when design finalizes spec */\n\n  @extend %table-cell;\n\n  transition: background-color var(--transition-duration);\n\n  @media (hover: hover) {\n    /* media query is to suppress hover styles on mobile devices */\n    &([interactive]:hover) {\n      background-color: var(--table-cell-hover-state-background-color);\n    }\n  }\n\n  &([interactive]) {\n    cursor: pointer;\n  }\n\n  &([interactive]:focus) {\n    outline: none; /* override default browser focus styles */\n  }\n\n  &([interactive]:not([disabled]):focus) {\n    background-color: var(--table-cell-focus-state-background-color);\n  }\n\n  &([active]),\n  &([interactive]:not([disabled]):active) {\n    background-color: var(--table-cell-pressed-state-background-color);\n  }\n\n  &([interactive][disabled]) {\n    pointer-events: none;\n  }\n\n  &([disabled]) {\n    background-color: transparent;\n    color: var(--table-cell-disabled-state-text-color);\n    pointer-events: none;\n  }\n\n  &([hidden]) {\n    display: none;\n  }\n}\n\n:host(:first-of-type) {\n  padding-left: var(--table-cell-padding, 8px);\n\n  ::slotted(button) {\n    /* TODO: These should have design tokens in the future */\n    all: unset;\n    display: flex; /* stylelint-disable-line order/properties-order */\n    justify-content: space-between;\n    align-items: center;\n    padding-right: var(--core-metrics-spacing-100);\n    padding-left:\n      calc(\n        var(--cell-indent-level) *\n        var(--table-row-indentation-padding, 40px) +\n        var(--core-metrics-spacing-100)\n      );\n    color: var(--table-cell-normal-state-content-color, var(--core-fill-black-color));\n    cursor: pointer;\n\n    &:focus-visible {\n      outline: none;\n    }\n\n    &:focus {\n      color: var(--table-accordion-focus-state-content-color, var(--core-fill-black-color));\n    }\n\n    &:hover {\n      color: var(--table-accordion-hover-state-content-color, var(--core-fill-black-color));\n    }\n\n    &:active {\n      color: var(--table-accordion-pressed-state-content-color, var(--core-fill-black-color));\n    }\n  }\n\n  ::slotted([slot=\"nested-row-indicator\"]) {\n    height: 100%;\n  }\n}\n\n/* TODO: update pixels to variables once they exist */\n::slotted([slot=\"leading-accessory\"][size=\"image\"]) {\n  margin-right: 16px;\n  margin-left: 12px;\n}\n\n::slotted([slot=\"leading-accessory\"][size=\"icon\"]) {\n  margin-right: 16px;\n  margin-left: 16px;\n}\n\n::slotted([slot=\"trailing-accessory\"][size=\"image\"]) {\n  margin-right: 12px;\n  margin-left: 16px;\n}\n\n::slotted([slot=\"trailing-accessory\"][size=\"icon\"]) {\n  margin-right: 16px;\n  margin-left: 16px;\n}\n\n::slotted([slot=\"nested-row-indicator\"]) {\n  color: var(--table-cell-normal-state-content-color, var(--core-fill-black-color));\n}\n\n::slotted([slot=\"nested-row-indicator\"]:focus-visible) {\n  outline: none;\n}\n\n::slotted([slot=\"nested-row-indicator\"]:focus) {\n  color: var(--table-accordion-focus-state-content-color, var(--core-fill-black-color));\n}\n\n::slotted([slot=\"nested-row-indicator\"]:hover) {\n  color: var(--table-accordion-hover-state-content-color, var(--core-fill-black-color));\n}\n\n::slotted([slot=\"nested-row-indicator\"]:active) {\n  color: var(--table-accordion-pressed-state-content-color, var(--core-fill-black-color));\n}\n","import { Component, Host, Prop, Element, Event, EventEmitter, State, Method, h } from '@stencil/core';\n\n/**\n * @slot - Default slot for content\n * @slot leading-accessory - Intended for use with a leading accessory.\n * @slot trailing-accessory - Intended for use with a trailing accessory.\n */\n@Component({\n  tag: 'market-table-cell',\n  styleUrl: 'market-table-cell.css',\n  shadow: true,\n})\nexport class MarketTableCell {\n  @Element() el: HTMLMarketTableCellElement;\n\n  /**\n   * Content/text alignment for this cell, default is set based on the alignment of the\n   * market-table-column with matching column/name prop\n   *\n   * **NOTE:** this is set automatically when used in a `market-table` with a corresponding\n   * `market-table-column`.\n   */\n  @Prop({ mutable: true, reflect: false }) align: false | 'left' | 'right' = false;\n\n  /**\n   * A key that matches the 'name' prop on the appropriate market-table-column\n   *\n   * **NOTE:** this is set automatically when used in a `market-table` with a corresponding\n   * `market-table-column`.\n   */\n  @Prop({ mutable: true, reflect: true }) column: string;\n\n  /**\n   * Determines how much to indent the cell by.\n   * This will be multiplied by the default indentation size (40px) for uniform indentation levels\n   *\n   * **NOTE:** this is inherited automatically if set on the parent `market-table-row`.\n   */\n  @Prop({ mutable: true, reflect: false }) leadingIndentation: number = 0;\n\n  /**\n   * Whether the cell is currently active.\n   */\n  @Prop({ reflect: true }) readonly active: boolean = false;\n\n  /**\n   * Whether or not the cell is interactive. Results in cell receiving\n   * hover and active styling when hovered/clicked.\n   */\n  @Prop({ reflect: true }) readonly interactive: boolean = false;\n\n  /**\n   * Whether the cell is disabled.\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Fired whenever an interactive cell is clicked.\n   */\n  @Event({ bubbles: true, composed: true }) marketTableCellClicked: EventEmitter;\n\n  /**\n   * The slot this element was originally placed in\n   */\n  @State() originalSlot: string;\n\n  /**\n   * Whether or not the table cell is hidden.\n   *\n   * **NOTE:** this is derived from the hidden prop of the corresponding\n   * `market-table-column`, if one exists\n   */\n  @State() hidden: boolean = false;\n\n  /**\n   * **INTERNAL [do not use directly]**\n   * Forwards appropriate properties from matching header market-table-column element to this cell.\n   */\n  @Method()\n  _updateColumnRelatedProperties(column: HTMLMarketTableColumnElement) {\n    if (!column) {\n      return Promise.resolve();\n    }\n\n    this.column = column.name;\n    this.align = column.align;\n    this.hidden = column.hidden;\n\n    if (column.stickTo) {\n      this._stickSelf(column.stickTo);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * **INTERNAL [do not use directly]**\n   * Sets properties specified in the row element. Leading and trailing\n   * accessories are best set on the first or last cell to not mess\n   * with the grid structure\n   * @param rowEl\n   */\n  @Method()\n  _updateFirstCellProperties(rowEl: HTMLMarketTableRowElement) {\n    this.leadingIndentation = rowEl.leadingIndentation || 0;\n\n    // Sets leading accessory level of indentation on current row\n    this.el.style.setProperty('--cell-indent-level', `${this.leadingIndentation}`);\n\n    return Promise.resolve();\n  }\n\n  /**\n   * **INTERNAL [do not use directly]**\n   * Moves this column into a slot inside the market-table-area\n   * which is fixed to the provided edge (position), allowing\n   * for fixed columns\n   */\n  @Method()\n  _stickSelf(position: 'left' | 'right') {\n    if (position) {\n      this.el.slot = `sticky-${position}`;\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * **INTERNAL [do not use directly]**\n   * Moves this column back into it's original slot from a slot\n   * within a fixed market-table-area\n   */\n  @Method()\n  _unstickSelf() {\n    if (!this.originalSlot) {\n      this.el.removeAttribute('slot');\n    } else {\n      this.el.slot = this.originalSlot;\n    }\n    return Promise.resolve();\n  }\n\n  componentWillLoad() {\n    this.originalSlot = this.el.getAttribute('slot');\n  }\n\n  handleClick() {\n    if (this.interactive) {\n      this.marketTableCellClicked.emit();\n    }\n  }\n\n  handleKeydown(e) {\n    // don't intercept keydown of descendant elements\n    // e.g. when typing into nested input fields (gross)\n    if (e.target !== this.el) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'Enter':\n        this.handleClick();\n        break;\n      case ' ':\n        this.handleClick();\n        e.preventDefault(); // spacebar should not scroll page\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { disabled, interactive, align, hidden } = this;\n\n    return (\n      <Host\n        class=\"market-table-cell\"\n        role=\"cell\"\n        align={align === 'right' && align}\n        hidden={hidden}\n        tabindex={interactive && !disabled ? '0' : null}\n        onClick={() => this.handleClick()}\n        onKeydown={(e) => this.handleKeydown(e)}\n      >\n        <slot name=\"nested-row-indicator\"></slot>\n        <slot name=\"leading-accessory\"></slot>\n        <slot></slot>\n        <slot name=\"trailing-accessory\"></slot>\n      </Host>\n    );\n  }\n}\n"],"version":3}