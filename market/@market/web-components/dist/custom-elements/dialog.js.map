{"file":"dialog.js","mappings":";;AAAA;;;;;;;;;;;MAaa,gBAAgB,GAAG,CAAC,YAAY,EAAE,eAAe,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAW;MAExF,YAAY,GAAG;IAC1B,YAAY,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;IAC5B,eAAe,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;IAC/B,KAAK,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;IACtB,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;IACtB,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;EACrB;MAEW,iBAAiB,GAAG,MAC/B,gBAAgB,CAAC,GAAG,CAAC,CAAC,IAAI;IACxB,OAAO,mBAAmB,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;SAiCC,yBAAyB,CAAC,KAAK;IAC7C,MAAM,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;IAChD,MAAM,MAAM,GAAG,KAAK,CAAC,aAAa,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC,CAAC;;IAGzE,IAAI,IAAI,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;QACrC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE;YAC9B,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;gBACtB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;oBACnB,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAgB,CAAC;oBAC9E,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;oBACtD,MAAM,UAAU,GACd,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;oBACjG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,UAAU,IAAI,CAAC;oBAC1C,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;iBACvB;aACF;iBAAM;gBACL,IAAI,MAAM,CAAC,OAAO,EAAE;oBAClB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;oBAC3B,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;iBACxB;aACF;SACF,CAAC,CAAC;KACJ;AACH;;;;","names":[],"sources":["src/utils/dialog.tsx"],"sourcesContent":["/**\n * [PR 29510](https://github.com/Microsoft/TypeScript/pull/29510), available in\n * TypeScript 3.4+, enables us to define the literal string union type\n * `DialogType` based on a readonly array of all possible values (`as const`\n * makes `ALL_DIALOG_TYPES` readonly). This is required to support refactoring\n * from enum to union type while also allowing us to enumerate all possible\n * values (see references of `ALL_DIALOG_TYPES` for use cases).\n *\n * Motivation for the refactor from enum to union type can be found in the\n * description for [PR 1554](https://github.com/squareup/market/pull/1554).\n */\nimport { getNamespacedTagFor } from './namespace';\n\nexport const ALL_DIALOG_TYPES = ['modal-full', 'modal-partial', 'blade', 'dialog', 'sheet'] as const;\n\nexport const DIALOGS_META = {\n  'modal-full': { veil: true },\n  'modal-partial': { veil: true },\n  blade: { veil: false },\n  dialog: { veil: true },\n  sheet: { veil: true },\n};\n\nexport const getDialogSelector = () =>\n  ALL_DIALOG_TYPES.map((type) => {\n    return getNamespacedTagFor(`market-${type}`);\n  }).join(',');\n\n// prettier wants (typeof ALL_DIALOG_TYPES)[number] but that change seems wrong\n// prettier-ignore\nexport type DialogType = typeof ALL_DIALOG_TYPES[number];\n\nexport type DialogElement =\n  | HTMLMarketDialogElement\n  | HTMLMarketBladeElement\n  | HTMLMarketModalFullElement\n  | HTMLMarketModalPartialElement\n  | HTMLMarketSheetElement;\n\nexport interface Dialog {\n  el: DialogElement;\n  type: DialogType;\n  id: string;\n  dialogID: string;\n  index: number;\n  indexOfType: number;\n}\n\nexport interface DialogDismissedEvent {\n  dialog: DialogElement;\n  type: DialogType;\n  origin: HTMLElement;\n}\n\nexport interface DialogLoadedEvent {\n  dialog: DialogElement;\n  type: DialogType;\n}\n\nexport function setupDialogCompactHandler(modal) {\n  const main = modal.querySelector('main, .main');\n  const header = modal.querySelector(getNamespacedTagFor('market-header'));\n\n  // Manage compact header on scroll unless it's already explicitly set\n  if (main && header && !header.compact) {\n    main.addEventListener('scroll', () => {\n      if (main.scrollTop > 0) {\n        if (!header.compact) {\n          const headingDiv = header.shadowRoot.querySelector('.heading') as HTMLElement;\n          const headingDivStyles = getComputedStyle(headingDiv);\n          const paddingTop =\n            Number.parseInt(headingDivStyles.height, 10) + Number.parseInt(headingDivStyles.marginTop, 10);\n          main.style.paddingTop = `${paddingTop}px`;\n          header.compact = true;\n        }\n      } else {\n        if (header.compact) {\n          main.style.paddingTop = '';\n          header.compact = false;\n        }\n      }\n    });\n  }\n}\n"],"version":3}