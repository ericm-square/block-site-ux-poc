{"file":"market-table-v2-cell.js","mappings":"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","names":["MarketTableV2Cell"],"sources":["src/components/market-checkbox/types.ts","src/components/market-toggle/types.ts","src/components/tables-v2/market-table-v2-cell/types.ts","src/components/tables-v2/market-table-v2-cell/market-table-v2-cell.css?tag=market-table-v2-cell&encapsulation=shadow","src/components/tables-v2/market-table-v2-cell/market-table-v2-cell.tsx"],"sourcesContent":["import { getNamespacedTagFor } from '../../utils/namespace';\n\nexport function isMarketCheckbox(value: unknown): value is HTMLMarketCheckboxElement {\n  const tagName = (value as HTMLElement)?.tagName?.toLowerCase();\n  return Boolean(value && tagName === getNamespacedTagFor('market-checkbox'));\n}\n","import { getNamespacedTagFor } from '../../utils/namespace';\n\nexport function isMarketToggle(value: unknown): value is HTMLMarketToggleElement {\n  const tagName = (value as HTMLElement)?.tagName?.toLowerCase();\n  return Boolean(value && tagName === getNamespacedTagFor('market-toggle'));\n}\n","import { isMarketCheckbox } from '../../market-checkbox/types';\nimport { isMarketToggle } from '../../market-toggle/types';\n\nexport type MarketTableV2ControlElement = HTMLMarketCheckboxElement | HTMLMarketToggleElement;\n\nexport function isMarketTableV2ControlElement(value: unknown): value is MarketTableV2ControlElement {\n  return isMarketCheckbox(value) || isMarketToggle(value);\n}\n",":host,\n* {\n  box-sizing: border-box;\n}\n\n:host {\n  --table-cell-vertical-padding-size: var(--core-metrics-spacing-150);\n  --table-cell-horizontal-padding-size: var(--core-metrics-spacing-100);\n  --table-cell-horizontal-spacing-size: var(--core-metrics-spacing-150);\n  --table-cell-border-width: 1px;\n  --table-cell-heading-border-color: var(--core-divider-10-color);\n  --table-cell-state-normal-background-color: var(--core-surface-10-color);\n  --table-cell-hover-state-background-color: var(--core-fill-50-color);\n  --table-cell-focus-state-background-color: var(--core-fill-50-color);\n  --table-cell-pressed-state-background-color: var(--core-emphasis-40-color);\n  --table-cell-disabled-state-text-color: var(--core-text-30-color);\n  --table-cell-indent-level: 0;\n  --table-cell-indent-size: var(--core-metrics-spacing-500);\n  --table-cell-caret-size: var(--core-metrics-spacing-500);\n  --table-cell-text-font-weight: var(--core-type-paragraph-20-weight);\n  --table-cell-text-font-size: var(--core-type-paragraph-20-size);\n  --table-cell-text-line-height: var(--core-type-paragraph-20-leading);\n  --table-cell-focus-ring-color: color-mix(in srgb, var(--core-focus-ring-color) 50%, transparent);\n\n  display: table-cell;\n  vertical-align: inherit;\n  width: auto;\n  padding: var(--table-cell-vertical-padding-size) var(--table-cell-horizontal-padding-size);\n  border-bottom: var(--table-cell-border-width) solid var(--table-cell-border-color);\n  outline: none;\n  font-weight: var(--table-cell-text-font-weight);\n  font-size: var(--table-cell-text-font-size);\n  line-height: var(--table-cell-text-line-height);\n  text-align: inherit;\n\n  .content-outer {\n    display: flex;\n    gap: var(--table-cell-horizontal-spacing-size);\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n\n    /* shrink the gaps between UI & inner content when dragged */\n    transition-timing-function: var(--core-animation-move-transition-easing);\n    transition-duration: var(--core-animation-move-transition-moderate-speed-duration);\n    transition-property: gap;\n  }\n\n  .content-inner {\n    display: flex;\n    gap: var(--table-cell-horizontal-spacing-size);\n    align-items: center;\n    width: 100%;\n  }\n\n  .default-slot {\n    width: 100%;\n  }\n\n  /* indented with NO caret */\n  &([indent]:not([indent=\"0\"])) {\n    padding-left:\n      calc(\n        var(--table-cell-horizontal-spacing-size) + var(--table-cell-indent-level) * var(--table-cell-indent-size)\n      );\n  }\n\n  /* indented with a caret */\n  &([indent][caret]:not([indent=\"0\"])) {\n    padding-left:\n      calc(\n        var(--table-cell-horizontal-padding-size) + var(--table-cell-indent-level) * var(--table-cell-indent-size)\n      );\n  }\n\n  &([nowrap]) {\n    .default-slot {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n  }\n\n  &([align=\"left\"]) {\n    text-align: left;\n  }\n  &([align=\"center\"]) {\n    text-align: center;\n  }\n  &([align=\"right\"]) {\n    text-align: right;\n  }\n\n  &([valign=\"top\"]) {\n    vertical-align: top;\n  }\n  &([valign=\"middle\"]) {\n    vertical-align: middle;\n  }\n  &([valign=\"bottom\"]) {\n    vertical-align: bottom;\n  }\n\n  /* these styles apply to sticky table columns,\n    which layer BELOW sticky table rows  */\n  &([sticky]) {\n    position: sticky;\n    z-index: 2;\n    background-color: var(--table-cell-state-normal-background-color);\n  }\n\n  &([sticky=\"left\"]) {\n    left: 0;\n    border-right: var(--table-cell-border-width) solid var(--table-cell-heading-border-color);\n  }\n\n  &([sticky=\"right\"]) {\n    right: 0;\n    border-left: var(--table-cell-border-width) solid var(--table-cell-heading-border-color);\n  }\n\n  /* inside a dragged row */\n  &(.market-drag-clone-first-cell) {\n    /* remove indentation */\n    /* stylelint-disable-next-line declaration-no-important */\n    padding-left: var(--table-cell-horizontal-padding-size) !important;\n\n    /* shrink UI flex gaps */\n    .content-outer {\n      gap: 0;\n    }\n\n    /* shrink extraneous UI */\n    .caret-button,\n    ::slotted([slot=\"control\"]) {\n      width: 0;\n      height: 0;\n      opacity: 0%;\n    }\n  }\n}\n\n::slotted([slot=\"control\"]),\n::slotted([slot=\"leading-accessory\"]),\n::slotted([slot=\"trailing-accessory\"]) {\n  flex-shrink: 0;\n}\n\n/* transitions for dragged row */\n.caret-button,\n::slotted([slot=\"control\"]) {\n  transition-timing-function: var(--core-animation-move-transition-easing);\n  transition-duration: var(--core-animation-move-transition-moderate-speed-duration);\n  transition-property: width, height, opacity;\n}\n\n:host([interactive]) {\n  cursor: pointer;\n}\n\n@media (hover: hover) {\n  :host([sortable]:hover),\n  :host([interactive]:hover) {\n    background-color: var(--table-cell-hover-state-background-color);\n  }\n}\n\n:host([sortable]:focus),\n:host([interactive]:focus) {\n  background-color: var(--table-cell-focus-state-background-color);\n}\n\n:host([active]),\n:host([sortable]:active),\n:host([interactive]:active) {\n  background-color: var(--table-cell-pressed-state-background-color);\n}\n\n:host([disabled]) {\n  color: var(--table-cell-disabled-state-text-color);\n  pointer-events: none;\n}\n\n.caret-button {\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  width: var(--table-cell-caret-size);\n  height: var(--table-cell-caret-size);\n\n  /* negative margins allow larger hit area without affecting layout */\n  margin-top: calc(var(--table-cell-vertical-padding-size) * -1);\n  margin-bottom: calc(var(--table-cell-vertical-padding-size) * -1);\n  margin-left: calc(var(--table-cell-horizontal-padding-size) * -1);\n  padding: 0;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  appearance: none;\n\n  svg {\n    display: block;\n    fill: var(--core-fill-20-color);\n    transition: 0.2s transform ease;\n\n    :host([caret=\"up\"]) & {\n      transform: rotate(-180deg);\n    }\n  }\n\n  &:focus-visible {\n    border-radius: var(--core-radius-10);\n    outline: var(--core-focus-ring-border-size) solid var(--table-cell-focus-ring-color);\n    outline-offset: calc(var(--core-focus-ring-border-size) * -1);\n  }\n}\n\n.sort-button {\n  display: flex;\n  flex-shrink: 0;\n  gap: var(--core-metrics-spacing-50);\n  align-items: center;\n  width: 100%;\n  margin: 0;\n  padding: var(--table-cell-vertical-padding-size) var(--table-cell-horizontal-padding-size);\n  border: none;\n  background: transparent;\n  outline: none;\n  font-weight: inherit;\n  font-size: inherit;\n  font-family: inherit;\n  line-height: inherit;\n  text-align: inherit;\n  cursor: pointer;\n  appearance: none;\n\n  svg {\n    display: block;\n    flex-shrink: 0;\n    fill: var(--core-text-30-color);\n  }\n\n  &:focus-visible {\n    border-radius: var(--core-radius-10);\n    outline: var(--core-focus-ring-border-size) solid var(--table-cell-focus-ring-color);\n    outline-offset: calc(var(--core-focus-ring-border-size) * -1);\n  }\n\n  :host([align=\"left\"]) & {\n    justify-content: start;\n  }\n\n  :host([align=\"center\"]) & {\n    justify-content: center;\n  }\n\n  :host([align=\"right\"]) & {\n    justify-content: end;\n  }\n}\n\n:host([sortable]) {\n  padding: 0;\n}\n\n:host([sortable][sort-order=\"ascending\"]),\n:host([sortable][sort-order=\"descending\"]) {\n  .sort-button {\n    svg {\n      fill: var(--core-text-10-color);\n    }\n  }\n}\n","import { Component, Host, h, Element, Prop, Listen, Event, EventEmitter, Method } from '@stencil/core';\n\nimport { isMarketCheckbox } from '../../market-checkbox/types';\nimport { MarketTableV2ControlElement, isMarketTableV2ControlElement } from './types';\nimport {\n  TMarketTableV2Selection,\n  MarketTableV2SelectionChangeEventDetail,\n  MarketTableV2SortOrderChangeDetail,\n  TMarketTableV2SortOrder,\n  TMarketTableV2SortStrategy,\n} from '../market-table-v2/types';\n\n/**\n * @slot - Default slot for content.\n * @slot control - Intended for use with a form control element.\n * @slot leading-accessory - Intended for use with a leading accessory.\n * @slot trailing-accessory - Intended for use with a trailing accessory.\n */\n@Component({\n  tag: 'market-table-v2-cell',\n  styleUrl: 'market-table-v2-cell.css',\n  shadow: true,\n})\nexport class MarketTableV2Cell {\n  private control: MarketTableV2ControlElement;\n\n  @Element() el: HTMLMarketTableV2CellElement;\n\n  /**\n   * Whether the cell is currently active.\n   */\n  @Prop({ reflect: true }) readonly active: boolean = false;\n\n  /**\n   * Sets the horizontal alignment. When not set,\n   * alignment is inherited from an ancestor row or table.\n   */\n  @Prop({ reflect: true }) readonly align: 'left' | 'center' | 'right';\n\n  /**\n   * Displays a leading clickable caret;\n   * intended to be used in conjunction with\n   * `<market-table-v2-group>` to support nested rows.\n   */\n  @Prop({ reflect: true }) readonly caret: 'up' | 'down';\n\n  /**\n   * Translated label for the collapse action when group is currently expanded (for screen reader users)\n   */\n  @Prop() readonly caretAriaLabelExpanded: string = 'Group of rows is expanded: click to collapse';\n\n  /**\n   * Translated label for the expand action when group is currently collapsed (for screen reader users)\n   */\n  @Prop() readonly caretAriaLabelCollapsed: string = 'Group of rows is collapsed: click to expand';\n\n  /**\n   * Whether the cell is currently disabled.\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Indentation level\n   */\n  @Prop({ reflect: true }) readonly indent: number;\n\n  /**\n   * Whether the cell is interactive, which results in hover, focus, & pressed styles.\n   */\n  @Prop({ reflect: true }) readonly interactive: boolean = false;\n\n  /**\n   * Set this to `true` to force cell text onto one line.\n   * May cause horizontal scrolling in the ancestor table.\n   */\n  @Prop({ reflect: true }) readonly nowrap: boolean = false;\n\n  /**\n   * Whether the cell is selected.\n   * Relevant if the cell has a slotted control.\n   */\n  @Prop({ mutable: true }) selected: TMarketTableV2Selection = 'false';\n\n  /**\n   * Makes a cell \"stick\" to the left or right of its parent row.\n   * Requires the row to be sized wider than the table to enable horizontal scrolling.\n   */\n  @Prop({ reflect: true }) readonly sticky: 'left' | 'right';\n\n  /**\n   * When the cell is in a table header row, this prop enables sorting by this cell's column.\n   */\n  @Prop({ reflect: true }) readonly sortable: boolean;\n\n  /**\n   * Translated label for the icon indicating an ascending sort (for screen reader users)\n   */\n  @Prop() readonly sortAriaLabelAscending: string = 'Sorted ascending: click to sort descending';\n\n  /**\n   * Translated label for the icon indicating a descending sort (for screen reader users)\n   */\n  @Prop() readonly sortAriaLabelDescending: string = 'Sorted descending: click to sort ascending';\n\n  /**\n   * Translated label for the icon indicating no sort applied (for screen reader users)\n   */\n  @Prop() readonly sortAriaLabelNone: string = 'Not sorted: click to sort ascending';\n\n  /**\n   * When `sortable` is `true`, this prop sets the `aria-sort` attribute\n   * and displays an arrow in the correct sort direction.\n   */\n  @Prop({ mutable: true }) sortOrder: TMarketTableV2SortOrder = 'none';\n\n  /**\n   * When `sortable` is `true`, this prop specifies the sorting strategy.\n   * - `'string'`: sorts rows alphabetically (case-insensitive) by the text content of the cell (default)\n   * - `'number'`: sorts rows numerically using [`parseFloat()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseFloat) to parse the cell content\n   * - `'datetime'`: sorts rows chronologically using [date-fns `parse()`](https://date-fns.org/v3.3.1/docs/parse) method to parse the cell content. This strategy requires specifying a format in the cell's `sortStrategyFormat` prop; see accepted formats [here](https://date-fns.org/v3.3.1/docs/parse)\n   * - `Function`: a custom callback function to compare rows, similar to the `compareFn` in [`Array.sort()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort). The following arguments are provided to the function:\n   *   - `rowA`: the first row for comparison\n   *   - `rowB`: the second row for comparison\n   *   - `order`: the direction of the sort, either `ascending` or `descending`\n   *   - `index`: the index of the column being sorted on\n   *\n   *   The callback function should return a number whose sign indicates the relative order of the two elements:\n   *   - negative if `rowA` is less than `rowB`\n   *   - positive if `rowA` is greater than `rowB`\n   *   - zero if `rowA` & `rowB` are equal\n   */\n  @Prop() readonly sortStrategy: TMarketTableV2SortStrategy;\n\n  /**\n   * When setting `sortStrategy` to `\"datetime\"`, this prop is required to specify the format.\n   * See accepted formats [here](https://date-fns.org/v3.3.1/docs/parse)\n   */\n  @Prop() readonly sortStrategyFormat: string;\n\n  /**\n   * Sets the vertical alignment. When not set,\n   * alignment is inherited from an ancestor row or table.\n   */\n  @Prop({ reflect: true }) readonly valign: 'bottom' | 'middle' | 'top';\n\n  /**\n   * Fired when the caret is clicked\n   */\n  @Event({ bubbles: true, composed: true }) marketTableV2CellCaretClicked: EventEmitter<void>;\n\n  /**\n   * Fired when clicked when sortable is `true`\n   */\n  @Event({ bubbles: true, composed: true })\n  marketTableV2CellSortClicked: EventEmitter<MarketTableV2SortOrderChangeDetail>;\n\n  /**\n   * @internal\n   * Fired when the cell selection state changes. Used internally in table components.\n   */\n  @Event({ bubbles: true, composed: true })\n  marketInternalTableV2CellSelectionChange: EventEmitter<MarketTableV2SelectionChangeEventDetail>;\n\n  @Listen('keydown')\n  onKeydown(e: KeyboardEvent) {\n    const { target, key } = e;\n    const { el, disabled, interactive } = this;\n    if (disabled) return;\n    if (!interactive) return;\n    if (target !== el) return;\n    if (key === 'Enter' || key === ' ') {\n      e.preventDefault();\n      el.click();\n    }\n  }\n\n  @Listen('marketToggleChange')\n  @Listen('marketCheckboxValueChange')\n  async onMarketControlSelectionChange(e: CustomEvent<{ current: boolean; previous: boolean }>) {\n    const { control } = this;\n    const { target, detail } = e;\n\n    // return if the target wasn't this cell's control\n    if (target !== control) return;\n\n    const selected = detail.current ? 'true' : 'false';\n    await this.setSelected(selected);\n  }\n\n  /**\n   * @internal\n   * Sets selection on the cell and propagates value to its slotted control\n   */\n  @Method()\n  async setSelected(selected: TMarketTableV2Selection, { silent = false } = {}) {\n    const { marketInternalTableV2CellSelectionChange, selected: prevSelected } = this;\n\n    // return if no values have changed\n    if (prevSelected === selected) return Promise.resolve();\n\n    // fire the internal selection event\n    if (!silent) {\n      marketInternalTableV2CellSelectionChange.emit({\n        current: selected,\n        previous: prevSelected,\n      });\n    }\n\n    // save the state\n    this.selected = selected;\n    await this.setControlSelected(selected);\n\n    return Promise.resolve();\n  }\n\n  private async setControlSelected(selected: TMarketTableV2Selection) {\n    const { control } = this;\n    if (!control) return;\n    await control.setSelection(selected === 'true', { silent: true });\n    if (isMarketCheckbox(control)) await control.setIndeterminate(selected === 'indeterminate');\n  }\n\n  private getTabIndex() {\n    const { disabled, interactive } = this;\n    return interactive && !disabled ? '0' : null;\n  }\n\n  private getStyles() {\n    const { indent } = this;\n    if (!indent || indent < 1) return {};\n    return { '--table-cell-indent-level': indent.toString() };\n  }\n\n  private getSortButtonLabel() {\n    const { sortOrder, sortAriaLabelAscending, sortAriaLabelDescending, sortAriaLabelNone } = this;\n    switch (sortOrder) {\n      case 'ascending':\n        return sortAriaLabelAscending;\n      case 'descending':\n        return sortAriaLabelDescending;\n      default:\n        return sortAriaLabelNone;\n    }\n  }\n\n  private onCaretClick(e: MouseEvent) {\n    e.stopPropagation();\n    this.marketTableV2CellCaretClicked.emit();\n  }\n\n  private onSortClick() {\n    const { sortOrder, marketTableV2CellSortClicked } = this;\n    const previous = sortOrder || 'none';\n    const current = previous === 'ascending' ? 'descending' : 'ascending';\n    const { defaultPrevented } = marketTableV2CellSortClicked.emit({\n      current,\n      previous,\n    });\n    if (!defaultPrevented) this.sortOrder = current;\n  }\n\n  private async syncControlState() {\n    const { el, selected } = this;\n    const control = [...el.children].find((child) => child.slot === 'control');\n    if (isMarketTableV2ControlElement(control)) {\n      this.control = control;\n      if (selected) await this.setControlSelected(selected);\n    }\n  }\n\n  async connectedCallback() {\n    await this.syncControlState();\n  }\n\n  private renderCaretButton() {\n    return (\n      // Note: We would ideally also have aria-expanded and aria-controls attributes; however, this is not currently\n      // possible (as of Mar 2024) due to the lack of support for referencing elements across shadow DOMs. Browser\n      // support work is ongoing in this area, but it is insufficient at this time. We should revisit in the future.\n      <button\n        class=\"caret-button\"\n        aria-label={this.caret === 'down' ? this.caretAriaLabelCollapsed : this.caretAriaLabelExpanded}\n        onClick={(e: MouseEvent) => this.onCaretClick(e)}\n      >\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M8.70715 11.7071C8.31663 12.0976 7.68346 12.0976 7.29294 11.7071L1.29294 5.70711L2.70715 4.29289L8.00005 9.58579L13.2929 4.29289L14.7072 5.70711L8.70715 11.7071Z\"\n          />\n        </svg>\n      </button>\n    );\n  }\n\n  private renderSortAscendingSvg() {\n    return (\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M7.52861 2.86177C7.78895 2.60142 8.21107 2.60142 8.47141 2.86177L13.1381 7.52843L12.1953 8.47124L8.66668 4.94265L8.66668 12.6665H7.33334V4.94265L3.80475 8.47124L2.86194 7.52843L7.52861 2.86177Z\"\n        />\n      </svg>\n    );\n  }\n\n  private renderSortDecendingSvg() {\n    return (\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M8.47129 13.1382C8.21094 13.3986 7.78883 13.3986 7.52848 13.1382L2.86182 8.47157L3.80463 7.52876L7.33322 11.0574L7.33322 3.3335L8.66655 3.3335L8.66655 11.0574L12.1952 7.52876L13.138 8.47157L8.47129 13.1382Z\"\n        />\n      </svg>\n    );\n  }\n\n  private renderSortNoneSvg() {\n    return (\n      <svg width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M10.8633 14.31L8.19664 11.6434L9.1433 10.7034L10.67 12.23L10.67 3.17002L12.0033 3.17002L12.0033 12.23L13.53 10.7034L14.47 11.6434L11.8033 14.31C11.5433 14.57 11.1233 14.57 10.8633 14.31ZM2.46997 6.30338L1.52997 5.36338L4.19664 2.69671C4.45664 2.43671 4.87664 2.43671 5.13664 2.69671L7.8033 5.36338L6.8633 6.30338L5.33664 4.77671L5.33664 13.8367L4.0033 13.8367L4.0033 4.77671L2.46997 6.30338Z\"\n        />\n      </svg>\n    );\n  }\n\n  private renderSortSvg() {\n    switch (this.sortOrder) {\n      case 'ascending':\n        return this.renderSortAscendingSvg();\n      case 'descending':\n        return this.renderSortDecendingSvg();\n      default:\n        return this.renderSortNoneSvg();\n    }\n  }\n\n  render() {\n    const { el, caret, sortable, sortOrder } = this;\n    return (\n      <Host\n        role={el.role ?? 'cell'}\n        tabindex={this.getTabIndex()}\n        style={this.getStyles()}\n        class=\"market-table-v2-cell\"\n        sort-order={sortOrder !== 'none' ? sortOrder : null}\n        aria-sort={sortOrder !== 'none' ? sortOrder : null}\n      >\n        <div class=\"content-outer\">\n          {caret && this.renderCaretButton()}\n          <slot name=\"control\" onSlotchange={() => this.syncControlState()}></slot>\n          <div class=\"content-inner\">\n            <slot name=\"leading-accessory\"></slot>\n            <div class=\"default-slot\">\n              {!sortable && <slot></slot>}\n              {sortable && (\n                <button class=\"sort-button\" aria-describedby=\"sort-button-label\" onClick={() => this.onSortClick()}>\n                  <slot></slot>\n                  {this.renderSortSvg()}\n                  <span id=\"sort-button-label\" hidden>\n                    {this.getSortButtonLabel()}\n                  </span>\n                </button>\n              )}\n            </div>\n            <slot name=\"trailing-accessory\"></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}