{"file":"market-tab.js","mappings":";;AAAA,MAAM,YAAY,GAAG,uxHAAuxH,CAAC;AAC7yH,wBAAe,YAAY;;MCYdA,WAAS;;;;;;wBASkC,KAAK;oBAOY,QAAQ;wBAOnB,KAAK;;;;;IAcjE,MAAM;QACJ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;QACD,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC;YAC9D,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,eAAe,CAAC;YAC9C,SAAS,EAAE,IAAI,CAAC,QAAQ;YACxB,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE;YACjB,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;QACD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B;;;;IAMD,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;QACD,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC;YAC9D,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,eAAe,CAAC;YAC9C,SAAS,EAAE,IAAI,CAAC,QAAQ;YACxB,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE;YACjB,KAAK,EAAE,KAAK;SACb,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;QACD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B;IAGD,eAAe;QACb,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IAED,WAAW;QACT,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;IAED,aAAa,CAAC,CAAgB;QAC5B,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,EAAE;YACtC,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;KACF;IAED,MAAM;QACJ,QACE,EAAC,IAAI,sEACY,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,mBACxB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EACvC,KAAK,EAAC,YAAY,EAClB,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EACpC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EACxC,IAAI,EAAC,KAAK,EACV,QAAQ,EAAC,GAAG,IAEZ,+DAAQ,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAC,QAAQ,EAAC,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,QAAQ,EAAC,IAAI,IAC7F,8DAAa,CACN,CACJ,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["MarketTab"],"sources":["src/components/market-tabs/subcomponents/market-tab/market-tab.css?tag=market-tab&encapsulation=shadow","src/components/market-tabs/subcomponents/market-tab/market-tab.tsx"],"sourcesContent":["/* TODO: add design tokens */\n@import \"../../../../styles/mixins/typography.css\";\n\n:host {\n  color: var(--tabs-tab-text-color, var(--core-text-20-color));\n}\n\n:host [part=\"button\"] {\n  position: relative;\n  border: 0;\n  background: none;\n  color: inherit;\n  font-weight: inherit;\n  font-size: inherit;\n  font-family: inherit;\n  line-height: inherit;\n  letter-spacing: inherit;\n  text-transform: inherit;\n  cursor: pointer;\n  transition:\n    color\n    var(--core-animation-enter-transition-fast-speed-duration)\n    var(--core-animation-enter-transition-easing);\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 0;\n    border-radius:\n      var(--tabs-tab-bottom-border-border-radius-top-left, var(--core-metrics-spacing-25))\n      var(--tabs-tab-bottom-border-border-radius-top-right, var(--core-metrics-spacing-25))\n      var(--tabs-tab-bottom-border-border-radius-bottom-right, 0)\n      var(--tabs-tab-bottom-border-border-radius-bottom-left, 0);\n    background: var(--tabs-tab-bottom-border-background-color, var(--core-text-10-color));\n    transition:\n      height\n      var(--core-animation-enter-transition-fast-speed-duration)\n      var(--core-animation-enter-transition-easing),\n      background\n      var(--core-animation-enter-transition-fast-speed-duration)\n      var(--core-animation-enter-transition-easing);\n  }\n}\n\n:host(:hover),\n:host(:active) {\n  color: var(--tabs-tab-hover-state-text-color, var(--core-emphasis-text-color));\n  transition:\n    color\n    var(--core-animation-exit-transition-fast-speed-duration)\n    var(--core-animation-exit-transition-easing);\n}\n\n/* remove border radius that looks buggy on screens (especially on Chrome) with standard pixel density */\n/* stylelint-disable-next-line media-feature-name-no-vendor-prefix */\n@media (-webkit-device-pixel-ratio: 1) {\n  :host [part=\"button\"]::after {\n    border-radius: 0;\n  }\n}\n\n:host([size=\"small\"]) {\n  @extend %medium-20;\n\n  [part=\"button\"] {\n    padding:\n      var(--tabs-tab-small-size-top-padding-size, 4px)\n      0\n      var(--tabs-tab-small-size-bottom-padding-size, 10px);\n  }\n}\n\n:host(:not([size])),\n:host([size=\"medium\"]) {\n  @extend %heading-20;\n\n  [part=\"button\"] {\n    padding:\n      var(--tabs-tab-medium-size-top-padding-size, 4px)\n      0\n      var(--tabs-tab-medium-size-bottom-padding-size, 10px);\n  }\n}\n\n:host([size=\"large\"]) {\n  @extend %heading-30;\n\n  [part=\"button\"] {\n    padding:\n      var(--tabs-tab-large-size-top-padding-size, 4px)\n      0\n      var(--tabs-tab-large-size-bottom-padding-size, 12px);\n  }\n}\n\n:host([selected]) {\n  color: var(--tabs-tab-selected-text-color, var(--core-text-10-color));\n\n  [part=\"button\"]::after {\n    height: var(--tabs-tab-selected-bottom-border-height, var(--core-metrics-spacing-25));\n  }\n\n  &:hover {\n    color: var(--tabs-tab-hover-state-selected-text-color, var(--core-text-10-color));\n  }\n\n  &:active {\n    color: var(--tabs-tab-active-state-selected-text-color, var(--core-emphasis-text-color));\n\n    [part=\"button\"]::after {\n      background: var(--tabs-tab-active-state-bottom-border-background-color, var(--core-emphasis-text-color));\n    }\n  }\n}\n\n:host([disabled]) {\n  color: var(--tabs-tab-disabled-state-text-color, var(--core-text-30-color));\n\n  &:hover {\n    color: var(--tabs-tab-disabled-state-text-color, var(--core-text-30-color));\n  }\n\n  [part=\"button\"] {\n    cursor: not-allowed;\n  }\n}\n","import { Component, Host, h, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n\nimport { TMarketTabSelectedChangedEventDetail } from '../../events';\n\n/**\n * @slot - (Default slot) The text used for the button label\n * @part button - The `<button>` in the shadow DOM\n */\n@Component({\n  tag: 'market-tab',\n  styleUrl: 'market-tab.css',\n  shadow: true,\n})\nexport class MarketTab {\n  @Element() el: HTMLMarketTabElement;\n  buttonEl: HTMLButtonElement;\n\n  /**\n   * Whether or not the tab is disabled\n   *\n   * @default false\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Tab's size\n   *\n   * @default 'medium'\n   */\n  @Prop({ reflect: true }) readonly size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Whether or not the tab is selected\n   *\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) selected: boolean = false;\n\n  /**\n   * Fired when the tab selection has changed\n   *\n   * `market-tab-list` listens to this event and stops further propagation\n   */\n  @Event({ bubbles: true, composed: true })\n  marketTabSelectedChanged: EventEmitter<TMarketTabSelectedChangedEventDetail>;\n\n  /**\n   * Select the tab and emits a `marketTabSelectedChanged` event\n   */\n  @Method()\n  select() {\n    if (this.selected || this.disabled) {\n      return Promise.resolve();\n    }\n    const { defaultPrevented } = this.marketTabSelectedChanged.emit({\n      panelId: this.el.getAttribute('aria-controls'),\n      prevValue: this.selected,\n      tabId: this.el.id,\n      value: true,\n    });\n    if (!defaultPrevented) {\n      this.selected = true;\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Deselects the tab and emits a `marketTabSelectedChanged` event\n   */\n  @Method()\n  deselect() {\n    if (!this.selected) {\n      return Promise.resolve();\n    }\n    const { defaultPrevented } = this.marketTabSelectedChanged.emit({\n      panelId: this.el.getAttribute('aria-controls'),\n      prevValue: this.selected,\n      tabId: this.el.id,\n      value: false,\n    });\n    if (!defaultPrevented) {\n      this.selected = false;\n    }\n    return Promise.resolve();\n  }\n\n  @Watch('disabled')\n  disabledWatcher() {\n    this.selected = false;\n  }\n\n  handleClick() {\n    this.select();\n  }\n\n  handleKeydown(e: KeyboardEvent) {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault(); // prevents scroll down when Space is pressed\n      this.select();\n    }\n  }\n\n  render() {\n    return (\n      <Host\n        aria-disabled={this.disabled.toString()}\n        aria-selected={this.selected.toString()}\n        class=\"market-tab\"\n        onClick={this.handleClick.bind(this)}\n        onKeydown={this.handleKeydown.bind(this)}\n        role=\"tab\"\n        tabindex=\"0\"\n      >\n        <button disabled={this.disabled} part=\"button\" ref={(el) => (this.buttonEl = el)} tabindex=\"-1\">\n          <slot></slot>\n        </button>\n      </Host>\n    );\n  }\n}\n"],"version":3}