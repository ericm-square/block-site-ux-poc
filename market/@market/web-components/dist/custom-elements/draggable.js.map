{"file":"draggable.js","mappings":"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","names":[],"sources":["src/utils/transition-to-promise.ts","src/components/tables-v2/market-table-v2-row/types.ts","src/components/tables-v2/market-table-v2-group/types.ts","src/utils/draggable.ts"],"sourcesContent":["// This function sets CSS styles on an element and returns a promise.\n// The promise is resolved after any CSS transitions complete on the changed styles.\n// It's smart enough to resolve immediately if there is no transition on the style.\n// However, this is intended to be used with transitions that are set in CSS files.\n//\n// Example usage:\n// await transitionToPromise(element, {\n//   top: '100px',\n//   height: '100px',\n//   transform: 'scale(2)',\n// });\n//\n// adapted from https://gist.github.com/davej/44e3bbec414ed4665220\nexport async function transitionToPromise(el: HTMLElement, styles: object) {\n  const computedStyle = getComputedStyle(el);\n  const { transitionProperty } = computedStyle;\n  const properties = transitionProperty.split(', ');\n\n  return Promise.all(\n    Object.keys(styles).map((property) => {\n      const value = styles[property];\n      return new Promise<void>((resolve) => {\n        // if no value to set, resolve\n        if (!value) resolve();\n\n        // if same value, resolve\n        if (value === el.style[property]) resolve();\n\n        // if no transition on this property, set it and resolve\n        if (!properties.includes(property)) {\n          el.style[property] = value;\n          resolve();\n        }\n\n        // otherwise, set up a listener for transitionend\n        const transitionEnded = (e: TransitionEvent) => {\n          if (e.propertyName !== property) return;\n          el.removeEventListener('transitionend', transitionEnded);\n          resolve();\n        };\n        el.addEventListener('transitionend', transitionEnded);\n        el.style[property] = value;\n      });\n    }),\n  );\n}\n","import { getNamespacedTagFor } from '../../../utils/namespace';\n\nexport function isMarketTableV2Row(value: unknown): value is HTMLMarketTableV2RowElement {\n  const tagName = (value as HTMLElement)?.tagName.toLowerCase();\n  return Boolean(value && tagName === getNamespacedTagFor('market-table-v2-row'));\n}\n","import { getNamespacedTagFor } from '../../../utils/namespace';\n\nexport function isMarketTableV2Group(value: unknown): value is HTMLMarketTableV2GroupElement {\n  const tagName = (value as HTMLElement)?.tagName.toLowerCase();\n  return Boolean(value && tagName === getNamespacedTagFor('market-table-v2-group'));\n}\n","import { TMarketDragCoords } from './gesture/types';\nimport { getMaxZIndex } from './max-z-index';\nimport { asyncRequestAnimationFrame } from './raf';\nimport { getNamespacedTagFor } from './namespace';\nimport { transitionToPromise } from './transition-to-promise';\nimport { isMarketTableV2Row } from '../components/tables-v2/market-table-v2-row/types';\nimport { isMarketTableV2Group } from '../components/tables-v2/market-table-v2-group/types';\n\nexport interface MarketDraggableElement extends HTMLElement {\n  dragEnabled: boolean;\n}\n\nexport function isDraggable(value: unknown): value is MarketDraggableElement {\n  return Boolean(value && (value as MarketDraggableElement).dragEnabled !== undefined);\n}\n\nexport type TMarketDragEventDetail = {\n  x: number;\n  y: number;\n  el: MarketDraggableElement;\n  clone: MarketDraggableElement;\n  source: HTMLElement;\n  target: HTMLElement;\n};\n\nexport type TMarketDragAnchor = 'none' | 'left' | 'right';\n\nexport const SCROLL_DELAY = Math.min(1000 / 60); // shoot for ~60 fps\nexport const SCROLL_STEP_MAX = 24; // max scroll 24px at a time\n\nconst MarketTableV2GroupTag = getNamespacedTagFor('market-table-v2-group');\n\n/*\n  This util class abstracts & encapsulates drag & drop functionality for a component.\n\n  When wired up to a component, it does the following:\n  - adds a .market-drag-placeholder class to the original dragged element\n  - clones the dragged element with a class of .market-drag-clone\n  - visually tracks the drag move with the cloned element via CSS transform\n  - fires custom events on the dragged element:\n    - marketDragStart: fires on drag start\n    - marketDragEnd: fires on drag end\n    - marketDragComplete: fires when the dragged element's transition completes\n  - fires custom events on the drag target:\n    - marketDragEnter: fires when the dragged element enters a new target\n    - marketDragMove: fires when the dragged element moves over a target\n    - marketDragLeave: fires when the dragged element leaves a target\n    - marketDragDrop: fires when the dragged element is dropped on a target\n  - adds a .market-drag-released class to transition the clone back to the placeholder\n\n  Intended to be wired up via events fired by <market-drag-handle> like so:\n\n  ```html\n  <Host\n    onMarketDragHandleDragStart={(e: CustomEvent<TMarketDragCoords>) => this.onDragStart(e)}\n    onMarketDragHandleDragMove={(e: CustomEvent<TMarketDragCoords>) => this.onDragMove(e)}\n    onMarketDragHandleDragEnd={(e: CustomEvent<TMarketDragCoords> => this.onDragEnd(e)}\n  >\n    <market-drag-handle></market-drag-handle>\n  </Host>\n  ```\n\n  ```js\n  async onDragStart(e: CustomEvent<TMarketDragCoords>) {\n    const coords: TMarketDragCoords = e.detail;\n    this.drag = new Draggable(this.el, { anchor: 'right' });\n    await this.drag.start(coords);\n  }\n  onDragMove(e: CustomEvent<TMarketDragCoords>) {\n    const coords: TMarketDragCoords = e.detail;\n    this.drag.move(coords);\n  }\n  async onDragEnd(e: CustomEvent<TMarketDragCoords>) {\n    const coords: TMarketDragCoords = e.detail;\n    await this.drag.end(coords);\n    this.drag.destroy();\n  }\n  ```\n\n  ```css \n  // the original element stays in place and gets this class.\n  // use it to add placeholder styles, e.g. a grayed out row, etc.\n  :host(.market-drag-placeholder) {\n    color: gray;\n    background: gray;\n  }\n\n  // the cloned element follows the drag via CSS transform and gets this class.\n  // to add styles for the dragged element, do it here. for example:\n  // - you want to size the dragged element with a width and/or height\n  // - you want to transition from the starting size & position\n  // - you want to transition in a drop-shadow (see below)\n  :host(.market-drag-clone) {\n    min-width: 200px;\n    transition-timing-function: ease;\n    transition-duration: 200ms;\n    transition-property: top, width, height;\n\n    // pro tip: transitioning the opacity of a pseudo with a\n    // box-shadow is hardware accelerated and more performant\n    // than transitioning the box-shadow property directly\n    &::after {\n      box-shadow: 0 4px 32px 0 rgba(0, 0, 0, 0.1);\n      opacity: var(--market-drag-clone-shadow-opacity, 0); // set by draggable\n      transition: 200ns opacity ease;\n    }\n  }\n\n  // the cloned element gets this class when released.\n  // use it to transition clone back to the placeholder.\n  :host(.market-drag-released) {\n    transition-timing-function: ease;\n    transition-duration: 200ms;\n    transition-property: top, width, height, transform;\n  }\n  ```\n*/\n\nexport class Draggable {\n  el: MarketDraggableElement;\n  clone: MarketDraggableElement;\n  source: HTMLElement;\n  target: HTMLElement;\n  startCoords: TMarketDragCoords;\n  previousCoords: TMarketDragCoords;\n  canceled: boolean;\n  scrollParent: HTMLElement;\n  scrollInterval: ReturnType<typeof setInterval>;\n  anchor: TMarketDragAnchor;\n\n  // Init the class with the element to be dragged\n  constructor(el: MarketDraggableElement, opts?: { anchor?: TMarketDragAnchor }) {\n    this.el = el;\n    this.anchor = opts?.anchor || 'none';\n  }\n\n  // Start a drag movement on the element:\n  // - adds a .market-drag-placeholder class to the dragged element\n  // - clones the dragged element with a class of .market-drag-clone\n  // - fires marketDragStart custom event on the dragged element\n  async start(coords: TMarketDragCoords) {\n    this.canceled = false;\n    const { x, y } = coords;\n    this.startCoords = this.previousCoords = coords;\n    const { el, anchor } = this;\n\n    // find and measure a reference element\n    // special case: if el is a table group, reference its parent row\n    const referenceElement: HTMLElement = isMarketTableV2Group(el) ? el.querySelector('[slot=\"parent\"]') : el;\n    const {\n      top: startTop,\n      right: startRight,\n      left: startLeft,\n      width: startWidth,\n      height: startHeight,\n    } = measureElement(referenceElement);\n\n    // get the drag source\n    const source = el.parentElement;\n\n    // get the drag target\n    const target = document.elementsFromPoint(x, y)[0] as HTMLElement;\n\n    // clone the reference element to visually track the drag movement\n    const clone = referenceElement.cloneNode(true) as MarketDraggableElement;\n    clone.classList.add('market-drag-clone', 'market-drag-transitioning');\n\n    // save references\n    this.source = source;\n    this.target = target;\n    this.clone = clone;\n\n    // fire start event\n    const defaultPrevented = !el.dispatchEvent(\n      new CustomEvent<TMarketDragEventDetail>('marketDragStart', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          ...coords,\n          el,\n          source,\n          target,\n          clone,\n        },\n      }),\n    );\n    if (defaultPrevented) {\n      this.canceled = true;\n      return;\n    }\n\n    // get nearest scrollable parent\n    this.scrollParent = getScrollParent(el);\n\n    // the original element becomes a placeholder when it's dragged\n    el.classList.add('market-drag-placeholder');\n\n    // append and measure the clone's final size\n    // - if desired, dragged dimensions should be specified in CSS\n    Object.assign(clone.style, {\n      position: 'fixed',\n      opacity: 0, // hidden while we measure it\n      transitionProperty: 'none', // turn transitions off\n    });\n    document.body.append(clone);\n    await asyncRequestAnimationFrame();\n    const { width: finalWidth, height: finalHeight } = measureElement(clone);\n\n    // set the clone's initial position to match the reference element\n    Object.assign(clone.style, {\n      opacity: '', // visible now that we've measured it\n      width: `${startWidth}px`,\n      height: `${startHeight}px`,\n      top: `${startTop}px`,\n      left: anchor !== 'right' ? `${startLeft}px` : 'auto',\n      right: anchor !== 'left' ? `${window.innerWidth - startRight}px` : 'auto',\n      zIndex: `${getMaxZIndex(document.body) + 1}`,\n    });\n    await asyncRequestAnimationFrame();\n    // eslint-disable-next-line require-atomic-updates\n    clone.style.transitionProperty = ''; // turn transitions back on\n\n    // special case: if clone is a table row, add class to style the first cell\n    if (isMarketTableV2Row(clone)) {\n      clone.querySelector('market-table-v2-cell').classList.add('market-drag-clone-first-cell');\n    }\n\n    // add optional drop shadow opacity (custom CSS property)\n    clone.style.setProperty('--market-drag-clone-shadow-opacity', '1');\n\n    // transition clone to dragged size and position\n    transitionToPromise(clone, {\n      top: `${startTop + (startHeight - finalHeight) / 2}px`,\n      height: `${finalHeight}px`,\n      width: anchor === 'none' ? `${startWidth}px` : `${finalWidth}px`,\n    }).then(() => {\n      clone.classList.remove('market-drag-transitioning');\n    });\n  }\n\n  // Continues a drag movement on the element:\n  // - visually tracks the drag move with the cloned element via CSS transform\n  // - fires marketDragEnter, marketDragMove, & marketDragLeave custom events on drag targets\n  move(coords: TMarketDragCoords) {\n    const { el, clone, source, target, startCoords, previousCoords, canceled } = this;\n    const { x, y } = coords;\n\n    // if the drag has already been canceled, return early\n    if (canceled) return;\n\n    // if for some reason we have no clone, return early\n    if (!clone) return;\n\n    // if the drag coords haven't changed, return early\n    if (x === previousCoords.x && y === previousCoords.y) return;\n\n    // save the current coords\n    this.previousCoords = coords;\n\n    // get the first drag target that is not the clone or its descendants\n    const newTarget = [...document.elementsFromPoint(x, y)].find((target) => {\n      return !clone.contains(target);\n    }) as HTMLElement;\n\n    // if drag target is new\n    if (newTarget !== target) {\n      // fire leave on current target\n      target?.dispatchEvent(\n        new CustomEvent<TMarketDragEventDetail>('marketDragLeave', {\n          bubbles: true,\n          detail: {\n            x,\n            y,\n            el,\n            source,\n            target,\n            clone,\n          },\n        }),\n      );\n\n      // fire enter on new target\n      newTarget?.dispatchEvent(\n        new CustomEvent<TMarketDragEventDetail>('marketDragEnter', {\n          bubbles: true,\n          detail: {\n            x,\n            y,\n            el,\n            source,\n            target: newTarget,\n            clone,\n          },\n        }),\n      );\n\n      // update current drag target\n      this.target = newTarget;\n    }\n\n    // fire drag move on new target\n    newTarget?.dispatchEvent(\n      new CustomEvent<TMarketDragEventDetail>('marketDragMove', {\n        bubbles: true,\n        detail: {\n          x,\n          y,\n          el,\n          source,\n          target: newTarget,\n          clone,\n        },\n      }),\n    );\n\n    // move the clone with the drag move\n    const deltaX = x - startCoords.x;\n    const deltaY = y - startCoords.y;\n    Object.assign(clone.style, {\n      transform: `translate(${deltaX}px, ${deltaY}px)`,\n    });\n\n    // scroll the scrollParent if need be\n    this.scroll();\n  }\n\n  // Ends a drag movement on the element:\n  // - fires marketDragEnd custom event on the dragged element\n  // - fires marketDragDrop custom event on drag target\n  // - removes the cloned element after transitioning it back to the placeholder\n  // - removes the .market-drag-placeholder class from the dragged element\n  async end(coords: TMarketDragCoords) {\n    if (this.canceled) return;\n\n    const { el, source, clone, anchor, scrollInterval } = this;\n    const { x, y } = coords;\n\n    // stop any current scrolling\n    clearInterval(scrollInterval);\n\n    // if for some reason we have no clone, return early\n    if (!clone) return;\n\n    // get the first drag target that is not the clone or its descendants\n    const target = [...document.elementsFromPoint(x, y)].find((target) => {\n      return !clone.contains(target);\n    }) as HTMLElement;\n\n    // fire end event on dragged element\n    const defaultPrevented = !el.dispatchEvent(\n      new CustomEvent<TMarketDragEventDetail>('marketDragEnd', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          x,\n          y,\n          el,\n          source,\n          target,\n          clone,\n        },\n      }),\n    );\n\n    // fire drop event on target\n    if (!defaultPrevented) {\n      target?.dispatchEvent(\n        new CustomEvent<TMarketDragEventDetail>('marketDragDrop', {\n          bubbles: true,\n          cancelable: false,\n          detail: {\n            x,\n            y,\n            el,\n            source,\n            target,\n            clone,\n          },\n        }),\n      );\n    }\n\n    // find the reference element, w/ some special logic for table groups\n    const collapsedTableGroup = farthest(el, `${MarketTableV2GroupTag}[collapsed]`);\n    const draggedIntoCollapsedGroup = collapsedTableGroup && collapsedTableGroup !== el;\n    const referenceElement: HTMLElement = draggedIntoCollapsedGroup\n      ? collapsedTableGroup.querySelector('[slot=\"parent\"]')\n      : isMarketTableV2Group(el)\n      ? el.querySelector('[slot=\"parent\"]')\n      : el;\n\n    // measure the elements\n    await asyncRequestAnimationFrame();\n    const {\n      top: finalTop,\n      right: finalRight,\n      left: finalLeft,\n      width: finalWidth,\n      height: finalHeight,\n    } = measureElement(referenceElement);\n    const {\n      top: startTop,\n      right: startRight,\n      left: startLeft,\n      width: startWidth,\n      height: startHeight,\n    } = measureElement(clone);\n    const deltaX = anchor === 'left' ? startLeft - finalLeft : startRight - finalRight;\n    const deltaY = startTop - finalTop;\n\n    // update the clone position so that its top & left origin\n    // is the same as the dragged element (which may have been moved!)\n    // delta transform will result in the clone appearing in the same spot\n    Object.assign(clone.style, {\n      pointerEvents: 'none', // disable mouse events\n      transitionProperty: 'none', // turn transitions off\n      top: `${finalTop}px`,\n      left: anchor !== 'right' ? `${finalLeft}px` : 'auto',\n      right: anchor !== 'left' ? `${window.innerWidth - finalRight}px` : 'auto',\n      width: `${startWidth}px`,\n      height: `${startHeight}px`,\n      transform: `translate(${deltaX}px, ${deltaY}px)`,\n    });\n    await asyncRequestAnimationFrame();\n    // eslint-disable-next-line require-atomic-updates\n    clone.style.transitionProperty = ''; // turn transitions back on\n\n    // special case: if clone is a table row, remove styling from the first cell\n    if (isMarketTableV2Row(clone) && isMarketTableV2Row(referenceElement)) {\n      clone.querySelector('market-table-v2-cell').classList.remove('market-drag-clone-first-cell');\n    }\n\n    // remove the transform to transition clone back to the placeholder.\n    clone.classList.add('market-drag-released', 'market-drag-transitioning');\n    if (draggedIntoCollapsedGroup) clone.classList.add('market-drag-into-collapsed-group');\n    clone.style.removeProperty('--market-drag-clone-shadow-opacity');\n    await asyncRequestAnimationFrame();\n    await transitionToPromise(clone, {\n      width: `${finalWidth}px`,\n      height: `${finalHeight}px`,\n      transform: deltaX || deltaY ? 'translate(0, 0)' : null,\n    });\n\n    // cleanup\n    el.classList.remove('market-drag-placeholder');\n    clone.remove();\n\n    // fire event on dragged element when its transition completes\n    el?.dispatchEvent(\n      new CustomEvent<TMarketDragEventDetail>('marketDragComplete', {\n        bubbles: true,\n        cancelable: false,\n        detail: {\n          x,\n          y,\n          el,\n          source,\n          target,\n          clone,\n        },\n      }),\n    );\n  }\n\n  private scroll() {\n    const { clone, scrollParent, scrollInterval } = this;\n\n    // stop any current scrolling\n    clearInterval(scrollInterval);\n\n    // measure the clone position\n    const { bottom: cloneBottom, top: cloneTop, right: cloneRight, left: cloneLeft } = measureElement(clone);\n\n    // measure the scroll parent position\n    const {\n      bottom: scrollParentBottom,\n      top: scrollParentTop,\n      right: scrollParentRight,\n      left: scrollParentLeft,\n    } = getScrollParentRect(scrollParent);\n\n    // scroll vertically if clone is over a vertical edge\n    const deltaBottom = cloneBottom - scrollParentBottom;\n    const deltaTop = cloneTop - scrollParentTop;\n    const top =\n      deltaBottom > 0\n        ? Math.min(deltaBottom / 4, SCROLL_STEP_MAX)\n        : deltaTop < 0\n        ? Math.max(deltaTop / 4, -SCROLL_STEP_MAX)\n        : 0;\n\n    // scroll horizontally if clone is over a horizontal edge\n    const deltaRight = cloneRight - scrollParentRight;\n    const deltaLeft = cloneLeft - scrollParentLeft;\n    const left =\n      deltaRight > 0\n        ? Math.min(deltaRight / 4, SCROLL_STEP_MAX)\n        : deltaLeft < 0\n        ? Math.max(deltaLeft / 4, -SCROLL_STEP_MAX)\n        : 0;\n\n    if (top !== 0 || left !== 0) {\n      this.scrollInterval = setInterval(() => {\n        scrollParent.scrollBy({ top, left });\n      }, SCROLL_DELAY);\n    }\n  }\n\n  // clean up var refs\n  destroy() {\n    this.el = null;\n    this.clone = null;\n    this.source = null;\n    this.target = null;\n    this.startCoords = null;\n    this.canceled = null;\n    this.scrollParent = null;\n    this.scrollInterval = null;\n    this.anchor = null;\n  }\n}\n\n// Finds the nearest scrollable ancestor element.\n// Looks for scrolling in both X and Y directions. Returns the document if no element is found.\n// Works for now for our purposes, but may eventually need to take into account other display/position types.\nfunction getScrollParent(element: HTMLElement): HTMLElement {\n  let parent = element.parentElement;\n  while (parent !== document.documentElement) {\n    const { overflowY, overflowX } = getComputedStyle(parent);\n    const scrollableY = /(auto|scroll)/.test(overflowY) && parent.scrollHeight > parent.offsetHeight;\n    const scrollableX = /(auto|scroll)/.test(overflowX) && parent.scrollWidth > parent.offsetWidth;\n    if (scrollableY || scrollableX) return parent;\n    parent = parent.parentElement;\n  }\n  return document.documentElement;\n}\n\n// Basically getBoundingClientRect() but handles an edge case\n// where the scrollable parent could be the document itself\nfunction getScrollParentRect(element: HTMLElement): Pick<DOMRect, 'top' | 'bottom' | 'left' | 'right'> {\n  const { top, right, bottom, left } = measureElement(element);\n  if (element === document.documentElement) {\n    // we actually want the window size in this case\n    const top = 0;\n    const right = window.innerWidth;\n    const bottom = window.innerHeight;\n    const left = 0;\n    return { top, right, bottom, left };\n  }\n  return { top, right, bottom, left };\n}\n\n// This does the opposite of element.closest(selector).\n// That is, it finds the outermost ancestor element that matches the selector.\nfunction farthest(el: HTMLElement, selector: string) {\n  let farthest: HTMLElement;\n  let pointer: HTMLElement = el;\n  while (pointer !== document.body) {\n    const nextClosest = pointer.closest(selector) as HTMLElement;\n    if (nextClosest) farthest = nextClosest;\n    pointer = pointer.parentElement;\n  }\n  return farthest;\n}\n\n// Basically getBoundingClientRect() but rounded\nfunction measureElement(el: HTMLElement): Pick<DOMRect, 'top' | 'right' | 'bottom' | 'left' | 'width' | 'height'> {\n  const rect = el.getBoundingClientRect();\n  return {\n    top: Math.round(rect.top),\n    right: Math.round(rect.right),\n    bottom: Math.round(rect.bottom),\n    left: Math.round(rect.left),\n    width: Math.round(rect.width),\n    height: Math.round(rect.height),\n  };\n}\n"],"version":3}