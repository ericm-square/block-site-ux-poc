{"file":"market-date-picker-date.entry.js","mappings":";;AAAA,MAAM,uBAAuB,GAAG,q2IAAq2I,CAAC;AACt4I,mCAAe,uBAAuB;;MCMzB,oBAAoB;;;;;;wBAMuB,KAAK;yBAMzD,MAAM;qBAK2C,KAAK;wBAKF,KAAK;;;;;;;IA8B3D,iBAAiB,CAAC,CAAQ;;QACxB,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAA,MAAA,IAAI,CAAC,GAAG,0CAAE,MAAM,MAAK,CAAC,EAAE;YAC3C,CAAC,CAAC,wBAAwB,EAAE,CAAC;YAC7B,OAAO;SACR;QAED,MAAM,eAAe,GAAG,CAAC,YAAY,aAAa,IAAI,CAAC,CAAC,IAAI,KAAK,SAAS,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC;QAEhG,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO,IAAI,eAAe,EAAE;YACzC,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;SAC3D;QACD,IAAI,CAAC,CAAC,IAAI,KAAK,WAAW,EAAE;YAC1B,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;SAC7D;QAED,IAAI,CAAC,CAAC,IAAI,KAAK,UAAU,EAAE;YACzB,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,CAAC;SAC3C;KACF;IAED,MAAM;QACJ,QACE,EAAC,IAAI,qDACH,KAAK,EAAC,yBAAyB,EAC/B,IAAI,EAAE,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,GAAG,QAAQ,EACvD,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,mBAC9B,IAAI,CAAC,QAAQ,EAC5B,OAAO,EAAE,CAAC,CAAQ;gBAChB,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;aAC3B,EACD,WAAW,EAAE,CAAC,CAAQ;gBACpB,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;aAC3B,EACD,UAAU,EAAE,CAAC,CAAQ;gBACnB,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;aAC3B,EACD,SAAS,EAAE,CAAC,CAAQ;gBAClB,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;aAC3B,IAEA,IAAI,CAAC,GAAG,CACJ,EACP;KACH;;;;;;;","names":[],"sources":["src/components/market-date-picker/subcomponents/market-date-picker-date/market-date-picker-date.css?tag=market-date-picker-date&encapsulation=shadow","src/components/market-date-picker/subcomponents/market-date-picker-date/market-date-picker-date.tsx"],"sourcesContent":["/* blank white block with no functionality */\n:host(:not([day])) {\n  border-width: 0 !important; /* stylelint-disable-line declaration-no-important */\n  border-radius: 0 !important; /* stylelint-disable-line declaration-no-important */\n  background-color: rgb(0 0 0 / 0%) !important; /* stylelint-disable-line declaration-no-important */\n  color: rgb(0 0 0 / 0%) !important; /* stylelint-disable-line declaration-no-important */\n  pointer-events: none !important; /* stylelint-disable-line declaration-no-important */\n}\n\n:host {\n  display: inline-flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-width: var(--date-picker-grid-item-width);\n  height: var(--date-picker-grid-item-height);\n  padding: 0;\n\n  /* font styling */\n  font-size: var(--date-picker-weekdays-font-size);\n  line-height: var(--date-picker-weekdays-font-leading);\n  text-align: center;\n\n  &([disabled]) {\n    color: var(--date-picker-date-text-unselected-selection-disabled-state-color);\n    cursor: not-allowed;\n  }\n\n  /* Styling for weekday headings */\n  &(.weekday-header) {\n    color: var(--date-picker-weekdays-color-color);\n    cursor: auto;\n  }\n\n  /* default date shape, excluding selection='range-middle' since no border-radius */\n  &(:not([selection='range-middle']:not([today]))) {\n    border-radius: var(--date-picker-date-border-radius);\n  }\n\n  /* SELECTION: NONE */\n  &([selection='none']:not([disabled])) {\n    color: var(--date-picker-date-text-unselected-selection-normal-state-color);\n  }\n\n  /* selected styling */\n  &([selection='single'][selected]),\n  &([selection='range-first'][selected]),\n  &([selection='range-last'][selected]) {\n    background-color: var(--date-picker-date-background-single-selection-normal-state-color);\n    color: var(--date-picker-date-text-single-selection-disabled-state-color);\n  }\n\n  /* disabled date styling when 'default' has black background styling */\n  &([selection='single'][disabled][selected]),\n  &([selection='range-first'][disabled][selected]),\n  &([selection='range-last'][disabled][selected]) {\n    background-color: var(--date-picker-date-background-single-selection-disabled-state-color);\n    color: var(--date-picker-date-text-single-selection-disabled-state-color);\n  }\n\n  /* SELECTION: RANGE-FIRST */\n\n  /* date shape changes only when NOT selected */\n\n  &(:hover[selection='range-first']:not([selected]):not([today])),\n  &(:active[selection='range-first']:not([selected]):not([today])) {\n    --date-picker-date-range-first-selection-border-radius-top-left: var(--date-picker-date-border-radius);\n    --date-picker-date-range-first-selection-border-radius-top-right: 0;\n    --date-picker-date-range-first-selection-border-radius-bottom-right: 0;\n    --date-picker-date-range-first-selection-border-radius-bottom-left: var(--date-picker-date-border-radius);\n\n    border-radius:\n      var(--date-picker-date-range-first-selection-border-radius-top-left)\n      var(--date-picker-date-range-first-selection-border-radius-top-right)\n      var(--date-picker-date-range-first-selection-border-radius-bottom-right)\n      var(--date-picker-date-range-first-selection-border-radius-bottom-left);\n  }\n\n  /* SELECTION: RANGE-MIDDLE */\n  &([selection='range-middle']:not([disabled])) {\n    background-color: var(--date-picker-date-background-range-middle-selection-hover-state-color);\n    color: var(--date-picker-date-text-range-middle-selection-hover-state-color);\n  }\n\n  &([selection='range-middle'][selected]) {\n    background-color: var(--date-picker-date-background-range-middle-selection-normal-state-color);\n  }\n\n  /* only variant of today and disabled with border */\n  &([selection='range-middle'][disabled][today]) {\n    border-color: var(--date-picker-date-border-disabled-state-color-color);\n  }\n\n  /* SELECTION: RANGE-LAST */\n\n  /* date shape changes only when NOT selected */\n  &(:hover[selection='range-last']:not([selected]):not([today])),\n  &(:active[selection='range-last']:not([selected]):not([today])) {\n    --date-picker-date-range-last-selection-border-radius-top-left: 0;\n    --date-picker-date-range-last-selection-border-radius-top-right: var(--date-picker-date-border-radius);\n    --date-picker-date-range-last-selection-border-radius-bottom-right: var(--date-picker-date-border-radius);\n    --date-picker-date-range-last-selection-border-radius-bottom-left: 0;\n\n    border-radius:\n      var(--date-picker-date-range-last-selection-border-radius-top-left)\n      var(--date-picker-date-range-last-selection-border-radius-top-right)\n      var(--date-picker-date-range-last-selection-border-radius-bottom-right)\n      var(--date-picker-date-range-last-selection-border-radius-bottom-left);\n  }\n\n  /* today = true */\n  &([today]) {\n    box-sizing: border-box;\n\n    /* TODO: update design token to use unit instead of forcing px via calc */\n    border-width: calc(var(--date-picker-today-border-width) * 1px);\n    border-style: solid;\n    border-radius: var(--date-picker-date-border-radius);\n    font-weight: var(--date-picker-today-font-weight);\n  }\n\n  &([today]:not([disabled])) {\n    border-color: var(--date-picker-today-border-color-color);\n  }\n\n  &([today][disabled]) {\n    color: var(--date-picker-today-label-disabled-state-color-color);\n  }\n\n  /* :hover and :active styling */\n  &(:hover:not([disabled])) {\n    cursor: pointer;\n  }\n\n  &(:hover:not([disabled]):not([selected])) {\n    background-color: var(--date-picker-date-background-unselected-selection-hover-state-color);\n    color: var(--date-picker-date-text-unselected-selection-hover-state-color);\n  }\n\n  &(:active:not([disabled]):not([selected])) {\n    background-color: var(--date-picker-date-background-unselected-selection-pressed-state-color);\n    color: var(--date-picker-date-text-unselected-selection-pressed-state-color);\n  }\n}\n","import { Component, Host, h, Prop, Event, EventEmitter, Element } from '@stencil/core';\n\n@Component({\n  tag: 'market-date-picker-date',\n  styleUrl: 'market-date-picker-date.css',\n  shadow: true,\n})\nexport class MarketDatePickerDate {\n  @Element() el: HTMLMarketDatePickerDateElement;\n\n  /**\n   * Functionally and visually disables the date picker date\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * String for setting date picker date selection type\n   */\n  @Prop({ reflect: true }) readonly selection: 'none' | 'single' | 'range-first' | 'range-middle' | 'range-last' =\n    'none';\n\n  /**\n   * Handles whether or not date picker date is for today's date\n   */\n  @Prop({ reflect: true }) readonly today: boolean = false;\n\n  /**\n   * Handles whether or not date picker date is selected\n   */\n  @Prop({ reflect: true }) readonly selected: boolean = false;\n\n  /**\n   * String for user to pass in value of the date\n   */\n  @Prop({ reflect: true }) readonly day: string | null;\n\n  /**\n   * String type to determine type of date selected for parent component\n   */\n  @Prop({ reflect: true }) readonly type: 'day' | 'month' | 'year';\n\n  /**\n   * Emitted when the date picker date is selected\n   */\n  @Event() marketDatePickerDateSelected: EventEmitter<{ date: HTMLMarketDatePickerDateElement }>;\n\n  /**\n   * Emitted when the date picker date is hovered or moused over\n   */\n  @Event() marketDatePickerDateMousedOver: EventEmitter<{ date: HTMLMarketDatePickerDateElement }>;\n\n  /**\n   * Emitted when the date picker date is unhovered or moused out\n   */\n  @Event() marketDatePickerDateMousedOut: EventEmitter;\n\n  /**\n   * Interaction handler that passes events back to the market-date-picker component\n   */\n  handleInteraction(e: Event) {\n    if (this.disabled || this.day?.length === 0) {\n      e.stopImmediatePropagation();\n      return;\n    }\n\n    const isKeyboardEnter = e instanceof KeyboardEvent && e.type === 'keydown' && e.key === 'Enter';\n\n    if (e.type === 'click' || isKeyboardEnter) {\n      this.marketDatePickerDateSelected.emit({ date: this.el });\n    }\n    if (e.type === 'mouseover') {\n      this.marketDatePickerDateMousedOver.emit({ date: this.el });\n    }\n\n    if (e.type === 'mouseout') {\n      this.marketDatePickerDateMousedOut.emit();\n    }\n  }\n\n  render() {\n    return (\n      <Host\n        class=\"market-date-picker-date\"\n        role={this.disabled || !this.day ? undefined : 'button'}\n        tabindex={this.disabled || !this.day ? -1 : 0}\n        aria-disabled={this.disabled}\n        onClick={(e: Event) => {\n          this.handleInteraction(e);\n        }}\n        onmouseover={(e: Event) => {\n          this.handleInteraction(e);\n        }}\n        onmouseout={(e: Event) => {\n          this.handleInteraction(e);\n        }}\n        onkeydown={(e: Event) => {\n          this.handleInteraction(e);\n        }}\n      >\n        {this.day}\n      </Host>\n    );\n  }\n}\n"],"version":3}