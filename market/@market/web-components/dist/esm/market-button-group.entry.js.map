{"file":"market-button-group.entry.js","mappings":"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","names":["BUTTON_GROUP_SPACING","BUTTON_GROUP_OVERFLOW_BUTTON_ICON_ASSET"],"sources":["src/components/market-button-group/market-button-group.css?tag=market-button-group&encapsulation=shadow","src/components/market-button-group/market-button-group.tsx"],"sourcesContent":["@import \"../../styles/mixins/component-base.css\";\n\n:host {\n  display: flex;\n\n  /* ensure button group fills available space when used inside a flex container */\n  flex-grow: 1;\n}\n\n.content {\n  display: flex;\n  flex: 1;\n  flex-flow: row nowrap;\n  gap: var(--button-group-spacing);\n}\n\n:host([alignment=\"right\"]) .content {\n  flex-direction: row-reverse;\n}\n\n:host([alignment=\"left\"]) .content {\n  justify-content: flex-start;\n}\n\n:host([alignment=\"split\"]) .content {\n  flex-direction: row-reverse;\n  justify-content: flex-end;\n\n  ::slotted(.market-button:first-of-type) {\n    margin-left: auto;\n  }\n}\n\n:host([alignment=\"fill\"]) .content {\n  flex-direction: row-reverse;\n\n  ::slotted(.market-button) {\n    flex: 1;\n  }\n}\n\n:host([alignment=\"stack\"]) .content {\n  flex-direction: column;\n}\n\n/* overflow content */\n\n[slot=\"content\"] {\n  display: flex;\n  flex-direction: column;\n  gap: var(--button-group-spacing);\n}\n\n::slotted([slot=\"overflow-buttons\"]) {\n  width: 100%;\n}\n","import { Component, Host, h, State, Element, Prop } from '@stencil/core';\nimport { getNamespacedTagFor } from '../../utils/namespace';\nimport { BUTTON_GROUP_OVERFLOW_BUTTON_ICON_ASSET, BUTTON_GROUP_SPACING } from '@market/market-theme/js/cjs/index.js';\nimport type { PositioningStrategy } from '@popperjs/core';\nimport { throttle } from 'lodash-es';\nimport { asyncRequestAnimationFrame } from '../../utils/raf';\n\nconst MAX_VISIBLE_BUTTONS = 2;\nconst DROPDOWN_MENU_BUTTON_WIDTH = 48;\nconst RESIZE_DEBOUNCE_DURATION = 16; // 60fps\n\n/**\n * @slot - Intended to slot any number of `<market-button>` components here.\n * @slot overflow-buttons - Not intended for external consumers. Used by\n * `<market-button-group>` when programmatically arranging visible vs overflow\n * buttons based on available space.\n */\n@Component({\n  tag: 'market-button-group',\n  styleUrl: 'market-button-group.css',\n  shadow: true,\n})\nexport class MarketButtonGroup {\n  @Element() el: HTMLMarketButtonGroupElement;\n\n  /**\n   * A string specifying the alignment for the button group.\n   * This will change button size and distribution across the group.\n   */\n  @Prop({ reflect: true }) readonly alignment: 'left' | 'right' | 'split' | 'fill' | 'stack' = 'right';\n\n  /**\n   * Configuration option for Popper.js (used to position `<market-popover>`).\n   * Describes the positioning strategy to use. By default, it is absolute. If\n   * your reference element is in a fixed container, use the fixed strategy.\n   * https://popper.js.org/docs/v2/constructors//#strategy\n   */\n  @Prop() readonly popoverStrategy: PositioningStrategy = 'absolute';\n\n  /**\n   * Sorted overflow and visible buttons\n   */\n  @State() private _sortedButtonEls: {\n    overflow: Array<HTMLMarketButtonElement>;\n    visible: Array<HTMLMarketButtonElement>;\n  } = {\n    overflow: [],\n    visible: [],\n  };\n\n  /**\n   * References to the button elements\n   */\n  private _buttonEls: Array<HTMLMarketButtonElement> = [];\n\n  /**\n   * Used to set the index cutoff for overflowing buttons\n   */\n  private _buttonCutoffIndex: number;\n\n  /**\n   * Observers\n   */\n  private _observers: {\n    content?: ResizeObserver;\n    host?: ResizeObserver;\n  } = {};\n\n  private getComputedWidth(el: HTMLElement) {\n    return Number.parseFloat(window.getComputedStyle(el).width);\n  }\n\n  /**\n   * Find out where the cutoff will happen.\n   * Main chunk of the overflow logic happens here\n   */\n  private async findButtonCutoffIndex(): Promise<number> {\n    if (this.alignment === 'stack') {\n      // buttons are full width so no overflow necessary\n      return this._buttonEls.length;\n    }\n\n    const buttonGroupWidth = this.getComputedWidth(this.el);\n\n    /**\n     * Temporary container where we can measure button widths\n     * https://dev.to/sstraatemans/calculate-html-element-width-before-render-4ii7\n     */\n    const tempEl = document.createElement('div');\n    tempEl.style.width = 'auto';\n    tempEl.style.position = 'absolute';\n    tempEl.style.visibility = 'hidden';\n    this.el.shadowRoot.appendChild(tempEl);\n\n    let index = 0;\n    let buttonWidths = 0;\n    for (const buttonEl of this._buttonEls) {\n      if (index === MAX_VISIBLE_BUTTONS) {\n        break;\n      }\n\n      /**\n       * Presuming that all the remaining buttons (**excluding** the current one, i.e. `buttonEl`)\n       * will be overflowed, calculate the potential dropdown menu button width.\n       * If this is the last button, it will not be followed by a `market-button-dropdown-menu`.\n       */\n      const dropdownMenuButtonWidth =\n        index + 1 === this._buttonEls.length // is this the last one?\n          ? 0\n          : BUTTON_GROUP_SPACING + DROPDOWN_MENU_BUTTON_WIDTH;\n\n      // measure the button's width in the temporary container\n      const clonedButtonEl = buttonEl.cloneNode(true) as HTMLMarketButtonElement;\n      clonedButtonEl.style.display = 'block';\n      tempEl.appendChild(clonedButtonEl);\n\n      // let the shadow DOM render within the temp container first before measuring its width\n      await asyncRequestAnimationFrame();\n      const buttonElWidth = this.getComputedWidth(tempEl);\n      tempEl.removeChild(clonedButtonEl);\n\n      // width of all the buttons so far; gap is only added for buttons after the first\n      buttonWidths += (index > 0 ? BUTTON_GROUP_SPACING : 0) + buttonElWidth;\n\n      // check if button can fit\n      const potentialWidth = buttonWidths + dropdownMenuButtonWidth;\n      if (potentialWidth >= buttonGroupWidth) {\n        // it won't fit; breaking the loop sets the cutoff\n        break;\n      }\n      ++index;\n    }\n\n    // cleanup\n    this.el.shadowRoot.removeChild(tempEl);\n    tempEl.remove();\n\n    return index;\n  }\n\n  /**\n   * Sort buttons:\n   * - split by `this._buttonCutoffIndex`\n   * - visible buttons: remove attr `[slot=\"overflow-buttons\"]`; remove `display: none;`\n   * - overflow buttons: set attr `[slot=\"overflow-buttons\"]`; add `display: none;`\n   */\n  private sortVisibleAndOverflowButtons() {\n    this._sortedButtonEls = {\n      visible: this._buttonEls.slice(0, this._buttonCutoffIndex),\n      overflow: this._buttonEls.slice(this._buttonCutoffIndex),\n    };\n    this._sortedButtonEls.visible.forEach((buttonEl) => {\n      // if (buttonEl.style.display) {\n      //   buttonEl.style.removeProperty('display');\n      // }\n      if (buttonEl.getAttribute('slot') === 'overflow-buttons') {\n        buttonEl.removeAttribute('slot');\n      }\n    });\n    this._sortedButtonEls.overflow.forEach((buttonEl) => {\n      // if (buttonEl.style.display !== 'none') {\n      //   buttonEl.style.display = 'none';\n      // }\n      if (buttonEl.getAttribute('slot') !== 'overflow-buttons') {\n        buttonEl.setAttribute('slot', 'overflow-buttons');\n      }\n    });\n  }\n\n  /**\n   * Handle screen / component resize\n   */\n  private async handleResize() {\n    if (!this.getComputedWidth(this.el)) {\n      // element isn't fully rendered yet\n      return;\n    }\n\n    const index = await this.findButtonCutoffIndex();\n    const isButtonCutoffUpdated = index !== this._buttonCutoffIndex;\n    if (isButtonCutoffUpdated) {\n      this._buttonCutoffIndex = index;\n      await asyncRequestAnimationFrame();\n      this.sortVisibleAndOverflowButtons();\n    }\n\n    this.el.style.visibility = '';\n  }\n\n  private registerSlottedButtons() {\n    const MarketButtonTagName = getNamespacedTagFor('market-button');\n    this._buttonEls = [...this.el.querySelectorAll(MarketButtonTagName)];\n  }\n\n  private throttledHandleResize = throttle(this.handleResize.bind(this), RESIZE_DEBOUNCE_DURATION);\n\n  private observeContent(el: HTMLDivElement) {\n    if (!this._observers.content) {\n      this._observers.content = new ResizeObserver(this.throttledHandleResize);\n      this._observers.content.observe(el);\n    }\n  }\n\n  connectedCallback() {\n    if (!this._observers.host) {\n      this._observers.host = new ResizeObserver(this.throttledHandleResize);\n      this._observers.host.observe(this.el);\n    }\n  }\n\n  componentWillLoad() {\n    // hide component until handleResize()\n    this.el.style.visibility = 'hidden';\n    this.registerSlottedButtons();\n    this.handleResize();\n  }\n\n  disconnectedCallback() {\n    Object.entries(this._observers).forEach(([key, observer]) => {\n      if (observer) {\n        observer.disconnect();\n        this._observers[key] = undefined;\n      }\n    });\n  }\n\n  render() {\n    const MarketButtonDropdownTagName = getNamespacedTagFor('market-button-dropdown');\n    const MarketButtonTagName = getNamespacedTagFor('market-button');\n    const MarketIconTagName = getNamespacedTagFor('market-icon');\n    return (\n      <Host class=\"market-button-group\">\n        <div class=\"content\" ref={(el) => this.observeContent(el)}>\n          <slot onSlotchange={() => this.registerSlottedButtons()}></slot>\n          {this._sortedButtonEls.overflow.length > 0 && (\n            <MarketButtonDropdownTagName no-caret popover-strategy={this.popoverStrategy}>\n              <MarketButtonTagName slot=\"trigger\">\n                <MarketIconTagName slot=\"icon\" name={BUTTON_GROUP_OVERFLOW_BUTTON_ICON_ASSET}></MarketIconTagName>\n              </MarketButtonTagName>\n              <div slot=\"content\">\n                <slot name=\"overflow-buttons\" slot=\"overflow-buttons\"></slot>\n              </div>\n            </MarketButtonDropdownTagName>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}