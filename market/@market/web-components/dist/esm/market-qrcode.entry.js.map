{"file":"market-qrcode.entry.js","mappings":";;AAAA,MAAM,2BAA2B,GAAG,MAAM,CAAC,MAAM,CAAC;AAClD,EAAE,EAAE;AACJ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AACT,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AACT,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AACT,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AACT,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AACT,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACjB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACjB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACjB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACjB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACjB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACjB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACjB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;AACtB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;AACtB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;AACtB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;AACtB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;AACtB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;AAC1B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAChC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAChC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAChC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAChC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAChC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE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,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACtB,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,OAAO;AACP,MAAM,MAAM,EAAE;AACd,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACtB,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACtB,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,OAAO;AACP,MAAM,OAAO,EAAE;AACf,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ;AACR,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,SAAS;AACT,OAAO;AACP,KAAK,CAAC,eAAe,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;AACpC,GAAG;AACH;AACA;AACA,EAAE,OAAO,cAAc,CAAC,KAAK,EAAE;AAC/B,IAAI,OAAO;AACX,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;AACrH,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;AACvH,MAAM,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AACvH,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE;AACpH,MAAM,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;AACpH,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;AACpH,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAA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E,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;AACpH,MAAM,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE;AACvH,MAAM,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;AACvH,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;AACnH,MAAM,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;AACnH,MAAM,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAA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","names":["Matrix","QRCode","QRCodeEncoder","require$$0","SquareQRCodeEncoder","require$$1","require$$2","MarketQRCodeEncoder"],"sources":["../../node_modules/@square/qrcode-encoder/lib/qrcode.js","../../node_modules/@square/qrcode-encoder/lib/square-qrcode.js","../../node_modules/@square/qrcode-encoder/lib/market-qrcode.js","../../node_modules/@square/qrcode-encoder/index.js","src/components/market-qrcode/market-qrcode.css?tag=market-qrcode&encapsulation=shadow","src/components/market-qrcode/market-qrcode.tsx"],"sourcesContent":["const ALIGNMENT_PATTERN_LOCATIONS = Object.freeze([\n  [],\n  [4, 16],\n  [4, 20],\n  [4, 24],\n  [4, 28],\n  [4, 32],\n  [4, 20, 36],\n  [4, 22, 40],\n  [4, 24, 44],\n  [4, 26, 48],\n  [4, 28, 52],\n  [4, 30, 56],\n  [4, 32, 60],\n  [4, 24, 44, 64],\n  [4, 24, 46, 68],\n  [4, 24, 48, 72],\n  [4, 28, 52, 76],\n  [4, 28, 54, 80],\n  [4, 28, 56, 84],\n  [4, 32, 60, 88],\n  [4, 26, 48, 70, 92],\n  [4, 24, 48, 72, 96],\n  [4, 28, 52, 76, 100],\n  [4, 26, 52, 78, 104],\n  [4, 30, 56, 82, 108],\n  [4, 28, 56, 84, 112],\n  [4, 32, 60, 88, 116],\n  [4, 24, 48, 72, 96, 120],\n  [4, 28, 52, 76, 100, 124],\n  [4, 24, 50, 76, 102, 128],\n  [4, 28, 54, 80, 106, 132],\n  [4, 32, 58, 84, 110, 136],\n  [4, 28, 56, 84, 112, 140],\n  [4, 32, 60, 88, 116, 144],\n  [4, 28, 52, 76, 100, 124, 148],\n  [4, 22, 48, 74, 100, 126, 152],\n  [4, 26, 52, 78, 104, 130, 156],\n  [4, 30, 56, 82, 108, 134, 160],\n  [4, 24, 52, 80, 108, 136, 164],\n  [4, 28, 56, 84, 112, 140, 168],\n]);\nconst DATA_CAPACITY = Object.freeze({\n  LOW: [\n    19, 34, 55, 80, 108, 136, 156, 194, 232, 274, 324, 370, 428, 461, 523, 589, 647, 721, 795, 861, 932, 1006, 1094,\n    1174, 1276, 1370, 1468, 1531, 1631, 1735, 1843, 1955, 2071, 2191, 2306, 2434, 2566, 2702, 2812, 2956,\n  ],\n  MEDIUM: [\n    16, 28, 44, 64, 86, 108, 124, 154, 182, 216, 254, 290, 334, 365, 415, 453, 507, 563, 627, 669, 714, 782, 860, 914,\n    1000, 1062, 1128, 1193, 1267, 1373, 1455, 1541, 1631, 1725, 1812, 1914, 1992, 2102, 2216, 2334,\n  ],\n  QUARTER: [\n    13, 22, 34, 48, 62, 76, 88, 110, 132, 154, 180, 206, 244, 261, 295, 325, 367, 397, 445, 485, 512, 568, 614, 664,\n    718, 754, 808, 871, 911, 985, 1033, 1115, 1171, 1231, 1286, 1354, 1426, 1502, 1582, 1666,\n  ],\n  HIGH: [\n    9, 16, 26, 36, 46, 60, 66, 86, 100, 122, 140, 158, 180, 197, 223, 253, 283, 313, 341, 385, 406, 442, 464, 514, 538,\n    596, 628, 661, 701, 745, 793, 845, 901, 961, 986, 1054, 1096, 1142, 1222, 1276,\n  ],\n});\nconst ENCODING = Object.freeze({\n  NUMERIC: 'NUMERIC',\n  ALPHANUMERIC: 'ALPHANUMERIC',\n  KANJI: 'KANJI',\n  BYTE: 'BYTE',\n});\nconst ERROR_CORRECTION = Object.freeze({\n  LOW: 'LOW',\n  MEDIUM: 'MEDIUM',\n  QUARTER: 'QUARTER',\n  HIGH: 'HIGH',\n});\n\n/**\n * CLASS BitWriter\n * A internal class for writing bits to an Uint8Array for QRCode encoding.\n */\nclass BitWriter {\n  constructor(length) {\n    this.length = length;\n    this.content = new Uint8Array(length);\n    this.byte = 0;\n    this.bit = 0;\n  }\n\n  get bitsLeft() {\n    return (this.length - this.byte) * 8 - this.bit;\n  }\n\n  get bytesLeft() {\n    return this.bit === 0 ? this.length - this.byte : this.length - this.byte - 1;\n  }\n\n  codeForAlphaNUMERICal(char) {\n    const lookIn = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:';\n    for (let index = 0; index < lookIn.length; index++) {\n      if (lookIn[index] === char) return index;\n    }\n  }\n\n  completeByte() {\n    if (this.bit === 0) return;\n    this.bit = 0;\n    this.byte++;\n  }\n\n  nextPutAlphaNUMERIC(string) {\n    // Two ALPHANUMERICal characters at a time.\n    for (let last = 1; last < string.length; last += 2) {\n      this.nextPutBits(\n        this.codeForAlphaNUMERICal(string[last - 1]) * 45 + this.codeForAlphaNUMERICal(string[last]),\n        11\n      );\n    }\n    if (string.length % 2 === 1) {\n      this.nextPutBits(this.codeForAlphaNUMERICal(string[string.length - 1]), 6);\n    }\n  }\n\n  nextPutBits(int, bits) {\n    if (bits === 0) return;\n    let amount = this.bit + bits;\n    if (amount < 8) {\n      this.content[this.byte] = this.content[this.byte] | (int << (8 - amount));\n      this.bit += bits;\n    } else if (amount === 8) {\n      this.content[this.byte] = this.content[this.byte] | int;\n      this.byte++;\n      this.bit = 0;\n    } else {\n      amount -= 8;\n      let shift = int >> amount;\n      this.content[this.byte] = this.content[this.byte] | shift;\n      shift = int - (shift << amount);\n      this.byte++;\n      this.bit = 0;\n      this.nextPutBits(shift, amount);\n    }\n  }\n\n  nextPutByte(byteArray) {\n    byteArray.forEach((byte) => {\n      this.nextPutBits(byte, 8);\n    });\n  }\n\n  nextPutCompleteByte(byte) {\n    this.completeByte();\n    this.content[this.byte] = byte;\n    this.byte++;\n  }\n\n  nextPutKanji(string) {\n    for (let index = 0; index < string.length; index++) {\n      let charCode = string.charCodeAt(index);\n      if (charCode <= 0x9ffc) {\n        // in the range 0x8140 to 0x9FFC\n        charCode -= 0x8140;\n      } else {\n        // in the range 0xE040 to 0xEBBF\n        charCode -= 0xc140;\n      }\n      let lByte = charCode % 256;\n      let bByte = (charCode - lByte) / 256;\n      this.nextPutBits(bByte * 0xc0 + lByte, 13);\n    }\n  }\n\n  nextPutNumeric(string) {\n    const asNumbers = [];\n    for (let index = 0; index < string.length; index++) {\n      asNumbers.push(string.charCodeAt(index) - 48);\n    }\n    // Three NUMERICal characters at a time.\n    for (let last = 2; last < string.length; last += 3) {\n      this.nextPutBits(asNumbers[last - 2] * 100 + asNumbers[last - 1] * 10 + asNumbers[last], 10);\n    }\n    switch (string.length % 3) {\n      case 0:\n        break;\n      case 1:\n        this.nextPutBits(asNumbers[string.length - 1], 4);\n        break;\n      case 2:\n        this.nextPutBits(asNumbers[string.length - 2] * 10 + asNumbers[string.length - 1], 7);\n        break;\n    }\n  }\n}\n\n/**\n * CLASS Matrix\n * A class for manipulating a 2D array.\n */\nclass Matrix {\n  static withAll(width, height, fill) {\n    const content = [];\n    if (fill === undefined) {\n      for (let row = 0; row < height; row++) {\n        content.push(new Array(width));\n      }\n    } else {\n      for (let row = 0; row < height; row++) {\n        content.push(new Array(width).fill(fill));\n      }\n    }\n    return new this(content);\n  }\n\n  constructor(content) {\n    this.content = content;\n  }\n\n  at(x, y) {\n    return this.content[y][x];\n  }\n\n  copy() {\n    return new this.constructor(this.content.map((row) => row.slice()));\n  }\n\n  fill(x, y, width, height, value) {\n    for (let top = y; top < y + height; top++) {\n      let row = this.content[top];\n      for (let col = x; col < x + width; col++) {\n        row[col] = value;\n      }\n    }\n  }\n\n  get height() {\n    return this.content.length;\n  }\n\n  put(x, y, value) {\n    return (this.content[y][x] = value);\n  }\n\n  get width() {\n    return this.content[0].length;\n  }\n}\n\n/**\n * CLASS BooleanMatrix\n * A class for keeping and manipulating 2D boolean data.\n */\nclass BooleanMatrix extends Matrix {\n  static forIntegerArray(width, height, array) {\n    const content = [];\n    for (let y = 0; y < height; y++) {\n      let rowInteger = array[y];\n      const row = [];\n      for (let x = width - 1; x >= 0; x--) {\n        if (rowInteger % 2 === 1) {\n          row.unshift(true);\n          rowInteger--;\n        } else {\n          row.unshift(false);\n        }\n        rowInteger = rowInteger / 2;\n      }\n      content.push(row);\n    }\n    return new this(content);\n  }\n\n  asIntegerArray() {\n    return this.content.map((row) => {\n      let integer = 0;\n      row.forEach((bool) => {\n        integer *= 2;\n        if (bool === true) integer++;\n      });\n      return integer;\n    });\n  }\n\n  bitAt(x, y) {\n    return this.at(x, y) ? 1 : 0;\n  }\n\n  fillAlignmentPatternAt(x, y) {\n    for (let size = 0; size < 4; size++) {\n      this.content[y][x + size] = true;\n      this.content[y + 4][x + size + 1] = true;\n      this.content[y + 1 + size][x] = true;\n      this.content[y + size][x + 4] = true;\n    }\n    this.content[y + 2][x + 2] = true;\n  }\n\n  fillFinderPatternAt(x, y) {\n    for (let size = 0; size < 6; size++) {\n      this.content[y][x + size] = true;\n      this.content[y + 6][x + size + 1] = true;\n      this.content[y + 1 + size][x] = true;\n      this.content[y + size][x + 6] = true;\n    }\n    this.fill(x + 2, y + 2, 3, 3, true);\n  }\n}\n\n/**\n * CLASS QRCodeMap\n * An instance holds the mapping for a QR code at a version and level of error correction.\n * The instances are cached so they can be reused. The map has the responsibility for adding\n * error correction to the codewords, positioning those codewords as data into a boolean\n * matrix, and masking that matrix. Instances are cached so this can be used as a service.\n */\nclass QRCodeMap extends Matrix {\n  // CHUNKING\n  static chunkingAt(errorCorrection, version) {\n    return {\n      LOW: [\n        [[1, 26, 19]],\n        [[1, 44, 34]],\n        [[1, 70, 55]],\n        [[1, 100, 80]],\n        [[1, 134, 108]],\n        [[2, 86, 68]],\n        [[2, 98, 78]],\n        [[2, 121, 97]],\n        [[2, 146, 116]],\n        [\n          [2, 86, 68],\n          [2, 87, 69],\n        ],\n        [[4, 101, 81]],\n        [\n          [2, 116, 92],\n          [2, 117, 93],\n        ],\n        [[4, 133, 107]],\n        [\n          [3, 145, 115],\n          [1, 146, 116],\n        ],\n        [\n          [5, 109, 87],\n          [1, 110, 88],\n        ],\n        [\n          [5, 122, 98],\n          [1, 123, 99],\n        ],\n        [\n          [1, 135, 107],\n          [5, 136, 108],\n        ],\n        [\n          [5, 150, 120],\n          [1, 151, 121],\n        ],\n        [\n          [3, 141, 113],\n          [4, 142, 114],\n        ],\n        [\n          [3, 135, 107],\n          [5, 136, 108],\n        ],\n        [\n          [4, 144, 116],\n          [4, 145, 117],\n        ],\n        [\n          [2, 139, 111],\n          [7, 140, 112],\n        ],\n        [\n          [4, 151, 121],\n          [5, 152, 122],\n        ],\n        [\n          [6, 147, 117],\n          [4, 148, 118],\n        ],\n        [\n          [8, 132, 106],\n          [4, 133, 107],\n        ],\n        [\n          [10, 142, 114],\n          [2, 143, 115],\n        ],\n        [\n          [8, 152, 122],\n          [4, 153, 123],\n        ],\n        [\n          [3, 147, 117],\n          [10, 148, 118],\n        ],\n        [\n          [7, 146, 116],\n          [7, 147, 117],\n        ],\n        [\n          [5, 145, 115],\n          [10, 146, 116],\n        ],\n        [\n          [13, 145, 115],\n          [3, 146, 116],\n        ],\n        [[17, 145, 115]],\n        [\n          [17, 145, 115],\n          [1, 146, 116],\n        ],\n        [\n          [13, 145, 115],\n          [6, 146, 116],\n        ],\n        [\n          [12, 151, 121],\n          [7, 152, 122],\n        ],\n        [\n          [6, 151, 121],\n          [14, 152, 122],\n        ],\n        [\n          [17, 152, 122],\n          [4, 153, 123],\n        ],\n        [\n          [4, 152, 122],\n          [18, 153, 123],\n        ],\n        [\n          [20, 147, 117],\n          [4, 148, 118],\n        ],\n        [\n          [19, 148, 118],\n          [6, 149, 119],\n        ],\n      ],\n      HIGH: [\n        [[1, 26, 9]],\n        [[1, 44, 16]],\n        [[2, 35, 13]],\n        [[4, 25, 9]],\n        [\n          [2, 33, 11],\n          [2, 34, 12],\n        ],\n        [[4, 43, 15]],\n        [\n          [4, 39, 13],\n          [1, 40, 14],\n        ],\n        [\n          [4, 40, 14],\n          [2, 41, 15],\n        ],\n        [\n          [4, 36, 12],\n          [4, 37, 13],\n        ],\n        [\n          [6, 43, 15],\n          [2, 44, 16],\n        ],\n        [\n          [3, 36, 12],\n          [8, 37, 13],\n        ],\n        [\n          [7, 42, 14],\n          [4, 43, 15],\n        ],\n        [\n          [12, 33, 11],\n          [4, 34, 12],\n        ],\n        [\n          [11, 36, 12],\n          [5, 37, 13],\n        ],\n        [\n          [11, 36, 12],\n          [7, 37, 13],\n        ],\n        [\n          [3, 45, 15],\n          [13, 46, 16],\n        ],\n        [\n          [2, 42, 14],\n          [17, 43, 15],\n        ],\n        [\n          [2, 42, 14],\n          [19, 43, 15],\n        ],\n        [\n          [9, 39, 13],\n          [16, 40, 14],\n        ],\n        [\n          [15, 43, 15],\n          [10, 44, 16],\n        ],\n        [\n          [19, 46, 16],\n          [6, 47, 17],\n        ],\n        [[34, 37, 13]],\n        [\n          [16, 45, 15],\n          [14, 46, 16],\n        ],\n        [\n          [30, 46, 16],\n          [2, 47, 17],\n        ],\n        [\n          [22, 45, 15],\n          [13, 46, 16],\n        ],\n        [\n          [33, 46, 16],\n          [4, 47, 17],\n        ],\n        [\n          [12, 45, 15],\n          [28, 46, 16],\n        ],\n        [\n          [11, 45, 15],\n          [31, 46, 16],\n        ],\n        [\n          [19, 45, 15],\n          [26, 46, 16],\n        ],\n        [\n          [23, 45, 15],\n          [25, 46, 16],\n        ],\n        [\n          [23, 45, 15],\n          [28, 46, 16],\n        ],\n        [\n          [19, 45, 15],\n          [35, 46, 16],\n        ],\n        [\n          [11, 45, 15],\n          [46, 46, 16],\n        ],\n        [\n          [59, 46, 16],\n          [1, 47, 17],\n        ],\n        [\n          [22, 45, 15],\n          [41, 46, 16],\n        ],\n        [\n          [2, 45, 15],\n          [64, 46, 16],\n        ],\n        [\n          [24, 45, 15],\n          [46, 46, 16],\n        ],\n        [\n          [42, 45, 15],\n          [32, 46, 16],\n        ],\n        [\n          [10, 45, 15],\n          [67, 46, 16],\n        ],\n        [\n          [20, 45, 15],\n          [61, 46, 16],\n        ],\n      ],\n      MEDIUM: [\n        [[1, 26, 16]],\n        [[1, 44, 28]],\n        [[1, 70, 44]],\n        [[2, 50, 32]],\n        [[2, 67, 43]],\n        [[4, 43, 27]],\n        [[4, 49, 31]],\n        [\n          [2, 60, 38],\n          [2, 61, 39],\n        ],\n        [\n          [3, 58, 36],\n          [2, 59, 37],\n        ],\n        [\n          [4, 69, 43],\n          [1, 70, 44],\n        ],\n        [\n          [1, 80, 50],\n          [4, 81, 51],\n        ],\n        [\n          [6, 58, 36],\n          [2, 59, 37],\n        ],\n        [\n          [8, 59, 37],\n          [1, 60, 38],\n        ],\n        [\n          [4, 64, 40],\n          [5, 65, 41],\n        ],\n        [\n          [5, 65, 41],\n          [5, 66, 42],\n        ],\n        [\n          [7, 73, 45],\n          [3, 74, 46],\n        ],\n        [\n          [10, 74, 46],\n          [1, 75, 47],\n        ],\n        [\n          [9, 69, 43],\n          [4, 70, 44],\n        ],\n        [\n          [3, 70, 44],\n          [11, 71, 45],\n        ],\n        [\n          [3, 67, 41],\n          [13, 68, 42],\n        ],\n        [[17, 68, 42]],\n        [[17, 74, 46]],\n        [\n          [4, 75, 47],\n          [14, 76, 48],\n        ],\n        [\n          [6, 73, 45],\n          [14, 74, 46],\n        ],\n        [\n          [8, 75, 47],\n          [13, 76, 48],\n        ],\n        [\n          [19, 74, 46],\n          [4, 75, 47],\n        ],\n        [\n          [22, 73, 45],\n          [3, 74, 46],\n        ],\n        [\n          [3, 73, 45],\n          [23, 74, 46],\n        ],\n        [\n          [21, 73, 45],\n          [7, 74, 46],\n        ],\n        [\n          [19, 75, 47],\n          [10, 76, 48],\n        ],\n        [\n          [2, 74, 46],\n          [29, 75, 47],\n        ],\n        [\n          [10, 74, 46],\n          [23, 75, 47],\n        ],\n        [\n          [14, 74, 46],\n          [21, 75, 47],\n        ],\n        [\n          [14, 74, 46],\n          [23, 75, 47],\n        ],\n        [\n          [12, 75, 47],\n          [26, 76, 48],\n        ],\n        [\n          [6, 75, 47],\n          [34, 76, 48],\n        ],\n        [\n          [29, 74, 46],\n          [14, 75, 47],\n        ],\n        [\n          [13, 74, 46],\n          [32, 75, 47],\n        ],\n        [\n          [40, 75, 47],\n          [7, 76, 48],\n        ],\n        [\n          [18, 75, 47],\n          [31, 76, 48],\n        ],\n      ],\n      QUARTER: [\n        [[1, 26, 13]],\n        [[1, 44, 22]],\n        [[2, 35, 17]],\n        [[2, 50, 24]],\n        [\n          [2, 33, 15],\n          [2, 34, 16],\n        ],\n        [[4, 43, 19]],\n        [\n          [2, 32, 14],\n          [4, 33, 15],\n        ],\n        [\n          [4, 40, 18],\n          [2, 41, 19],\n        ],\n        [\n          [4, 36, 16],\n          [4, 37, 17],\n        ],\n        [\n          [6, 43, 19],\n          [2, 44, 20],\n        ],\n        [\n          [4, 50, 22],\n          [4, 51, 23],\n        ],\n        [\n          [4, 46, 20],\n          [6, 47, 21],\n        ],\n        [\n          [8, 44, 20],\n          [4, 45, 21],\n        ],\n        [\n          [11, 36, 16],\n          [5, 37, 17],\n        ],\n        [\n          [5, 54, 24],\n          [7, 55, 25],\n        ],\n        [\n          [15, 43, 19],\n          [2, 44, 20],\n        ],\n        [\n          [1, 50, 22],\n          [15, 51, 23],\n        ],\n        [\n          [17, 50, 22],\n          [1, 51, 23],\n        ],\n        [\n          [17, 47, 21],\n          [4, 48, 22],\n        ],\n        [\n          [15, 54, 24],\n          [5, 55, 25],\n        ],\n        [\n          [17, 50, 22],\n          [6, 51, 23],\n        ],\n        [\n          [7, 54, 24],\n          [16, 55, 25],\n        ],\n        [\n          [11, 54, 24],\n          [14, 55, 25],\n        ],\n        [\n          [11, 54, 24],\n          [16, 55, 25],\n        ],\n        [\n          [7, 54, 24],\n          [22, 55, 25],\n        ],\n        [\n          [28, 50, 22],\n          [6, 51, 23],\n        ],\n        [\n          [8, 53, 23],\n          [26, 54, 24],\n        ],\n        [\n          [4, 54, 24],\n          [31, 55, 25],\n        ],\n        [\n          [1, 53, 23],\n          [37, 54, 24],\n        ],\n        [\n          [15, 54, 24],\n          [25, 55, 25],\n        ],\n        [\n          [42, 54, 24],\n          [1, 55, 25],\n        ],\n        [\n          [10, 54, 24],\n          [35, 55, 25],\n        ],\n        [\n          [29, 54, 24],\n          [19, 55, 25],\n        ],\n        [\n          [44, 54, 24],\n          [7, 55, 25],\n        ],\n        [\n          [39, 54, 24],\n          [14, 55, 25],\n        ],\n        [\n          [46, 54, 24],\n          [10, 55, 25],\n        ],\n        [\n          [49, 54, 24],\n          [10, 55, 25],\n        ],\n        [\n          [48, 54, 24],\n          [14, 55, 25],\n        ],\n        [\n          [43, 54, 24],\n          [22, 55, 25],\n        ],\n        [\n          [34, 54, 24],\n          [34, 55, 25],\n        ],\n      ],\n    }[errorCorrection][version - 1];\n  }\n\n  // GALOIS FIELD POLYNOMIALS\n  static fromGF256Alpha(index) {\n    return [\n      1, 2, 4, 8, 16, 32, 64, 128, 29, 58, 116, 232, 205, 135, 19, 38, 76, 152, 45, 90, 180, 117, 234, 201, 143, 3, 6,\n      12, 24, 48, 96, 192, 157, 39, 78, 156, 37, 74, 148, 53, 106, 212, 181, 119, 238, 193, 159, 35, 70, 140, 5, 10, 20,\n      40, 80, 160, 93, 186, 105, 210, 185, 111, 222, 161, 95, 190, 97, 194, 153, 47, 94, 188, 101, 202, 137, 15, 30, 60,\n      120, 240, 253, 231, 211, 187, 107, 214, 177, 127, 254, 225, 223, 163, 91, 182, 113, 226, 217, 175, 67, 134, 17,\n      34, 68, 136, 13, 26, 52, 104, 208, 189, 103, 206, 129, 31, 62, 124, 248, 237, 199, 147, 59, 118, 236, 197, 151,\n      51, 102, 204, 133, 23, 46, 92, 184, 109, 218, 169, 79, 158, 33, 66, 132, 21, 42, 84, 168, 77, 154, 41, 82, 164,\n      85, 170, 73, 146, 57, 114, 228, 213, 183, 115, 230, 209, 191, 99, 198, 145, 63, 126, 252, 229, 215, 179, 123, 246,\n      241, 255, 227, 219, 171, 75, 150, 49, 98, 196, 149, 55, 110, 220, 165, 87, 174, 65, 130, 25, 50, 100, 200, 141, 7,\n      14, 28, 56, 112, 224, 221, 167, 83, 166, 81, 162, 89, 178, 121, 242, 249, 239, 195, 155, 43, 86, 172, 69, 138, 9,\n      18, 36, 72, 144, 61, 122, 244, 245, 247, 243, 251, 235, 203, 139, 11, 22, 44, 88, 176, 125, 250, 233, 207, 131,\n      27, 54, 108, 216, 173, 71, 142,\n    ][index];\n  }\n\n  static polynomial(size) {\n    // cache the polynomials\n    if (this.polynomials.length >= size) {\n      return this.polynomials[size - 1];\n    }\n    let polynomial = this.polynomials[this.polynomials.length - 1];\n    for (let multiplier = this.polynomials.length; multiplier < size; multiplier++) {\n      let factor = new Uint8Array(2);\n      factor[1] = multiplier;\n      polynomial = this.product(polynomial, factor);\n      this.polynomials.push(polynomial);\n    }\n    return polynomial;\n  }\n\n  static product(first, second) {\n    let product = new Uint8Array(first.length + second.length - 1);\n    first.forEach((firstValue, firstIndex) => {\n      second.forEach((secondValue, secondIndex) => {\n        let productIndex = firstIndex + secondIndex;\n        product[productIndex] = this.fromGF256Alpha((firstValue + secondValue) % 255) ^ product[productIndex];\n      });\n    });\n    return product.map((entry) => this.toGF256Alpha(entry));\n  }\n\n  static quotient(dividend, divisor) {\n    let quotient = new Uint8Array(dividend.length + divisor.length - 1);\n    for (let index = 0; index < dividend.length; index++) quotient[index] = dividend[index];\n    for (let dividendIndex = 0; dividendIndex < dividend.length; dividendIndex++) {\n      let startEntry = quotient[dividendIndex];\n      if (startEntry !== 0) {\n        startEntry = this.toGF256Alpha(startEntry);\n        divisor.forEach((alpha, divisorIndex) => {\n          let quotientIndex = dividendIndex + divisorIndex;\n          quotient[quotientIndex] = this.fromGF256Alpha((startEntry + alpha) % 255) ^ quotient[quotientIndex];\n        });\n      }\n    }\n    return quotient.slice(quotient.length - divisor.length + 1);\n  }\n\n  static toGF256Alpha(index) {\n    return [\n      0, 0, 1, 25, 2, 50, 26, 198, 3, 223, 51, 238, 27, 104, 199, 75, 4, 100, 224, 14, 52, 141, 239, 129, 28, 193, 105,\n      248, 200, 8, 76, 113, 5, 138, 101, 47, 225, 36, 15, 33, 53, 147, 142, 218, 240, 18, 130, 69, 29, 181, 194, 125,\n      106, 39, 249, 185, 201, 154, 9, 120, 77, 228, 114, 166, 6, 191, 139, 98, 102, 221, 48, 253, 226, 152, 37, 179, 16,\n      145, 34, 136, 54, 208, 148, 206, 143, 150, 219, 189, 241, 210, 19, 92, 131, 56, 70, 64, 30, 66, 182, 163, 195, 72,\n      126, 110, 107, 58, 40, 84, 250, 133, 186, 61, 202, 94, 155, 159, 10, 21, 121, 43, 78, 212, 229, 172, 115, 243,\n      167, 87, 7, 112, 192, 247, 140, 128, 99, 13, 103, 74, 222, 237, 49, 197, 254, 24, 227, 165, 153, 119, 38, 184,\n      180, 124, 17, 68, 146, 217, 35, 32, 137, 46, 55, 63, 209, 91, 149, 188, 207, 205, 144, 135, 151, 178, 220, 252,\n      190, 97, 242, 86, 211, 171, 20, 42, 93, 158, 132, 60, 57, 83, 71, 109, 65, 162, 31, 45, 67, 216, 183, 123, 164,\n      118, 196, 23, 73, 236, 127, 12, 111, 246, 108, 161, 59, 82, 41, 157, 85, 170, 251, 96, 134, 177, 187, 204, 62, 90,\n      203, 89, 95, 176, 156, 169, 160, 81, 11, 245, 22, 235, 122, 117, 44, 215, 79, 174, 213, 233, 230, 231, 173, 232,\n      116, 214, 244, 234, 168, 80, 88, 175,\n    ][index];\n  }\n\n  // MASKS\n  static get masks() {\n    if (this.maskArray.length === 0) {\n      [\n        (x, y) => (x + y) % 2 === 0,\n        (x, y) => y % 2 === 0,\n        (x) => x % 3 === 0,\n        (x, y) => (x + y) % 3 === 0,\n        (x, y) => ((y - (y % 2)) / 2 + (x - (x % 3)) / 3) % 2 === 0,\n        (x, y) => ((x * y) % 2) + ((x * y) % 3) === 0,\n        (x, y) => (x * y + ((x * y) % 3)) % 2 === 0,\n        (x, y) => (((x * y) % 3) + x + y) % 2 === 0,\n      ].forEach((generator) => {\n        const content = [];\n        for (let y = 0; y < 12; y++) {\n          const row = [];\n          for (let x = 0; x < 12; x++) {\n            row.push(generator(x, y));\n          }\n          content.push(row);\n        }\n        this.maskArray.push(new BooleanMatrix(content));\n      });\n    }\n    return this.maskArray;\n  }\n\n  // INSTANCE CREATION\n  static for(errorCorrection, version) {\n    // cache the instances\n    let instance = this.instances[errorCorrection + version];\n    if (instance === undefined) {\n      const dimension = version * 4 + 17;\n      const content = [];\n      for (let row = 0; row < dimension; row++) {\n        content.push(new Array(dimension).fill(this.AVAILABLE));\n      }\n      instance = new this(content, errorCorrection, version);\n      this.instances[errorCorrection + version] = instance;\n    }\n    return instance;\n  }\n\n  // INSTANCE\n  // chunking\n  // chunkingOffsets          where each chunk can be found in the data\n  // errorCorrection\n  // errorCorrectionCapacity  the number of codewords that can be messed up\n  //                          (1x for erasure, 2x for miscoding) per chunk\n  // version\n  constructor(content, errorCorrection, version) {\n    super(content);\n    this.errorCorrection = errorCorrection;\n    this.version = version;\n    this.initialize();\n  }\n\n  initialize() {\n    // calculate misdecodeProtectionCodewords\n    let misdecodeProtectionCodewords = 0;\n    if (this.errorCorrection === ERROR_CORRECTION.LOW) {\n      if (this.version === 1) {\n        misdecodeProtectionCodewords = 3;\n      } else if (this.version === 2) {\n        misdecodeProtectionCodewords = 2;\n      } else if (this.version === 3) {\n        misdecodeProtectionCodewords = 1;\n      }\n    } else if (this.version === 1) {\n      if (this.errorCorrection === ERROR_CORRECTION.MEDIUM) {\n        misdecodeProtectionCodewords = 2;\n      } else {\n        misdecodeProtectionCodewords = 1;\n      }\n    }\n    // get data and errorCorrection\n    this.chunking = this.constructor.chunkingAt(this.errorCorrection, this.version);\n    const data = [];\n    const errorCorrection = [];\n    let dataWidth = 0;\n    let errorCorrectionWidth = 0;\n    const errorCorrectionCapacity = [];\n    const chunkingOffsets = [];\n    let chunkingOffset = 0;\n    let chunk = 0;\n    this.chunking.forEach((arr) => {\n      for (let i = 0; i < arr[0]; i++) {\n        let byte = 0;\n        chunkingOffsets.push(chunkingOffset * 8);\n        chunkingOffset += arr[1];\n        const dataI = [];\n        const numberOfDataCodewords = arr[2];\n        for (let j = 0; j < numberOfDataCodewords; j++) {\n          dataI.push({ chunk, byte });\n          byte++;\n        }\n        data.push(dataI);\n        dataWidth = Math.max(dataWidth, dataI.length);\n        const errorCorrectionI = [];\n        const numberOfErrorCorrectionCodewords = arr[1] - numberOfDataCodewords;\n        for (let j = 0; j < numberOfErrorCorrectionCodewords; j++) {\n          errorCorrectionI.push({ chunk, byte });\n          byte++;\n        }\n        errorCorrection.push(errorCorrectionI);\n        errorCorrectionWidth = Math.max(errorCorrectionWidth, errorCorrectionI.length);\n        errorCorrectionCapacity.push(numberOfErrorCorrectionCodewords - misdecodeProtectionCodewords);\n        chunk++;\n      }\n    });\n    this.chunkingOffsets = chunkingOffsets;\n    this.errorCorrectionCapacity = errorCorrectionCapacity;\n    // combine the data and errorCorrection\n    const combined = [];\n    for (let column = 0; column < dataWidth; column++) {\n      data.forEach((row) => {\n        if (row.length > column) combined.push(row[column]);\n      });\n    }\n    for (let column = 0; column < errorCorrectionWidth; column++) {\n      errorCorrection.forEach((row) => {\n        if (row.length > column) combined.push(row[column]);\n      });\n    }\n    // create the pixels\n    const pixels = [];\n    combined.forEach((byteAndChunk) => {\n      const byte = byteAndChunk.byte;\n      const chunk = byteAndChunk.chunk;\n      for (let bit = 0; bit < 8; bit++) {\n        pixels.push({ chunk, byte, bit });\n      }\n    });\n    // finder patterns & format information\n    const dimension = this.width;\n    this.fill(0, 0, 9, 9, this.constructor.AVOID);\n    this.fill(dimension - 8, 0, 8, 9, this.constructor.AVOID);\n    this.fill(0, dimension - 8, 9, 8, this.constructor.AVOID);\n    // version information\n    if (this.version > 6) {\n      this.fill(dimension - 11, 0, 3, 6, this.constructor.AVOID);\n      this.fill(0, dimension - 11, 6, 3, this.constructor.AVOID);\n    }\n    // timing patterns\n    this.fill(9, 6, dimension - 17, 1, this.constructor.AVOID);\n    this.fill(6, 9, 1, dimension - 17, this.constructor.AVOID);\n    // alignment patterns\n    for (const position of QRCode.alignmentPatternPositions(this.version)) {\n      this.fill(position.x, position.y, 5, 5, this.constructor.AVOID);\n    }\n    // fill the pixels\n    let x = dimension - 2;\n    let y = dimension;\n    pixels.forEach((pixel) => {\n      // get next position\n      do {\n        let shift;\n        let halfOdd = ((x - (x % 2)) / 2) % 2 === 1;\n        if (x === 6) {\n          shift = false;\n          x = 5;\n        } else if (x < 6) {\n          shift = x % 2 === 1;\n        } else {\n          shift = x % 2 === 0;\n        }\n        if (shift) {\n          x--;\n        } else if (halfOdd) {\n          if (y === 0) {\n            x--;\n          } else {\n            x++;\n            y--;\n          }\n        } else {\n          if (y + 1 === dimension) {\n            x--;\n          } else {\n            x++;\n            y++;\n          }\n        }\n      } while (this.at(x, y) === this.constructor.AVOID && x > -1);\n      // place the bit\n      this.put(x, y, pixel);\n    });\n  }\n\n  codewordsFor(codewords) {\n    let bytePosition = 0;\n    const withErrorCorrection = [];\n    this.chunking.forEach((arr) => {\n      for (let i = 0; i < arr[0]; i++) {\n        const data = codewords.slice(bytePosition, bytePosition + arr[2]);\n        bytePosition += arr[2];\n        const errorCorrection = this.constructor.quotient(data, this.constructor.polynomial(arr[1] - arr[2]));\n        withErrorCorrection.push(...data);\n        withErrorCorrection.push(...errorCorrection);\n      }\n    });\n    return withErrorCorrection;\n  }\n\n  dataFor(codewords) {\n    // convert to bits\n    const bits = [];\n    codewords.forEach((byte) => {\n      let remainder = byte;\n      [128, 64, 32, 16, 8, 4, 2, 1].forEach((subtract) => {\n        if (remainder >= subtract) {\n          bits.push(true);\n          remainder -= subtract;\n        } else {\n          bits.push(false);\n        }\n      });\n    });\n    this.bits = bits;\n    // place bits in matrix\n    const dimension = this.content.length;\n    const encodedData = BooleanMatrix.withAll(dimension, dimension, false);\n    for (let y = 0; y < dimension; y++) {\n      for (let x = 0; x < dimension; x++) {\n        const pixel = this.at(x, y);\n        if (this.isDataPixel(pixel)) {\n          encodedData.put(x, y, bits[this.chunkingOffsets[pixel.chunk] + pixel.byte * 8 + pixel.bit]);\n        }\n      }\n    }\n    return encodedData;\n  }\n\n  isDataPixel(pixel) {\n    return pixel !== this.constructor.AVOID && pixel !== this.constructor.AVAILABLE;\n  }\n\n  maskedDataFor(data) {\n    const dimension = data.height;\n    return this.constructor.masks.map((mask) => {\n      const masked = BooleanMatrix.withAll(dimension, dimension);\n      for (let x = 0; x < dimension; x++) {\n        for (let y = 0; y < dimension; y++) {\n          let value = data.at(x, y);\n          if (this.at(x, y) !== QRCodeMap.AVOID) {\n            if (mask.at(x % 12, y % 12)) value = !value;\n          }\n          masked.put(x, y, value);\n        }\n      }\n      return masked;\n    });\n  }\n\n  // TESTING\n  asIntegerArray() {\n    return this.content.map((row) => {\n      let integer = 0;\n      row.forEach((pixel) => {\n        integer *= 2;\n        if (this.isDataPixel(pixel)) integer++;\n      });\n      return integer;\n    });\n  }\n}\n// static variables\nQRCodeMap.AVAILABLE = 'available';\nQRCodeMap.AVOID = 'avoid';\nQRCodeMap.GENERATOR_FUNCTIONS = [\n  (x, y) => (x + y) % 2 === 0,\n  (x, y) => y % 2 === 0,\n  (x) => x % 3 === 0,\n  (x, y) => (x + y) % 3 === 0,\n  (x, y) => ((y - (y % 2)) / 2 + (x - (x % 3)) / 3) % 2 === 0,\n  (x, y) => ((x * y) % 2) + ((x * y) % 3) === 0,\n  (x, y) => (x * y + ((x * y) % 3)) % 2 === 0,\n  (x, y) => (((x * y) % 3) + x + y) % 2 === 0,\n];\nQRCodeMap.instances = {};\nQRCodeMap.maskArray = [];\nQRCodeMap.polynomials = [new Uint8Array(2)];\n\n/**\n * CLASS QRCode\n * This represents an encoded QRCode based on the following:\n *   content         the string to encode\n *   options         an object with the options, such as the ECI integer and errorCorrection\n * An encoder generates the following:\n *   data            the BooleanMatrix of mapped data, along with the format and version information\n *   eci             (see above)\n *   encoding        'NUMERIC' | 'ALPHANUMERIC' | 'KANJI' | BYTE\n *   errorCorrection (see above)\n *   version         the QRCode version from 1 to 40.\n * It also provides pattern positions and derivative information.\n */\nclass QRCode {\n  static alignmentPatternPositions(version) {\n    let locations = ALIGNMENT_PATTERN_LOCATIONS[version - 1];\n    if (locations.length === 0) return [];\n    const positions = [];\n    // top and left\n    const first = locations[0];\n    locations.slice(1, locations.length - 1).forEach((location) => {\n      positions.push({\n        x: first,\n        y: location,\n      });\n      positions.push({\n        x: location,\n        y: first,\n      });\n    });\n    // others\n    locations = locations.slice(1);\n    locations.forEach((y) => {\n      locations.forEach((x) => {\n        positions.push({ x, y });\n      });\n    });\n    return positions;\n  }\n\n  static finderPatternPositions(version) {\n    const far = 4 * version + 10;\n    return [\n      { x: 0, y: 0 },\n      { x: 0, y: far },\n      { x: far, y: 0 },\n    ];\n  }\n\n  static timingPatternPositions(version) {\n    const positions = [];\n    const far = 4 * version + 9;\n    for (let position = 8; position < far; position += 2) {\n      positions.push({ x: position, y: 6 });\n      positions.push({ x: 6, y: position });\n    }\n    return positions;\n  }\n\n  constructor(content, options) {\n    if (content === undefined || content.length === 0) throw 'no content to encode';\n    this.content = content;\n    this.options = options || {};\n    if ('eci' in this.options) this.eci = this.options.eci;\n    if ('errorCorrection' in this.options) this.errorCorrection = this.options.errorCorrection;\n  }\n\n  get alignmentPatternPositions() {\n    return this.constructor.alignmentPatternPositions(this.version);\n  }\n\n  get dimension() {\n    return this.version * 4 + 17;\n  }\n\n  get encoding() {\n    return this._encoding;\n  }\n\n  set encoding(string) {\n    this._encoding = string;\n  }\n\n  get finderPatternPositions() {\n    return this.constructor.finderPatternPositions(this.version);\n  }\n\n  get hasEci() {\n    return this.eci !== undefined && this.eci !== 3;\n  }\n\n  get hasAlignmentPattern() {\n    return this.version > 1;\n  }\n\n  get timingPatternPositions() {\n    return this.constructor.timingPatternPositions(this.version);\n  }\n}\n// static variables\nQRCode.MAX_VERSION = 40;\n\n/**\n * CLASS QRCodeEncoder\n * This class does the encoding work for the QRCode class, hiding the algorithmic details and\n * intermediate step data. It populates the QRCode with encoding, version, errorCorrection, and data.\n * It is only exported to be used in tests.\n */\nclass QRCodeEncoder {\n  constructor(contents, options) {\n    this.code = new QRCode(contents, options);\n    this.encode();\n  }\n\n  encode() {\n    this.initializeEncoding();\n    this.initializeVersion();\n    this.initializeCodewords();\n    this.initializeMapping();\n    this.initializeMasking();\n  }\n\n  initializeCodewords() {\n    const writer = new BitWriter(DATA_CAPACITY[this.code.errorCorrection][this.code.version - 1]);\n    switch (this.code.encoding) {\n      case ENCODING.NUMERIC:\n        // mode\n        writer.nextPutBits(1, 4);\n        // number of bits\n        if (this.code.version < 10) {\n          writer.nextPutBits(this.length, 10);\n        } else if (this.code.version < 27) {\n          writer.nextPutBits(this.length, 12);\n        } else {\n          writer.nextPutBits(this.length, 14);\n        }\n        // content\n        writer.nextPutNumeric(this.code.content);\n        break;\n      case ENCODING.ALPHANUMERIC:\n        // mode\n        writer.nextPutBits(2, 4);\n        // number of bits\n        if (this.code.version < 10) {\n          writer.nextPutBits(this.length, 9);\n        } else if (this.code.version < 27) {\n          writer.nextPutBits(this.length, 11);\n        } else {\n          writer.nextPutBits(this.length, 13);\n        }\n        // content\n        writer.nextPutAlphaNUMERIC(this.code.content);\n        break;\n      case ENCODING.KANJI:\n        // mode\n        writer.nextPutBits(8, 8);\n        // number of bits\n        if (this.code.version < 10) {\n          writer.nextPutBits(this.length, 8);\n        } else if (this.code.version < 27) {\n          writer.nextPutBits(this.length, 10);\n        } else {\n          writer.nextPutBits(this.length, 12);\n        }\n        // content\n        writer.nextPutKanji(this.code.content);\n        break;\n      case ENCODING.BYTE:\n        if (this.code.hasEci) {\n          // specife ECI mode\n          writer.nextPutBits(7, 4);\n          // Add the ECI assignment number\n          if (this.code.eci < 128) {\n            writer.nextPutBits(0, 1);\n            writer.nextPutBits(this.code.eci, 7);\n          } else if (this.code.eci < 16384) {\n            writer.nextPutBits(2, 2);\n            writer.nextPutBits(this.code.eci, 14);\n          } else {\n            writer.nextPutBits(6, 3);\n            writer.nextPutBits(this.code.eci, 21);\n          }\n        }\n        // mode\n        writer.nextPutBits(4, 4);\n        // number of bits\n        if (this.code.version < 10) {\n          writer.nextPutBits(this.length, 8);\n        } else {\n          writer.nextPutBits(this.length, 16);\n        }\n        // content\n        writer.nextPutByte(this.bytes);\n        break;\n    }\n    // Terminate the sequence / Skip to next byte for error correction\n    if (writer.bitsLeft > 3) writer.nextPutBits(0, 4);\n    // Add error correction sequence, alternating between 11101100 and 00010001\n    const bytesLeft = writer.bytesLeft;\n    for (let index = 0; index < bytesLeft; index++) {\n      writer.nextPutCompleteByte(index % 2 === 0 ? 236 : 17);\n    }\n    this.codewords = writer.content;\n  }\n\n  initializeEncoding() {\n    if (this.code.hasEci) {\n      this.code.encoding = ENCODING.BYTE;\n      if (this.code.eci === 3) {\n        // jis\n        this.length = this.code.content.length;\n        this.bytes = [];\n        for (let i = 0; i < length; i++) {\n          this.bytes.push(this.code.content.charCodeAt(i) % 128);\n        }\n      } else if (this.code.eci === 25) {\n        // utf-16be\n        this.bytes = this.toUtf16Bytes(this.code.content);\n        this.length = this.bytes.length;\n      } else if (this.code.eci === 26) {\n        // utf-8\n        this.bytes = this.toUtf8Bytes(this.code.content);\n        this.length = this.bytes.length;\n      } else {\n        this.length = this.code.content.length;\n        this.bytes = [];\n        for (let i = 0; i < length; i++) {\n          this.bytes.push(this.code.content.charCodeAt(i) % 256);\n        }\n      }\n    } else if (/^\\d*$/.test(this.code.content)) {\n      this.code.encoding = ENCODING.NUMERIC;\n      this.length = this.code.content.length;\n    } else if (/^[A-Z\\d\\dA-Z $%*+-./:]+$/.test(this.code.content)) {\n      this.code.encoding = ENCODING.ALPHANUMERIC;\n      this.length = this.code.content.length;\n    } else if (/^[\\u8140-\\u9ffc\\ue040-\\uebbf]+$/.test(this.code.content)) {\n      this.code.encoding = ENCODING.KANJI;\n      this.length = this.code.content.length;\n    } else {\n      this.code.encoding = ENCODING.BYTE;\n      this.bytes = this.toUtf8Bytes(this.code.content);\n      this.length = this.bytes.length;\n      // use utf-8 encoding if it is needed, jis if that is sufficient\n      this.code.eci = this.length === this.code.content.length ? 3 : 26;\n    }\n  }\n\n  initializeMapping() {\n    this.map = QRCodeMap.for(this.code.errorCorrection, this.code.version);\n    this.mapCodewords = this.map.codewordsFor(this.codewords);\n    this.mapData = this.map.dataFor(this.mapCodewords);\n  }\n\n  initializeMasking() {\n    // Get the masked choices\n    const choices = this.map.maskedDataFor(this.mapData);\n    // Find the one with the lowest penalty\n    let data;\n    let dataIndex;\n    let lowestPenalty = 1000000;\n    choices.forEach((matrix, index) => {\n      const penalty = this.penaltyForMatrix(matrix);\n      if (penalty < lowestPenalty) {\n        lowestPenalty = penalty;\n        data = matrix;\n        dataIndex = index;\n      }\n    });\n    this.lowestPenalty = lowestPenalty;\n    // Generate the format information\n    let format = [1, 0, 3, 2][this.errorCorrections.indexOf(this.code.errorCorrection)];\n    format = (8 * format + dataIndex) * 1024;\n    let errorCorrection = format;\n    for (let i = 14; i >= 10; i--) {\n      if (errorCorrection >= Math.pow(2, i)) {\n        errorCorrection = (Math.pow(2, i - 10) * 1335) ^ errorCorrection;\n      }\n    }\n    format = (format + errorCorrection) ^ 21522;\n    // Place the format information\n    const dimension = this.code.dimension;\n    [\n      [8, 0, dimension - 1, 8],\n      [8, 1, dimension - 2, 8],\n      [8, 2, dimension - 3, 8],\n      [8, 3, dimension - 4, 8],\n      [8, 4, dimension - 5, 8],\n      [8, 5, dimension - 6, 8],\n      [8, 7, dimension - 7, 8],\n      [8, 8, dimension - 8, 8],\n      [7, 8, 8, dimension - 7],\n      [5, 8, 8, dimension - 6],\n      [4, 8, 8, dimension - 5],\n      [3, 8, 8, dimension - 4],\n      [2, 8, 8, dimension - 3],\n      [1, 8, 8, dimension - 2],\n      [0, 8, 8, dimension - 1],\n    ].forEach((arr, index) => {\n      if ((Math.pow(2, index) & format) > 0) {\n        data.put(arr[0], arr[1], true);\n        data.put(arr[2], arr[3], true);\n      }\n    });\n    // Add dark module\n    data.put(8, dimension - 8, true);\n    // Version information\n    if (this.code.version > 6) {\n      // Generate the bitVersion information\n      let bitVersion = this.code.version * 4096;\n      errorCorrection = bitVersion;\n      for (let i = 17; i >= 12; i--) {\n        if (errorCorrection >= Math.pow(2, i)) {\n          errorCorrection = (Math.pow(2, i - 12) * 7973) ^ errorCorrection;\n        }\n      }\n      bitVersion += errorCorrection;\n      // Place the bitVersion information\n      let count = 0;\n      for (let x = 0; x < 6; x++) {\n        for (let y = dimension - 11; y <= dimension - 9; y++) {\n          if ((Math.pow(2, count) & bitVersion) > 0) {\n            data.put(x, y, true);\n            data.put(y, x, true);\n          }\n          count++;\n        }\n      }\n    }\n    // finalize loading of QRCode\n    this.code.data = data;\n  }\n\n  initializeVersion() {\n    if (this.errorCorrections.includes(this.code.errorCorrection)) {\n      // Error correction has already been specified\n      let version = this.versionForLength(this.length, this.code.errorCorrection);\n      if (version > QRCode.MAX_VERSION)\n        throw 'This content is too long to be encoded for the specified error correction.';\n      this.code.version = version;\n    } else {\n      // Choose the error correction that gets the smallest size but the highest error correction\n      let versions = this.errorCorrections.map((errorCorrection) =>\n        this.versionForLength(this.length, errorCorrection)\n      );\n      let version = versions[0];\n      if (version > QRCode.MAX_VERSION) throw 'This string is too long to be encoded.';\n      this.code.version = version;\n      for (let index = 3; index >= 0; index--) {\n        if (versions[index] === version) {\n          this.code.errorCorrection = this.errorCorrections[index];\n          return;\n        }\n      }\n    }\n  }\n\n  capacity(encoding, errorCorrection) {\n    return {\n      NUMERIC: {\n        LOW: [\n          41, 77, 127, 187, 255, 322, 370, 461, 552, 652, 772, 883, 1022, 1101, 1250, 1408, 1548, 1725, 1903, 2061,\n          2232, 2409, 2620, 2812, 3057, 3283, 3517, 3669, 3909, 4158, 4417, 4686, 4965, 5253, 5529, 5836, 6153, 6479,\n          6743, 7089,\n        ],\n        MEDIUM: [\n          34, 63, 101, 149, 202, 255, 293, 365, 432, 513, 604, 691, 796, 871, 991, 1082, 1212, 1346, 1500, 1600, 1708,\n          1872, 2059, 2188, 2395, 2544, 2701, 2857, 3035, 3289, 3486, 3693, 3909, 4134, 4343, 4588, 4775, 5039, 5313,\n          5596,\n        ],\n        QUARTER: [\n          27, 48, 77, 111, 144, 178, 207, 259, 312, 364, 427, 489, 580, 621, 703, 775, 876, 948, 1063, 1159, 1224, 1358,\n          1468, 1588, 1718, 1804, 1933, 2085, 2181, 2358, 2473, 2670, 2805, 2949, 3081, 3244, 3417, 3599, 3791, 3993,\n        ],\n        HIGH: [\n          17, 34, 58, 82, 106, 139, 154, 202, 235, 288, 331, 374, 427, 468, 530, 602, 674, 746, 813, 919, 969, 1056,\n          1108, 1228, 1286, 1425, 1501, 1581, 1677, 1782, 1897, 2022, 2157, 2301, 2361, 2524, 2625, 2735, 2927, 3057,\n        ],\n      },\n      ALPHANUMERIC: {\n        LOW: [\n          25, 47, 77, 114, 154, 195, 224, 279, 335, 395, 468, 535, 619, 667, 758, 854, 938, 1046, 1153, 1249, 1352,\n          1460, 1588, 1704, 1853, 1990, 2132, 2223, 2369, 2520, 2677, 2840, 3009, 3183, 3351, 3537, 3729, 3927, 4087,\n          4296,\n        ],\n        MEDIUM: [\n          20, 38, 61, 90, 122, 154, 178, 221, 262, 311, 366, 419, 483, 528, 600, 656, 734, 816, 909, 970, 1035, 1134,\n          1248, 1326, 1451, 1542, 1637, 1732, 1839, 1994, 2113, 2238, 2369, 2506, 2632, 2780, 2894, 3054, 3220, 3391,\n        ],\n        QUARTER: [\n          16, 29, 47, 67, 87, 108, 125, 157, 189, 221, 259, 296, 352, 376, 426, 470, 531, 574, 644, 702, 742, 823, 890,\n          963, 1041, 1094, 1172, 1263, 1322, 1429, 1499, 1618, 1700, 1787, 1867, 1966, 2071, 2181, 2298, 2420,\n        ],\n        HIGH: [\n          10, 20, 35, 50, 64, 84, 93, 122, 143, 174, 200, 227, 259, 283, 321, 365, 408, 452, 493, 557, 587, 640, 672,\n          744, 779, 864, 910, 958, 1016, 1080, 1150, 1226, 1307, 1394, 1431, 1530, 1591, 1658, 1774, 1852,\n        ],\n      },\n      KANJI: {\n        LOW: [\n          10, 20, 32, 48, 65, 82, 95, 118, 141, 167, 198, 226, 262, 282, 320, 361, 397, 442, 488, 528, 572, 618, 672,\n          721, 784, 842, 902, 940, 1002, 1066, 1132, 1201, 1273, 1347, 1417, 1496, 1577, 1661, 1729, 1817,\n        ],\n        MEDIUM: [\n          8, 16, 26, 38, 52, 65, 75, 93, 111, 131, 155, 177, 204, 223, 254, 277, 310, 345, 384, 410, 438, 480, 528, 561,\n          614, 652, 692, 732, 778, 843, 894, 947, 1002, 1060, 1113, 1176, 1224, 1292, 1362, 1435,\n        ],\n        QUARTER: [\n          7, 12, 20, 28, 37, 45, 53, 66, 80, 93, 109, 125, 149, 159, 180, 198, 224, 243, 272, 297, 314, 348, 376, 407,\n          440, 462, 496, 534, 559, 604, 634, 684, 719, 756, 790, 832, 876, 923, 972, 1024,\n        ],\n        HIGH: [\n          4, 8, 15, 21, 27, 36, 39, 52, 60, 74, 85, 96, 109, 120, 136, 154, 173, 191, 208, 235, 248, 270, 284, 315, 330,\n          365, 385, 405, 430, 457, 486, 518, 553, 590, 605, 647, 673, 701, 750, 784,\n        ],\n      },\n      BYTE: {\n        LOW: [\n          17, 32, 53, 78, 106, 134, 154, 192, 230, 271, 321, 367, 425, 458, 520, 586, 644, 718, 792, 858, 929, 1003,\n          1091, 1171, 1273, 1367, 1465, 1528, 1628, 1732, 1840, 1952, 2068, 2188, 2303, 2431, 2563, 2699, 2809, 2953,\n        ],\n        MEDIUM: [\n          14, 26, 42, 62, 84, 106, 122, 152, 180, 213, 251, 287, 331, 362, 412, 450, 504, 560, 624, 666, 711, 779, 857,\n          911, 997, 1059, 1125, 1190, 1264, 1370, 1452, 1538, 1628, 1722, 1809, 1911, 1989, 2099, 2213, 2331,\n        ],\n        QUARTER: [\n          11, 20, 32, 46, 60, 74, 86, 108, 130, 151, 177, 203, 241, 258, 292, 322, 364, 394, 442, 482, 509, 565, 611,\n          661, 715, 751, 805, 868, 908, 982, 1030, 1112, 1168, 1228, 1283, 1351, 1423, 1499, 1579, 1663,\n        ],\n        HIGH: [\n          7, 14, 24, 34, 44, 58, 64, 84, 98, 119, 137, 155, 177, 194, 220, 250, 280, 310, 338, 382, 403, 439, 461, 511,\n          535, 593, 625, 658, 698, 742, 790, 842, 898, 958, 983, 1051, 1093, 1139, 1219, 1273,\n        ],\n      },\n    }[encoding][errorCorrection];\n  }\n\n  get errorCorrections() {\n    return [ERROR_CORRECTION.LOW, ERROR_CORRECTION.MEDIUM, ERROR_CORRECTION.QUARTER, ERROR_CORRECTION.HIGH];\n  }\n\n  penaltyForMatrix(matrix) {\n    /*\n      Return the penalty score for the symbol, according to the following criteria:\n      Penalty 1: A penalty (n-2) for each group of five or more same-colored modules in a row (or column)\n      Penalty 2: A penalty (3) for each 2x2 area of same-colored modules\n      Penalty 3: A penalty (40) if there are patterns that look similar to the finder patterns\n      Penalty 4: A penalty based on the percentage of tiles that are black / white\n    */\n    let penalty = 0;\n    const dimension = matrix.content.length;\n    let current, last, run, runTest, finderPattern;\n    for (let y = 0; y < dimension - 1; y++) {\n      current = matrix.bitAt(0, y);\n      last = current;\n      run = 1;\n      runTest = current;\n      finderPattern = current;\n      for (let x = 1; x < 10; x++) {\n        current = matrix.bitAt(x, y);\n        if (last === current) {\n          if (matrix.bitAt(x, y + 1) === last && matrix.bitAt(x - 1, y + 1) === last) penalty += 3;\n        } else {\n          last = current;\n        }\n        if (runTest === current) {\n          run++;\n        } else {\n          if (run > 4) penalty += run - 2;\n          run = 1;\n          runTest = current;\n        }\n        finderPattern = finderPattern * 2 + current;\n      }\n      for (let x = 10; x < dimension; x++) {\n        current = matrix.bitAt(x, y);\n        if (last === current) {\n          if (matrix.bitAt(x, y + 1) === last && matrix.bitAt(x - 1, y + 1) === last) penalty += 3;\n        } else {\n          last = current;\n        }\n        if (runTest === current) {\n          run++;\n        } else {\n          if (run > 4) penalty += run - 2;\n          run = 1;\n          runTest = current;\n        }\n        finderPattern = (finderPattern * 2 + current) % 2048;\n        if (finderPattern === 1488 || finderPattern === 93) penalty += 40;\n      }\n      if (run > 4) penalty += run - 2;\n    }\n    // Process the last row without Penalty 2\n    let lastY = dimension - 1;\n    current = matrix.bitAt(0, lastY);\n    run = 1;\n    runTest = current;\n    finderPattern = current;\n    for (let x = 1; x < 10; x++) {\n      current = matrix.bitAt(x, lastY);\n      if (runTest === current) {\n        run++;\n      } else {\n        if (run > 4) penalty += run - 2;\n        run = 1;\n        runTest = current;\n      }\n      finderPattern = finderPattern * 2 + current;\n    }\n    for (let x = 10; x < dimension; x++) {\n      current = matrix.bitAt(x, lastY);\n      if (runTest === current) {\n        run++;\n      } else {\n        if (run > 4) penalty += run - 2;\n        run = 1;\n        runTest = current;\n      }\n      finderPattern = (finderPattern * 2 + current) % 2048;\n      if (finderPattern === 1488 || finderPattern === 93) penalty += 40;\n    }\n    if (run > 4) penalty += run - 2;\n    // Penalty 4\n    let count = 0;\n    for (let x = 0; x < dimension; x++) {\n      current = matrix.bitAt(x, 0);\n      count += current;\n      run = 1;\n      runTest = current;\n      finderPattern = current;\n      for (let y = 1; y < 10; y++) {\n        current = matrix.bitAt(x, y);\n        count += current;\n        if (runTest === current) {\n          run++;\n        } else {\n          if (run > 4) penalty += run - 2;\n          run = 1;\n          runTest = current;\n        }\n        finderPattern = finderPattern * 2 + current;\n      }\n      for (let y = 10; y < dimension; y++) {\n        current = matrix.bitAt(x, y);\n        count += current;\n        if (runTest === current) {\n          run++;\n        } else {\n          if (run > 4) penalty += run - 2;\n          run = 1;\n          runTest = current;\n        }\n        finderPattern = (finderPattern * 2 + current) % 2048;\n        if (finderPattern === 1488 || finderPattern === 93) penalty += 40;\n      }\n      if (run > 4) penalty += run - 2;\n    }\n    penalty += Math.floor(Math.abs(count / (dimension * dimension) - 0.5) * 10);\n    return penalty;\n  }\n\n  toUtf16Bytes(string) {\n    const bytes = [];\n    for (let i = 0; i < string.length; i++) {\n      let code = string.charCodeAt(i);\n      let remainder = code % 256;\n      let quotient = (code - remainder) / 256;\n      bytes.push(quotient);\n      bytes.push(remainder);\n    }\n    return bytes;\n  }\n\n  toUtf8Bytes(string) {\n    const bytes = [];\n    let position = 0;\n    for (let i = 0; i < string.length; i++) {\n      let code = string.charCodeAt(i);\n      if (code < 128) {\n        bytes[position++] = code;\n      } else if (code < 2048) {\n        bytes[position++] = (code >> 6) | 192;\n        bytes[position++] = (code & 63) | 128;\n      } else if ((code & 0xfc00) == 0xd800 && i + 1 < string.length && (string.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\n        // Surrogate Pair\n        code = 0x10000 + ((code & 0x03ff) << 10) + (string.charCodeAt(++i) & 0x03ff);\n        bytes[position++] = (code >> 18) | 240;\n        bytes[position++] = ((code >> 12) & 63) | 128;\n        bytes[position++] = ((code >> 6) & 63) | 128;\n        bytes[position++] = (code & 63) | 128;\n      } else {\n        bytes[position++] = (code >> 12) | 224;\n        bytes[position++] = ((code >> 6) & 63) | 128;\n        bytes[position++] = (code & 63) | 128;\n      }\n    }\n    return bytes;\n  }\n\n  versionForLength(length, errorCorrection) {\n    let capacity;\n    if (this.code.hasEci) {\n      let actualLength = length + 3;\n      if (this.code.eci >= 128) actualLength++;\n      if (this.code.eci >= 16384) actualLength++;\n      capacity = DATA_CAPACITY[errorCorrection];\n      if (actualLength > capacity[8]) {\n        // add a bit for versions 10+\n        actualLength++;\n      }\n    } else {\n      capacity = this.capacity(this.code.encoding, errorCorrection);\n    }\n    let index = capacity.findIndex((allows) => allows >= length);\n    if (index === -1) return 100;\n    return index + 1;\n  }\n}\n\nmodule.exports = {\n  ENCODING,\n  ERROR_CORRECTION,\n  BitWriter,\n  Matrix,\n  BooleanMatrix,\n  QRCodeMap,\n  QRCode,\n  QRCodeEncoder,\n};\n","const { QRCode, QRCodeEncoder } = require('./qrcode');\n\n/**\n * CLASS SquareQRCodeEncoder\n * While it can render an SVG, it mainly provides a base encoder for MarketQRCodeEncoder and EmbedQRCodeEncoder.\n * It adds these features to QRCodeEncoder:\n *   - svg rendering using the Turtle to edge trace data\n *   - hooks for adjusting the data for turtle rendering\n *   - using lowestPenalty calculation to make sure the code can be read\n *   - some base methods for SVG rendering\n * The following options can be specified:\n *   border          boolean (default false) whether to add a 4-pixel quiet zone\n *   invert          boolean (default false) light data on dark background when on\n *   styleBackground string to override style inserted in SVG background rectangle\n *   styleForeground string to override style inserted in SVG foreground data and patterns\n */\nclass SquareQRCodeEncoder extends QRCodeEncoder {\n  encode() {\n    this.initializeEncoding();\n    for (const errorCorrection of this.errorCorrections) {\n      this.code.errorCorrection = errorCorrection;\n      this.initializeVersion();\n      if (this.code.version < this.minimumVersion) continue;\n      this.initializeCodewords();\n      this.initializeMapping();\n      this.initializeMasking();\n      if (this.lowestPenalty < this.constructor.PENALTY_FOR_NEGATIVE_CAPACITY) {\n        this.initializeTurtleData();\n        this.initializeSvg();\n        return;\n      }\n    }\n    // go up in version, keep H errorCorrection\n    const start = Math.max(this.minimumVersion, this.code.version + 1);\n    for (let version = start; version <= QRCode.MAX_VERSION; version++) {\n      this.code.version = version;\n      this.initializeCodewords();\n      this.initializeMapping();\n      this.initializeMasking();\n      if (this.lowestPenalty < this.constructor.PENALTY_FOR_NEGATIVE_CAPACITY) {\n        this.initializeTurtleData();\n        this.initializeSvg();\n        return;\n      }\n    }\n  }\n\n  initializeSvg() {\n    const offset = this.svgOffset;\n    const dimension = this.svgDimension;\n    const foregroundStyle = this.svgForegroundStyle;\n    const backgroundStyle = this.svgBackgroundStyle;\n    const source = [];\n    source.push(this.svgTag(dimension));\n    source.push('<defs>');\n    source.push(this.svgFinderPattern(foregroundStyle));\n    source.push('</defs>');\n    source.push(this.svgBackground(backgroundStyle, dimension, offset === 0 ? undefined : offset / 2));\n    this.svgFinderPatterns(source, offset);\n    this.svgTurtle(source, foregroundStyle, offset);\n    source.push('</svg>');\n    this.svg = source.join('');\n  }\n\n  initializeTurtleData() {\n    // add timing and alignment patterns as data\n    const data = this.code.data.copy();\n    for (const point of this.code.timingPatternPositions) {\n      data.put(point.x, point.y, true);\n    }\n    for (const point of this.code.alignmentPatternPositions) {\n      data.fillAlignmentPatternAt(point.x, point.y);\n    }\n    this.turtleData = data;\n  }\n\n  get inverted() {\n    const inverted = this.code.options.invert;\n    if (inverted === undefined) return false;\n    return inverted;\n  }\n\n  get hasBorder() {\n    const hasBorder = this.code.options.border;\n    if (hasBorder === undefined) return false;\n    return hasBorder;\n  }\n\n  get minimumVersion() {\n    return 1;\n  }\n\n  async png() {\n    if (this._png !== undefined) return this._png;\n    if (this.svg === undefined) throw 'no SVG to convert to PNG';\n    const image = new Image();\n    const imageBlob = new Blob([this.svg], { type: 'image/svg+xml;charset=utf-8' });\n    image.src = URL.createObjectURL(imageBlob);\n    await image.decode();\n    const dimension = this.svgDimension;\n    const canvas = document.createElement('canvas');\n    canvas.width = dimension;\n    canvas.height = dimension;\n    canvas.getContext('2d').drawImage(image, 0, 0, dimension, dimension);\n    this._png = canvas.toDataURL();\n    return this._png;\n  }\n\n  svgBackground(style, dimension, cornerRadius) {\n    if (style === '') return '';\n    return cornerRadius === undefined\n      ? `<rect ${style} x=\"0\" y=\"0\" width=\"${dimension}\" height=\"${dimension}\" />`\n      : `<rect ${style} x=\"0\" y=\"0\" width=\"${dimension}\" height=\"${dimension}\" rx=\"${cornerRadius}\" ry=\"${cornerRadius}\" />`;\n  }\n\n  get svgBackgroundStyle() {\n    const fromOptions = this.code.options.styleBackground;\n    if (fromOptions !== undefined) return fromOptions;\n    return this.inverted ? 'fill=\"black\"' : 'fill=\"white\"';\n  }\n\n  get svgDimension() {\n    return 2 * this.svgOffset + 8 * this.code.dimension;\n  }\n\n  svgFinderPattern(style) {\n    return `<path id=\"f\" ${style} fill-rule=\"evenodd\" d=\"M 0 10 a10,10 0 0 1 10,-10 h36 a10,10 0 0 1 10,10 v36 a10,10 0 0 1 -10,10 h-36 a10,10 0 0 1 -10,-10 Z M 8 10 a2,2 0 0 1 2,-2 h36 a2,2 0 0 1 2,2 v36 a2,2 0 0 1 -2,2 h-36 a2,2 0 0 1 -2,-2 Z M 16 18 a2,2 0 0 1 2,-2 h20 a2,2 0 0 1 2,2 v20 a2,2 0 0 1 -2,2 h-20 a2,2 0 0 1 -2,-2 Z\" />`;\n  }\n\n  svgFinderPatterns(source, offset) {\n    for (const point of this.code.finderPatternPositions) {\n      source.push(`<use xlink:href=\"#f\" x=\"${point.x * 8 + offset}\" y=\"${point.y * 8 + offset}\" />`);\n    }\n  }\n\n  get svgForegroundStyle() {\n    const fromOptions = this.code.options.styleForeground;\n    if (fromOptions !== undefined) return fromOptions;\n    return this.inverted ? 'fill=\"white\"' : 'fill=\"black\"';\n  }\n\n  get svgOffset() {\n    return this.hasBorder ? 32 : 0;\n  }\n\n  svgTag(dimension) {\n    return `<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${dimension}\" height=\"${dimension}\" viewBox=\"0 0 ${dimension} ${dimension}\">`;\n  }\n\n  svgTurtle(source, style, offset) {\n    const dimension = this.code.dimension;\n    for (let y = 0; y < dimension; y++) {\n      for (let x = 0; x < dimension; x++) {\n        if (this.turtleData.at(x, y)) {\n          source.push(new Turtle(this.turtleData, style, offset, x, y).element);\n        }\n      }\n    }\n  }\n}\n// static variables\nSquareQRCodeEncoder.PENALTY_FOR_LEFTOVER_CAPACITY = [32, 16, 8, 4, 2, 1];\nSquareQRCodeEncoder.PENALTY_FOR_NEGATIVE_CAPACITY = 10000;\n\n/**\n * CLASS Turtle\n * This is used to draw a path at a point, drawing both the outline and any cutouts.\n *   data            the BooleanMatrix of encoded data, along with the format and version information\n *   style           injected into the SVG element\n *   offset          how many SVG pixels to offset the topleft corner\n *   x               the x coordinate of the pixel to start from\n *   y               the y coordinate of the pixel to start from\n * It is only exported to be used in tests.\n */\nclass Turtle {\n  constructor(data, style, offset, x, y) {\n    this.data = data;\n    this.dimension = data.width;\n    this.style = style || '';\n    this.offset = offset || 0;\n    this.start = { x, y };\n    this.visitedLocations = new Set();\n    this.generateElement();\n    this.clearVisited();\n  }\n\n  clearVisited() {\n    this.visitedLocations.forEach((location) => {\n      const point = this.fromLocation(location);\n      this.data.put(point.x, point.y, false);\n    });\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  fromLocation(location) {\n    const x = location % this.dimension;\n    const y = (location - x) / this.dimension;\n    return { x, y };\n  }\n\n  generateElement() {\n    // build outside edges\n    const startX = this.start.x;\n    const startY = this.start.y;\n    const startEdge = 'left';\n    let x = startX;\n    let y = startY;\n    const outsideEdges = [];\n    outsideEdges.push(startEdge);\n    let edge = 'top';\n    const tops = new Set();\n    const rights = new Set();\n    const bottoms = new Set();\n    const lefts = new Set();\n    lefts.add(this.toLocation(x, y));\n    while (!(x === startX && y === startY && edge === startEdge)) {\n      outsideEdges.push(edge);\n      const location = this.toLocation(x, y);\n      this.visitLocation(location);\n      switch (edge) {\n        case 'top':\n          tops.add(location);\n          if (!this.hasPixelAtCoordinate(x + 1, y)) {\n            edge = 'right';\n          } else if (this.hasPixelAtCoordinate(x + 1, y - 1)) {\n            x += 1;\n            y -= 1;\n            edge = 'left';\n          } else {\n            x += 1;\n          }\n          break;\n        case 'right':\n          rights.add(location);\n          if (!this.hasPixelAtCoordinate(x, y + 1)) {\n            edge = 'bottom';\n          } else if (this.hasPixelAtCoordinate(x + 1, y + 1)) {\n            x += 1;\n            y += 1;\n            edge = 'top';\n          } else {\n            y += 1;\n          }\n          break;\n        case 'bottom':\n          bottoms.add(location);\n          if (!this.hasPixelAtCoordinate(x - 1, y)) {\n            edge = 'left';\n          } else if (this.hasPixelAtCoordinate(x - 1, y + 1)) {\n            x -= 1;\n            y += 1;\n            edge = 'right';\n          } else {\n            x -= 1;\n          }\n          break;\n        case 'left':\n          lefts.add(location);\n          if (!this.hasPixelAtCoordinate(x, y - 1)) {\n            edge = 'top';\n          } else if (this.hasPixelAtCoordinate(x - 1, y - 1)) {\n            x -= 1;\n            y -= 1;\n            edge = 'bottom';\n          } else {\n            y -= 1;\n          }\n          break;\n      }\n    }\n    // render outside edges\n    if (outsideEdges.length === 4) {\n      // if it only a single pixel, just make it a rectangle\n      this._element = `<rect ${this.style} x=\"${startX * 8 + this.offset}\" y=\"${\n        startY * 8 + this.offset\n      }\" width=\"8\" height=\"8\" rx=\"2\" ry=\"2\" />`;\n      return;\n    }\n    let d = [];\n    d.push(`M${startX * 8 + this.offset + 1} ${startY * 8 + this.offset + 4}`);\n    let next = outsideEdges[0];\n    outsideEdges.push(next);\n    let now;\n    let length = 0;\n    for (let i = 1; i < outsideEdges.length; i++) {\n      now = next;\n      next = outsideEdges[i];\n      if (now === next) {\n        length += 8;\n      } else if (now === 'top' && next === 'right') {\n        if (length !== 0) {\n          d.push(`h${length}`);\n          length = 0;\n        }\n        d.push('a3,3 0 0 1 3,3');\n      } else if (now === 'right' && next === 'bottom') {\n        if (length !== 0) {\n          d.push(`v${length}`);\n          length = 0;\n        }\n        d.push('a3,3 0 0 1 -3,3');\n      } else if (now === 'bottom' && next === 'left') {\n        if (length !== 0) {\n          d.push(`h-${length}`);\n          length = 0;\n        }\n        d.push('a3,3 0 0 1 -3,-3');\n      } else if (now === 'left' && next === 'top') {\n        if (length !== 0) {\n          d.push(`v-${length}`);\n          length = 0;\n        }\n        d.push('a3,3 0 0 1 3,-3');\n      } else if (now === 'top' && next === 'left') {\n        d.push(`h${length + 5}`);\n        length = 5;\n      } else if (now === 'right' && next === 'top') {\n        d.push(`v${length + 5}`);\n        length = 5;\n      } else if (now === 'bottom' && next === 'right') {\n        d.push(`h-${length + 5}`);\n        length = 5;\n      } else if (now === 'left' && next === 'bottom') {\n        d.push(`v-${length + 5}`);\n        length = 5;\n      }\n    }\n    if (length > 0) d.push(`v-${length}`);\n    d.push('z');\n    // determine the interior pixels\n    let interior = new Set();\n    let process = new Set();\n    this.visitedLocations.forEach((location) => {\n      if (!tops.has(location)) process.add(location - this.dimension);\n      if (!lefts.has(location)) process.add(location - 1);\n      if (!bottoms.has(location)) process.add(location + this.dimension);\n      if (!rights.has(location)) process.add(location + 1);\n    });\n    process = [...process].filter((location) => !this.hasVisitedLocation(location));\n    while (process.length > 0) {\n      let fanOutFrom = [];\n      process.forEach((location) => {\n        if (this.hasPixelAtLocation(location)) {\n          this.visitLocation(location);\n          fanOutFrom.push(location);\n        } else {\n          interior.add(location);\n        }\n      });\n      process = new Set();\n      fanOutFrom.forEach((location) => {\n        process.add(location - this.dimension);\n        process.add(location + this.dimension);\n        process.add(location + 1);\n        process.add(location - 1);\n      });\n      process = [...process].filter((location) => !this.hasVisitedLocation(location));\n    }\n    while (interior.size > 0) {\n      // determine and move to the top right\n      let topRight, topRightX, topRightY;\n      interior.forEach((location) => {\n        x = location % this.dimension;\n        y = (location - x) / this.dimension;\n        if (topRight === undefined || y < topRightY || (y === topRightY && x > topRightX)) {\n          topRight = location;\n          topRightX = x;\n          topRightY = y;\n        }\n      });\n      d.push(`M${topRightX * 8 + this.offset + 9} ${topRightY * 8 + this.offset - 1}`);\n      // move counterclockwise to remove interior\n      x = topRightX;\n      y = topRightY;\n      edge = 'top';\n      let distance = 5;\n      while (!(x === topRightX && y === topRightY && edge === 'right')) {\n        const location = this.toLocation(x, y);\n        interior.delete(location);\n        switch (edge) {\n          case 'top':\n            if (!this.hasPixelAtCoordinate(x - 1, y - 1)) {\n              if (distance > 0) d.push(`h-${distance}`);\n              d.push('a3,3 0 0 1 -3,-3');\n              distance = 0;\n              edge = 'right';\n              x--;\n              y--;\n            } else if (!this.hasPixelAtCoordinate(x - 1, y)) {\n              distance += 8;\n              x--;\n            } else {\n              d.push(`h-${distance + 5}`);\n              distance = 5;\n              edge = 'left';\n            }\n            break;\n          case 'left':\n            if (!this.hasPixelAtCoordinate(x - 1, y + 1)) {\n              if (distance > 0) d.push(`v${distance}`);\n              d.push('a3,3 0 0 1 -3,3');\n              distance = 0;\n              edge = 'top';\n              x--;\n              y++;\n            } else if (!this.hasPixelAtCoordinate(x, y + 1)) {\n              distance += 8;\n              y++;\n            } else {\n              d.push(`v${distance + 5}`);\n              distance = 5;\n              edge = 'bottom';\n            }\n            break;\n          case 'bottom':\n            if (!this.hasPixelAtCoordinate(x + 1, y + 1)) {\n              if (distance > 0) d.push(`h${distance}`);\n              d.push('a3,3 0 0 1 3,3');\n              distance = 0;\n              edge = 'left';\n              x++;\n              y++;\n            } else if (!this.hasPixelAtCoordinate(x + 1, y)) {\n              distance += 8;\n              x++;\n            } else {\n              d.push(`h${distance + 5}`);\n              distance = 5;\n              edge = 'right';\n            }\n            break;\n          case 'right':\n            if (!this.hasPixelAtCoordinate(x + 1, y - 1)) {\n              if (distance > 0) d.push(`v-${distance}`);\n              d.push('a3,3 0 0 1 3,-3');\n              distance = 0;\n              edge = 'bottom';\n              x++;\n              y--;\n            } else if (!this.hasPixelAtCoordinate(x, y - 1)) {\n              distance += 8;\n              y--;\n            } else {\n              d.push(`v-${distance + 5}`);\n              distance = 5;\n              edge = 'top';\n            }\n            break;\n        }\n      }\n      d.push(`v-${distance + 5}`);\n      d.push('z');\n    }\n    this._element = `<path ${this.style} d=\"${d.join('')}\" />`;\n  }\n\n  hasPixelAtCoordinate(x, y) {\n    if (x >= this.dimension || x < 0 || y >= this.dimension || y < 0) return false;\n    return this.data.at(x, y);\n  }\n\n  hasPixelAtLocation(location) {\n    const x = location % this.dimension;\n    const y = (location - x) / this.dimension;\n    return this.data.at(x, y);\n  }\n\n  hasVisitedCoordinate(x, y) {\n    return this.hasVisitedLocation(this.toLocation(x, y));\n  }\n\n  hasVisitedLocation(location) {\n    return this.visitedLocations.has(location);\n  }\n\n  toLocation(x, y) {\n    return this.dimension * y + x;\n  }\n\n  visitCoordinate(x, y) {\n    this.visitLocation(this.toLocation(x, y));\n  }\n\n  visitLocation(location) {\n    this.visitedLocations.add(location);\n  }\n}\n\nmodule.exports = { SquareQRCodeEncoder, Turtle };\n","const { Matrix } = require('./qrcode');\nconst { SquareQRCodeEncoder } = require('./square-qrcode');\n\nconst JEWEL_VALUE = Object.freeze({\n  AVAILABLE: 'AVAILABLE',\n  FALSE: 'FALSE',\n  TRUE: 'TRUE',\n  UNDECIDED: 'UNDECIDED',\n});\n\n/**\n * CLASS MarketQRCodeEncoder\n * This is used to generate an SVG for a QR code with a Square logo embedded in the center.\n * Contact #qrcode-design for design specifics\n * The following options can be specified:\n *   border          boolean (default false) whether to add a 6-pixel quiet zone\n *   invert          boolean (default false) light data on dark background when on\n *   monochrome      boolean (default false) whether to make it all black and white\n *                   This is useful for things like thermal printers that only print black\n *   styleBackground string to override style inserted in SVG background rectangle\n *   styleForeground string to override style inserted in SVG foreground data and patterns\n *   styleLogo       string to override style inserted in SVG for Square jewel\n */\nclass MarketQRCodeEncoder extends SquareQRCodeEncoder {\n  static getJewel() {\n    if (this.jewel !== undefined) return this.jewel;\n    const jewel = Matrix.withAll(9, 9, JEWEL_VALUE.UNDECIDED);\n    // corners are available\n    jewel.put(0, 0, JEWEL_VALUE.AVAILABLE);\n    jewel.put(0, 8, JEWEL_VALUE.AVAILABLE);\n    jewel.put(8, 0, JEWEL_VALUE.AVAILABLE);\n    jewel.put(8, 8, JEWEL_VALUE.AVAILABLE);\n    // forced false\n    for (let offset = 0; offset < 7; offset++) {\n      jewel.put(offset + 1, 0, JEWEL_VALUE.FALSE);\n      jewel.put(offset + 1, 8, JEWEL_VALUE.FALSE);\n      jewel.put(0, offset + 1, JEWEL_VALUE.FALSE);\n      jewel.put(8, offset + 1, JEWEL_VALUE.FALSE);\n    }\n    jewel.put(3, 3, JEWEL_VALUE.FALSE);\n    jewel.put(3, 5, JEWEL_VALUE.FALSE);\n    jewel.put(5, 3, JEWEL_VALUE.FALSE);\n    jewel.put(5, 5, JEWEL_VALUE.FALSE);\n    // forced true\n    for (let offset = 0; offset < 6; offset++) {\n      jewel.put(1 + offset, 1, JEWEL_VALUE.TRUE);\n      jewel.put(2 + offset, 7, JEWEL_VALUE.TRUE);\n      jewel.put(7, 1 + offset, JEWEL_VALUE.TRUE);\n      jewel.put(1, 2 + offset, JEWEL_VALUE.TRUE);\n    }\n    jewel.put(4, 4, JEWEL_VALUE.TRUE);\n    this.jewel = jewel;\n    return jewel;\n  }\n\n  initializeSvg() {\n    // generate the SVG\n    const offset = this.svgOffset;\n    const dimension = this.svgDimension;\n    const foregroundStyle = this.svgForegroundStyle;\n    const logoStyle = this.svgLogoStyle;\n    const source = [];\n    source.push(this.svgTag(dimension));\n    source.push('<defs>');\n    source.push(this.svgFinderPattern(foregroundStyle));\n    source.push(this.svgLogo(logoStyle));\n    source.push('</defs>');\n    source.push(this.svgBackground(this.svgBackgroundStyle, dimension, offset === 0 ? undefined : 16));\n    this.svgFinderPatterns(source, offset);\n    this.svgTurtle(source, foregroundStyle, offset);\n    // Square logo\n    const logoPosition = (this.code.dimension - 7) * 4 + offset;\n    source.push(`<use xlink:href=\"#s\" x=\"${logoPosition}\" y=\"${logoPosition}\" />`);\n    // finish\n    source.push('</svg>');\n    this.svg = source.join('');\n  }\n\n  initializeTurtleData() {\n    super.initializeTurtleData();\n    // clear out middle for Square logo\n    const start = (this.code.dimension - 9) / 2;\n    this.turtleData.fill(start, start + 1, 9, 7, false);\n    this.turtleData.fill(start + 1, start, 7, 1, false);\n    this.turtleData.fill(start + 1, start + 8, 7, 1, false);\n  }\n\n  get isMonochrome() {\n    const isMonochrome = this.code.options.monochrome;\n    if (isMonochrome === undefined) return false;\n    return isMonochrome;\n  }\n\n  get minimumVersion() {\n    // if the code version is 1, then the jewel would cut out the timing patterns\n    return 2;\n  }\n\n  penaltyForMatrix(matrix) {\n    const errorCorrectionCapacity = this.map.errorCorrectionCapacity;\n    const messedUpBytes = errorCorrectionCapacity.map(() => new Set());\n    // figure out the messed up bytes based on putting the jewel in the center\n    const jewel = this.constructor.getJewel();\n    const start = (matrix.content.length - 9) / 2;\n    for (let y = 0; y < 9; y++) {\n      const yData = y + start;\n      for (let x = 0; x < 9; x++) {\n        const xData = x + start;\n        const pixel = this.map.at(xData, yData);\n        if (this.map.isDataPixel(pixel)) {\n          switch (jewel.at(x, y)) {\n            case JEWEL_VALUE.FALSE:\n              if (matrix.at(xData, yData) !== false) messedUpBytes[pixel.chunk].add(pixel.byte);\n              break;\n            case JEWEL_VALUE.TRUE:\n              if (matrix.at(xData, yData) !== true) messedUpBytes[pixel.chunk].add(pixel.byte);\n              break;\n            case JEWEL_VALUE.UNDECIDED:\n              messedUpBytes[pixel.chunk].add(pixel.byte);\n              break;\n            default:\n          }\n        }\n      }\n    }\n    // calculate penalty based on how many messed up bytes\n    let penalty = 0;\n    errorCorrectionCapacity.forEach((capacity, index) => {\n      const leftoverCapacity = capacity - messedUpBytes[index].size * 2;\n      if (leftoverCapacity < 0) {\n        penalty += this.constructor.PENALTY_FOR_NEGATIVE_CAPACITY;\n      } else if (leftoverCapacity < this.constructor.PENALTY_FOR_LEFTOVER_CAPACITY.length) {\n        penalty += this.constructor.PENALTY_FOR_LEFTOVER_CAPACITY[leftoverCapacity];\n      }\n    });\n    // add additional penalties on trying to have the corners be filled\n    if (!matrix.at(start, start)) penalty++;\n    if (!matrix.at(start, start + 8)) penalty++;\n    if (!matrix.at(start + 8, start)) penalty++;\n    if (!matrix.at(start + 8, start + 8)) penalty++;\n    return penalty;\n  }\n\n  get svgForegroundStyle() {\n    const fromOptions = this.code.options.styleForeground;\n    if (fromOptions !== undefined) return fromOptions;\n    if (this.inverted) {\n      return this.isMonochrome ? 'fill=\"white\"' : 'fill=\"white\" fill-opacity=\"0.95\"';\n    } else {\n      return this.isMonochrome ? 'fill=\"black\"' : 'fill=\"black\" fill-opacity=\"0.9\"';\n    }\n  }\n\n  get svgLogoStyle() {\n    if (this.isMonochrome) return this.svgForegroundStyle;\n    const fromOptions = this.code.options.styleLogo;\n    if (fromOptions !== undefined) return fromOptions;\n    return 'fill=\"#006AFF\"';\n  }\n\n  svgLogo(style) {\n    return `<path id=\"s\" ${style} fill-rule=\"evenodd\" d=\"M 0 9.8 C 0 3.92 3.92 0 9.8 0 L 46.2 0 C 52.08 0 56 3.92 56 9.8 L 56 46.2 C 56 52.08 52.08 56 46.2 56 L 9.8 56 C 3.92 56 0 52.08 0 46.2 Z M 11.2 14 C 11.2 12.32 12.32 11.2 14 11.2 L 42 11.2 C 43.68 11.2 44.8 12.32 44.8 14 L 44.8 42 C 44.8 43.68 43.68 44.8 42 44.8 L 14 44.8 C 12.32 44.8 11.2 43.68 11.2 42 Z M 21 22.4 C 21 21.7 21.7 21 22.4 21 L 33.6 21 C 34.3 21 35 21.7 35 22.4 L 35 33.6 C 35 34.3 34.3 35 33.6 35 L 22.4 35 C 21.7 35 21 34.3 21 33.6 Z\" />`;\n  }\n\n  get svgOffset() {\n    return this.hasBorder ? 48 : 0;\n  }\n}\n\nmodule.exports = { MarketQRCodeEncoder, JEWEL_VALUE };\n","module.exports = {\n  ...require('./lib/market-qrcode'),\n  ...require('./lib/qrcode'),\n  ...require('./lib/square-qrcode'),\n};\n",":host {\n  display: block;\n\n  svg {\n    .foreground {\n      fill: var(--qrcode-normal-variant-foreground-color);\n    }\n\n    .background {\n      fill: var(--qrcode-normal-variant-background-color);\n    }\n\n    .logo {\n      fill: var(--qrcode-normal-variant-icon-color);\n    }\n  }\n\n  &([monochrome]) {\n    .foreground {\n      fill: var(--qrcode-monochrome-variant-foreground-color);\n    }\n\n    .background {\n      fill: var(--qrcode-monochrome-variant-background-color);\n    }\n\n    .logo {\n      fill: var(--qrcode-monochrome-variant-icon-color);\n    }\n  }\n\n  /* in cases where the size prop is set, the SVG should fill its container */\n  &([size]) {\n    svg {\n      width: 100%;\n      height: 100%;\n    }\n  }\n}\n","import { MarketQRCodeEncoder } from '@square/qrcode-encoder';\nimport { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'market-qrcode',\n  styleUrl: 'market-qrcode.css',\n  shadow: true,\n})\nexport class MarketQrcode {\n  /**\n   * The URL or other content of the QR code. The QR code is generated using\n   * [@square/qrcode-encoder](https://github.com/squareup/qrcode/blob/master/packages/square-qrcode-encoder/README.md).\n   */\n  @Prop({ reflect: true }) readonly content: string = '';\n\n  /**\n   * By default, QR code size is dependent on the information being encoded.\n   * Use this property to set the QR code's height and width in pixels.\n   */\n  @Prop({ reflect: true }) readonly size: number;\n\n  /**\n   * Include a six data-pixel border around the QR code. When this attribute is\n   * present, the QR code will have a background color (default is transparent\n   * background).\n   */\n  @Prop() readonly border: boolean = false;\n\n  /**\n   * When true, QR code will render all elements in black & white.\n   */\n  @Prop({ reflect: true }) readonly monochrome: boolean = false;\n\n  render() {\n    const encoder = this.content\n      ? new MarketQRCodeEncoder(this.content, {\n          border: this.border,\n          styleBackground: this.border ? 'class=\"background\"' : '',\n          styleForeground: 'class=\"foreground\"',\n          styleLogo: 'class=\"logo\"',\n        })\n      : null;\n\n    const containerStyle =\n      this.size !== undefined\n        ? {\n            height: `${this.size}px`,\n            width: `${this.size}px`,\n          }\n        : null;\n\n    return (\n      <Host class=\"market-qrcode\" aria-hidden=\"true\">\n        <div innerHTML={encoder ? encoder.svg : ''} style={containerStyle}></div>\n      </Host>\n    );\n  }\n}\n"],"version":3}