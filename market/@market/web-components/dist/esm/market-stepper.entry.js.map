{"file":"market-stepper.entry.js","mappings":"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","names":[],"sources":["src/components/market-stepper/market-stepper.css?tag=market-stepper&encapsulation=shadow","src/components/market-stepper/market-stepper.tsx"],"sourcesContent":["@import \"../../styles/mixins/component-base.css\";\n@import \"../../styles/mixins/field.css\";\n@import \"../../styles/mixins/field-states.css\";\n@import \"../../styles/mixins/number-input.css\";\n\n:host {\n  --focus-ring-color: color-mix(in srgb, var(--core-focus-ring-color) 100%, transparent);\n\n  @extend %field;\n  @extend %field-states;\n  @extend %number-input;\n\n  display: flex;\n  align-items: center;\n\n  input {\n    /* input height is the line-height + padding */\n    --stepper-quantity-input-field-height:\n      calc(\n        var(--stepper-quantity-input-field-value-text-leading) + var(--stepper-padding-size) * 2\n      );\n\n    position: relative;\n    bottom: 0;\n    width: 100%;\n    height: var(--stepper-quantity-input-field-height);\n    color: var(--stepper-quantity-input-field-value-text-normal-state-color);\n    font-weight: var(--stepper-quantity-input-field-value-text-weight);\n    font-size: var(--stepper-quantity-input-field-value-text-size);\n    font-family: var(--stepper-quantity-input-field-value-text-font-family);\n    line-height: var(--stepper-quantity-input-field-value-text-leading);\n    letter-spacing: var(--stepper-quantity-input-field-value-text-tracking);\n    text-align: center;\n    text-transform: var(--stepper-quantity-input-field-value-text-case);\n    cursor: text;\n    font-feature-settings: \"tnum\"; /* enable tabular (monospaced) figures */\n\n    &[disabled] {\n      color: var(--stepper-quantity-input-field-value-text-disabled-state-color);\n    }\n\n    &::placeholder {\n      color: var(--stepper-quantity-input-field-value-text-placeholder-color);\n    }\n  }\n}\n\n/* button hit area extends beyond the \"visual\" button */\nbutton {\n  --transition-duration: 0.2s;\n  --stepper-button-size: var(--stepper-button-minimum-height);\n\n  position: relative;\n  display: inline-flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  box-sizing: content-box;\n  width: var(--stepper-button-size);\n  height: var(--stepper-button-size);\n  padding: var(--stepper-padding-size);\n  border: none;\n  border-radius: var(--stepper-border-radius);\n  background: none;\n  cursor: pointer;\n  transition: background-color color var(--transition-duration);\n\n  /* the actual \"visual\" button w/ background */\n  &::before {\n    content: \"\";\n    position: absolute;\n    inset: 0;\n    display: block;\n    margin: var(--stepper-padding-size);\n    border-radius: var(--stepper-button-border-radius);\n    background: var(--stepper-button-normal-state-background-color);\n  }\n\n  svg {\n    position: relative;\n    pointer-events: none;\n    fill: var(--stepper-button-normal-state-icon-color);\n  }\n\n  &:hover {\n    &::before {\n      background: var(--stepper-button-hover-state-background-color);\n    }\n\n    svg {\n      fill: var(--stepper-button-hover-state-icon-color);\n    }\n  }\n\n  &:focus {\n    outline: none;\n\n    &::before {\n      background: var(--stepper-button-focus-state-background-color);\n    }\n\n    svg {\n      fill: var(--stepper-button-focus-state-icon-color);\n    }\n  }\n\n  &:focus-visible {\n    &::before {\n      outline: var(--core-focus-ring-border-size) solid var(--focus-ring-color);\n      outline-offset: var(--core-focus-ring-border-size);\n    }\n  }\n\n  &:active {\n    &::before {\n      background: var(--stepper-button-pressed-state-background-color);\n    }\n\n    svg {\n      fill: var(--stepper-button-pressed-state-icon-color);\n    }\n  }\n\n  &[disabled] {\n    cursor: not-allowed;\n\n    &::before {\n      background: var(--stepper-button-disabled-state-background-color);\n    }\n\n    svg {\n      fill: var(--stepper-button-disabled-state-icon-color);\n    }\n  }\n}\n","import { Component, Host, h, Element, Prop, State, Method, Watch, Event, EventEmitter } from '@stencil/core';\n\nimport { submitFormImplicitly } from '../../utils/forms';\n\n/**\n * @part native-input - the native input element.\n */\n@Component({\n  tag: 'market-stepper',\n  styleUrl: 'market-stepper.css',\n  shadow: true,\n})\nexport class MarketStepper {\n  @Element() el: HTMLMarketStepperElement;\n\n  inputEl: HTMLInputElement;\n\n  /**\n   * The value for the input. This is visually shown on the input\n   * and can be edited by the user.\n   */\n  @Prop({ mutable: true, reflect: true }) value: number;\n\n  /**\n   * The ID for the inner input.\n   */\n  @Prop() readonly inputId: string;\n\n  /**\n   * The name for the inner input.\n   */\n  @Prop() readonly name: string;\n\n  /**\n   * The placeholder of the input. Shown before a user attempts to\n   * add a value, given no value is already provided.\n   */\n  @Prop() readonly placeholder: string = '0';\n\n  /**\n   * A number specifying the greatest value in the range of permitted values.\n   * (See MDN on the [max attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max))\n   */\n  @Prop() readonly max: number;\n\n  /**\n   * A number specifying the most negative value in the range of permitted values.\n   * (See MDN on the [min attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min))\n   */\n  @Prop() readonly min: number;\n\n  /**\n   * A positive number specifying the increment step.\n   * (See MDN on the [step attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#step))\n   */\n  @Prop() readonly step: number = 1;\n\n  /**\n   * Whether the input is readonly or not.\n   */\n  @Prop({ reflect: true }) readonly readonly: boolean = false;\n\n  /**\n   * Whether the input is disabled or not.\n   * This visually and functionally disables the input.\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * Whether the input is focused or not.\n   */\n  @Prop({ mutable: true, reflect: true }) focused: boolean = false;\n\n  /**\n   * Whether the input is invalid or not. This represents error states.\n   */\n  @Prop({ reflect: true }) readonly invalid: boolean = false;\n\n  /**\n   * The inner input's aria-label. Localize as needed.\n   */\n  @Prop({ reflect: true }) readonly inputAriaLabel: string = 'Number';\n\n  /**\n   * The decrement button's aria-label. Localize as needed.\n   */\n  @Prop({ reflect: true }) readonly decrementAriaLabel: string = 'Decrement';\n\n  /**\n   * The increment button's aria-label. Localize as needed.\n   */\n  @Prop({ reflect: true }) readonly incrementAriaLabel: string = 'Increment';\n\n  @State() incrementDisabled: boolean = false;\n  @State() decrementDisabled: boolean = false;\n\n  /**\n   * Emitted when the value changes.\n   */\n  @Event() marketStepperValueChange: EventEmitter;\n\n  /**\n   * Emitted when the inner `<input>` element is focused.\n   */\n  @Event() marketStepperInputFocus: EventEmitter;\n\n  @Watch('value')\n  valueChangeHandler() {\n    // sanitize value in case it was set programmatically\n    const sanitized = this.sanitizeValue(this.value);\n    if (sanitized !== this.value) {\n      this.value = sanitized;\n    }\n    this.updateButtonDisabledStates();\n  }\n\n  /**\n   * Toggle focus styling on `<market-stepper>` and focus/blur the inner `<input />`.\n   */\n  @Method()\n  setFocus(value: boolean = true) {\n    if (this.readonly || this.disabled) {\n      return Promise.resolve();\n    }\n    this.focused = value;\n    this.focused ? this.inputEl.focus() : this.inputEl.blur();\n    return Promise.resolve();\n  }\n\n  onChange(): void {\n    const previousValue = this.value;\n    let nextValue = Number.parseFloat(this.inputEl.value);\n\n    if (Number.isNaN(nextValue)) {\n      // not a valid number, so reset it to null/empty\n      nextValue = null;\n      this.inputEl.value = '';\n    } else {\n      // a valid number, so sanitize it against min/max/step props\n      nextValue = this.sanitizeValue(nextValue);\n      this.inputEl.value = nextValue.toString();\n    }\n\n    // if value has changed, set it and emit event\n    if (nextValue !== previousValue) {\n      this.value = nextValue;\n      this.emitChangeEvent(previousValue);\n    }\n  }\n\n  onInputFocus(): void {\n    this.emitInputFocusEvent();\n  }\n\n  onDecrementClick(): void {\n    this.stepValue(-this.step);\n  }\n\n  onIncrementClick(): void {\n    this.stepValue(this.step);\n  }\n\n  onKeyDown(e: KeyboardEvent) {\n    if (e.key === 'Enter') {\n      submitFormImplicitly(this.el);\n    }\n  }\n\n  stepValue(step: number): void {\n    const previousValue = this.value;\n    const nextValue = (previousValue || 0) + step;\n    const sanitizedValue = this.sanitizeValue(nextValue);\n    if (sanitizedValue !== previousValue) {\n      this.value = sanitizedValue;\n      this.emitChangeEvent(previousValue);\n    }\n  }\n\n  sanitizeValue(value: number): number {\n    const decimalPlaces = this.step.toString().split('.')[1]?.length || 0;\n    const hasMax = this.max !== null && this.max !== undefined;\n    const hasMin = this.min !== null && this.min !== undefined;\n\n    // round value to the nearest step\n    let sanitized = Math.round(value / this.step) * this.step;\n    // correct any floating point math errors\n    sanitized = Number.parseFloat(sanitized.toFixed(decimalPlaces));\n    // limit value to max\n    sanitized = hasMax ? Math.min(sanitized, this.max) : sanitized;\n    // limit value to min\n    return hasMin ? Math.max(sanitized, this.min) : sanitized;\n  }\n\n  updateButtonDisabledStates() {\n    const { value, max, min } = this;\n    const hasValue = value !== null && value !== undefined;\n    this.incrementDisabled = hasValue ? value === max : false;\n    this.decrementDisabled = hasValue ? value === min : false;\n  }\n\n  emitChangeEvent(previousValue) {\n    const { el, value, marketStepperValueChange } = this;\n    marketStepperValueChange.emit({ el, value, previousValue });\n  }\n\n  emitInputFocusEvent() {\n    const { marketStepperInputFocus } = this;\n    marketStepperInputFocus.emit();\n  }\n\n  componentWillRender() {\n    this.updateButtonDisabledStates();\n  }\n\n  render() {\n    return (\n      <Host\n        class=\"market-stepper\"\n        onFocus={() => {\n          this.focused = true;\n        }}\n        onBlur={() => {\n          this.focused = false;\n        }}\n      >\n        <button\n          tabindex={this.disabled || this.decrementDisabled ? -1 : null}\n          disabled={this.disabled || this.decrementDisabled}\n          onClick={() => this.onDecrementClick()}\n          aria-label={this.decrementAriaLabel}\n        >\n          <svg width=\"10\" height=\"2\" viewBox=\"0 0 10 2\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M9.66667 0.333328H0.333336V1.66666H9.66667V0.333328Z\" />\n          </svg>\n        </button>\n        <input\n          ref={(el) => (this.inputEl = el)}\n          type=\"number\"\n          id={this.inputId}\n          name={this.name}\n          readonly={this.readonly}\n          disabled={this.disabled}\n          placeholder={this.placeholder}\n          step={this.step}\n          min={this.min}\n          max={this.max}\n          value={this.value}\n          aria-label={this.inputAriaLabel}\n          onChange={() => this.onChange()}\n          onFocus={() => this.onInputFocus()}\n          onKeyDown={(e) => this.onKeyDown(e)}\n          part=\"native-input\"\n        />\n        <button\n          tabindex={this.disabled || this.incrementDisabled ? -1 : null}\n          disabled={this.disabled || this.incrementDisabled}\n          onClick={() => this.onIncrementClick()}\n          aria-label={this.incrementAriaLabel}\n        >\n          <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M5.66665 9.66666V5.66666H9.66665V4.33333H5.66665V0.333328H4.33331V4.33333H0.333313V5.66666H4.33331V9.66666H5.66665Z\" />\n          </svg>\n        </button>\n      </Host>\n    );\n  }\n}\n"],"version":3}