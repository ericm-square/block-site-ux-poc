{"file":"index.js","mappings":";;0BAIyB,IAAU;;IACjC,MAAM,KAAK,GAAG,IAAW,CAAC;IAC1B,OAAO,CAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,QAAQ,CAAC,SAAS,CAAC,KAAI,OAAO,KAAK,CAAC,gBAAgB,KAAK,UAAU,CAAC;AAC7F;;ACLA;;;;;;;;;;;;;MAcM,sBAAsB,GAAG,OAAO,GAAY;;IAChD,IAAI,CAAC,GAAG,EAAE;QACR,OAAO;KACR;IAED,IAAI,eAAe,CAAC,GAAG,CAAC,EAAE;QACxB,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO;;YACxB,MAAA,GAAG,CAAC,gBAAgB,oDAAK,IAAI,CAAC,CAAC,KAAK;gBAClC,OAAO,CAAC,KAAK,CAAC,CAAC;aAChB,CAAC,CAAC;;YAEH,UAAU,CAAC;gBACT,OAAO,CAAC,IAAI,CAAC,CAAC;aACf,EAAE,GAAG,CAAC,CAAC;SACT,CAAC,CAAC;KACJ;IAED,MAAM,QAAQ,GAAG,CAAC,IAAI,MAAA,GAAG,CAAC,QAAQ,mCAAI,EAAE,CAAC,CAAC,CAAC;IAC3C,MAAM,kBAAkB,GAAG,CAAC,IAAI,MAAA,MAAA,GAAG,CAAC,UAAU,0CAAE,QAAQ,mCAAI,EAAE,CAAC,CAAC,CAAC;IAEjE,MAAM,aAAa,GAAG,CAAC,GAAG,QAAQ,EAAE,GAAG,kBAAkB,CAAC,CAAC,MAAM,CAC/D,CAAC,EAAE,KACD,CAAC;;QAEC,KAAK;;QAEL,SAAS;KACV,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,CACzB,CAAC;IAEF,MAAM,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3E;;;;","names":[],"sources":["src/utils/e2e/is-market-element.ts","src/utils/e2e/market-components-loaded.ts"],"sourcesContent":["interface MarketElement extends Element {\n  componentOnReady: () => Promise<unknown>;\n}\n\nexport default function (node: Node): node is MarketElement {\n  const node_ = node as any;\n  return node_?.tagName?.includes('MARKET-') && typeof node_.componentOnReady === 'function';\n}\n","import isMarketElement from './is-market-element';\n\n/**\n * Returns a promise which does not resolve until all Market components in the\n * root element have loaded. Use before running your React tests to make sure\n * Market elements are ready to be interacted with.\n * Takes an Element as a param, which should represent a root node which holds all the Market components you need to test.\n * You can grab this by getting the baseElement property from the render results used with @testing-library/react.\n *\n * Adapted from prior art here:\n * https://github.com/ionic-team/stencil/blob/45388e95edb46ef357eb9ae37cd32bbb5bc1ed23/test/karma/test-app/util.ts#L88-L106\n *\n * @param {Element} domNode\n * @returns {Promise<void>}\n */\n\nconst marketComponentsLoaded = async (elm: Element) => {\n  if (!elm) {\n    return;\n  }\n\n  if (isMarketElement(elm)) {\n    await new Promise((resolve) => {\n      elm.componentOnReady?.().then((value) => {\n        resolve(value);\n      });\n      // Sometimes elements get destroyed before they resolve componentOnReady and then tests will timeout.\n      setTimeout(() => {\n        resolve(null);\n      }, 200);\n    });\n  }\n\n  const children = [...(elm.children ?? [])];\n  const shadowRootChildren = [...(elm.shadowRoot?.children ?? [])];\n\n  const childElements = [...children, ...shadowRootChildren].filter(\n    (el) =>\n      ![\n        // Market doesn't render inside of SVGs\n        'svg',\n        // Text nodes have an undefined tagName.\n        undefined,\n      ].includes(el.tagName),\n  );\n\n  await Promise.all(childElements.map((el) => marketComponentsLoaded(el)));\n};\n\nexport default marketComponentsLoaded;\n"],"version":3}